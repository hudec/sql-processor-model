/*
* generated by Xtext
*/
package org.sqlproc.model.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.annotations.services.XbaseWithAnnotationsGrammarAccess;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class ProcessorModelGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ArtifactsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Artifacts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArtifactsAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cPropertiesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_1_0_0 = (RuleCall)cPropertiesAssignment_1_0.eContents().get(0);
		private final Assignment cPojosAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cPojosPojoDefinitionParserRuleCall_1_1_0 = (RuleCall)cPojosAssignment_1_1.eContents().get(0);
		private final Assignment cTablesAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cTablesTableDefinitionParserRuleCall_1_2_0 = (RuleCall)cTablesAssignment_1_2.eContents().get(0);
		private final Assignment cProceduresAssignment_1_3 = (Assignment)cAlternatives_1.eContents().get(3);
		private final RuleCall cProceduresProcedureDefinitionParserRuleCall_1_3_0 = (RuleCall)cProceduresAssignment_1_3.eContents().get(0);
		private final Assignment cFunctionsAssignment_1_4 = (Assignment)cAlternatives_1.eContents().get(4);
		private final RuleCall cFunctionsFunctionDefinitionParserRuleCall_1_4_0 = (RuleCall)cFunctionsAssignment_1_4.eContents().get(0);
		private final Assignment cPackagesAssignment_1_5 = (Assignment)cAlternatives_1.eContents().get(5);
		private final RuleCall cPackagesPackageParserRuleCall_1_5_0 = (RuleCall)cPackagesAssignment_1_5.eContents().get(0);
		
		//Artifacts:
		//	{Artifacts} (properties+=Property | pojos+=PojoDefinition | tables+=TableDefinition | procedures+=ProcedureDefinition
		//	| functions+=FunctionDefinition | packages+=Package)*;
		public ParserRule getRule() { return rule; }

		//{Artifacts} (properties+=Property | pojos+=PojoDefinition | tables+=TableDefinition | procedures+=ProcedureDefinition |
		//functions+=FunctionDefinition | packages+=Package)*
		public Group getGroup() { return cGroup; }

		//{Artifacts}
		public Action getArtifactsAction_0() { return cArtifactsAction_0; }

		//(properties+=Property | pojos+=PojoDefinition | tables+=TableDefinition | procedures+=ProcedureDefinition |
		//functions+=FunctionDefinition | packages+=Package)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//properties+=Property
		public Assignment getPropertiesAssignment_1_0() { return cPropertiesAssignment_1_0; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_1_0_0() { return cPropertiesPropertyParserRuleCall_1_0_0; }

		//pojos+=PojoDefinition
		public Assignment getPojosAssignment_1_1() { return cPojosAssignment_1_1; }

		//PojoDefinition
		public RuleCall getPojosPojoDefinitionParserRuleCall_1_1_0() { return cPojosPojoDefinitionParserRuleCall_1_1_0; }

		//tables+=TableDefinition
		public Assignment getTablesAssignment_1_2() { return cTablesAssignment_1_2; }

		//TableDefinition
		public RuleCall getTablesTableDefinitionParserRuleCall_1_2_0() { return cTablesTableDefinitionParserRuleCall_1_2_0; }

		//procedures+=ProcedureDefinition
		public Assignment getProceduresAssignment_1_3() { return cProceduresAssignment_1_3; }

		//ProcedureDefinition
		public RuleCall getProceduresProcedureDefinitionParserRuleCall_1_3_0() { return cProceduresProcedureDefinitionParserRuleCall_1_3_0; }

		//functions+=FunctionDefinition
		public Assignment getFunctionsAssignment_1_4() { return cFunctionsAssignment_1_4; }

		//FunctionDefinition
		public RuleCall getFunctionsFunctionDefinitionParserRuleCall_1_4_0() { return cFunctionsFunctionDefinitionParserRuleCall_1_4_0; }

		//packages+=Package
		public Assignment getPackagesAssignment_1_5() { return cPackagesAssignment_1_5; }

		//Package
		public RuleCall getPackagesPackageParserRuleCall_1_5_0() { return cPackagesPackageParserRuleCall_1_5_0; }
	}

	public class ValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cNumberAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cNumberINTTerminalRuleCall_1_0 = (RuleCall)cNumberAssignment_1.eContents().get(0);
		private final Assignment cIdAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cIdQualifiedNameParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		
		//ValueType:
		//	value=STRING | number=INT | id=QualifiedName;
		public ParserRule getRule() { return rule; }

		//value=STRING | number=INT | id=QualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }

		//value=STRING
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_0() { return cValueSTRINGTerminalRuleCall_0_0; }

		//number=INT
		public Assignment getNumberAssignment_1() { return cNumberAssignment_1; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_1_0() { return cNumberINTTerminalRuleCall_1_0; }

		//id=QualifiedName
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }

		//QualifiedName
		public RuleCall getIdQualifiedNameParserRuleCall_2_0() { return cIdQualifiedNameParserRuleCall_2_0; }
	}

	public class DatabaseCatalogAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseCatalogAssignement");
		private final Assignment cDbCatalogAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbCatalogQualifiedNameParserRuleCall_0 = (RuleCall)cDbCatalogAssignment.eContents().get(0);
		
		//DatabaseCatalogAssignement:
		//	dbCatalog=QualifiedName;
		public ParserRule getRule() { return rule; }

		//dbCatalog=QualifiedName
		public Assignment getDbCatalogAssignment() { return cDbCatalogAssignment; }

		//QualifiedName
		public RuleCall getDbCatalogQualifiedNameParserRuleCall_0() { return cDbCatalogQualifiedNameParserRuleCall_0; }
	}

	public class DatabaseSchemaAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseSchemaAssignement");
		private final Assignment cDbSchemaAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbSchemaQualifiedNameParserRuleCall_0 = (RuleCall)cDbSchemaAssignment.eContents().get(0);
		
		//DatabaseSchemaAssignement:
		//	dbSchema=QualifiedName;
		public ParserRule getRule() { return rule; }

		//dbSchema=QualifiedName
		public Assignment getDbSchemaAssignment() { return cDbSchemaAssignment; }

		//QualifiedName
		public RuleCall getDbSchemaQualifiedNameParserRuleCall_0() { return cDbSchemaQualifiedNameParserRuleCall_0; }
	}

	public class DatabaseTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseTypeAssignement");
		private final Assignment cDbTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbTypeValidIDParserRuleCall_0 = (RuleCall)cDbTypeAssignment.eContents().get(0);
		
		//DatabaseTypeAssignement:
		//	dbType=ValidID;
		public ParserRule getRule() { return rule; }

		//dbType=ValidID
		public Assignment getDbTypeAssignment() { return cDbTypeAssignment; }

		//ValidID
		public RuleCall getDbTypeValidIDParserRuleCall_0() { return cDbTypeValidIDParserRuleCall_0; }
	}

	public class DatabaseMetaInfoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseMetaInfoAssignement");
		private final Assignment cDbMetaInfoAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbMetaInfoValueTypeParserRuleCall_0 = (RuleCall)cDbMetaInfoAssignment.eContents().get(0);
		
		//DatabaseMetaInfoAssignement:
		//	dbMetaInfo=ValueType;
		public ParserRule getRule() { return rule; }

		//dbMetaInfo=ValueType
		public Assignment getDbMetaInfoAssignment() { return cDbMetaInfoAssignment; }

		//ValueType
		public RuleCall getDbMetaInfoValueTypeParserRuleCall_0() { return cDbMetaInfoValueTypeParserRuleCall_0; }
	}

	public class DriverMetaInfoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DriverMetaInfoAssignement");
		private final Assignment cDbDriverInfoAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbDriverInfoValueTypeParserRuleCall_0 = (RuleCall)cDbDriverInfoAssignment.eContents().get(0);
		
		//DriverMetaInfoAssignement:
		//	dbDriverInfo=ValueType;
		public ParserRule getRule() { return rule; }

		//dbDriverInfo=ValueType
		public Assignment getDbDriverInfoAssignment() { return cDbDriverInfoAssignment; }

		//ValueType
		public RuleCall getDbDriverInfoValueTypeParserRuleCall_0() { return cDbDriverInfoValueTypeParserRuleCall_0; }
	}

	public class DriverMethodOutputAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DriverMethodOutputAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDriverMethodAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDriverMethodValidIDParserRuleCall_0_0 = (RuleCall)cDriverMethodAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCallOutputAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCallOutputValueTypeParserRuleCall_2_0 = (RuleCall)cCallOutputAssignment_2.eContents().get(0);
		
		//DriverMethodOutputAssignement:
		//	driverMethod=ValidID "->" callOutput=ValueType;
		public ParserRule getRule() { return rule; }

		//driverMethod=ValidID "->" callOutput=ValueType
		public Group getGroup() { return cGroup; }

		//driverMethod=ValidID
		public Assignment getDriverMethodAssignment_0() { return cDriverMethodAssignment_0; }

		//ValidID
		public RuleCall getDriverMethodValidIDParserRuleCall_0_0() { return cDriverMethodValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//callOutput=ValueType
		public Assignment getCallOutputAssignment_2() { return cCallOutputAssignment_2; }

		//ValueType
		public RuleCall getCallOutputValueTypeParserRuleCall_2_0() { return cCallOutputValueTypeParserRuleCall_2_0; }
	}

	public class SqlTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SqlTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSqlTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSqlTypeValueTypeParserRuleCall_0_0 = (RuleCall)cSqlTypeAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//SqlTypeAssignement:
		//	sqlType=ValueType "->" ":"? type=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//sqlType=ValueType "->" ":"? type=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//sqlType=ValueType
		public Assignment getSqlTypeAssignment_0() { return cSqlTypeAssignment_0; }

		//ValueType
		public RuleCall getSqlTypeValueTypeParserRuleCall_0_0() { return cSqlTypeValueTypeParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//":"?
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=JvmParameterizedTypeReference
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_3_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_3_0; }
	}

	public class ColumnTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColumnTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnValidIDParserRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//ColumnTypeAssignement:
		//	dbColumn=ValidID "->" ":"? type=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//dbColumn=ValidID "->" ":"? type=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_0_0() { return cDbColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//":"?
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=JvmParameterizedTypeReference
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_3_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_3_0; }
	}

	public class ShowColumnTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShowColumnTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnValidIDParserRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeValueTypeParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//ShowColumnTypeAssignement:
		//	dbColumn=ValidID "->" type=ValueType;
		public ParserRule getRule() { return rule; }

		//dbColumn=ValidID "->" type=ValueType
		public Group getGroup() { return cGroup; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_0_0() { return cDbColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//type=ValueType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//ValueType
		public RuleCall getTypeValueTypeParserRuleCall_2_0() { return cTypeValueTypeParserRuleCall_2_0; }
	}

	public class TableAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbTableValidIDParserRuleCall_0_0 = (RuleCall)cDbTableAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewNameValidIDParserRuleCall_2_0 = (RuleCall)cNewNameAssignment_2.eContents().get(0);
		
		//TableAssignement:
		//	dbTable=ValidID "->" newName=ValidID;
		public ParserRule getRule() { return rule; }

		//dbTable=ValidID "->" newName=ValidID
		public Group getGroup() { return cGroup; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_0() { return cDbTableAssignment_0; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_0_0() { return cDbTableValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//newName=ValidID
		public Assignment getNewNameAssignment_2() { return cNewNameAssignment_2; }

		//ValidID
		public RuleCall getNewNameValidIDParserRuleCall_2_0() { return cNewNameValidIDParserRuleCall_2_0; }
	}

	public class JoinTableAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JoinTableAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbTableValidIDParserRuleCall_0_0 = (RuleCall)cDbTableAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_1_1_0 = (RuleCall)cDbTablesAssignment_1_1.eContents().get(0);
		
		//JoinTableAssignement:
		//	dbTable=ValidID ("->" dbTables+=ValidID)+;
		public ParserRule getRule() { return rule; }

		//dbTable=ValidID ("->" dbTables+=ValidID)+
		public Group getGroup() { return cGroup; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_0() { return cDbTableAssignment_0; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_0_0() { return cDbTableValidIDParserRuleCall_0_0; }

		//("->" dbTables+=ValidID)+
		public Group getGroup_1() { return cGroup_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_0() { return cHyphenMinusGreaterThanSignKeyword_1_0; }

		//dbTables+=ValidID
		public Assignment getDbTablesAssignment_1_1() { return cDbTablesAssignment_1_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_1_1_0() { return cDbTablesValidIDParserRuleCall_1_1_0; }
	}

	public class ColumnAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColumnAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnValidIDParserRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewNameValidIDParserRuleCall_2_0 = (RuleCall)cNewNameAssignment_2.eContents().get(0);
		
		//ColumnAssignement:
		//	dbColumn=ValidID "->" newName=ValidID;
		public ParserRule getRule() { return rule; }

		//dbColumn=ValidID "->" newName=ValidID
		public Group getGroup() { return cGroup; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_0_0() { return cDbColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//newName=ValidID
		public Assignment getNewNameAssignment_2() { return cNewNameAssignment_2; }

		//ValidID
		public RuleCall getNewNameValidIDParserRuleCall_2_0() { return cNewNameValidIDParserRuleCall_2_0; }
	}

	public class ImportAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnValidIDParserRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPkTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPkTableValidIDParserRuleCall_2_0 = (RuleCall)cPkTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPkColumnAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPkColumnValidIDParserRuleCall_3_1_0 = (RuleCall)cPkColumnAssignment_3_1.eContents().get(0);
		
		//ImportAssignement:
		//	dbColumn=ValidID "->" pkTable=ValidID ("->" pkColumn=ValidID)?;
		public ParserRule getRule() { return rule; }

		//dbColumn=ValidID "->" pkTable=ValidID ("->" pkColumn=ValidID)?
		public Group getGroup() { return cGroup; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_0_0() { return cDbColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//pkTable=ValidID
		public Assignment getPkTableAssignment_2() { return cPkTableAssignment_2; }

		//ValidID
		public RuleCall getPkTableValidIDParserRuleCall_2_0() { return cPkTableValidIDParserRuleCall_2_0; }

		//("->" pkColumn=ValidID)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//pkColumn=ValidID
		public Assignment getPkColumnAssignment_3_1() { return cPkColumnAssignment_3_1; }

		//ValidID
		public RuleCall getPkColumnValidIDParserRuleCall_3_1_0() { return cPkColumnValidIDParserRuleCall_3_1_0; }
	}

	public class ExportAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExportAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnValidIDParserRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFkTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFkTableValidIDParserRuleCall_2_0 = (RuleCall)cFkTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFkColumnAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFkColumnValidIDParserRuleCall_3_1_0 = (RuleCall)cFkColumnAssignment_3_1.eContents().get(0);
		
		//ExportAssignement:
		//	dbColumn=ValidID "->" fkTable=ValidID ("->" fkColumn=ValidID)?;
		public ParserRule getRule() { return rule; }

		//dbColumn=ValidID "->" fkTable=ValidID ("->" fkColumn=ValidID)?
		public Group getGroup() { return cGroup; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_0_0() { return cDbColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//fkTable=ValidID
		public Assignment getFkTableAssignment_2() { return cFkTableAssignment_2; }

		//ValidID
		public RuleCall getFkTableValidIDParserRuleCall_2_0() { return cFkTableValidIDParserRuleCall_2_0; }

		//("->" fkColumn=ValidID)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//fkColumn=ValidID
		public Assignment getFkColumnAssignment_3_1() { return cFkColumnAssignment_3_1; }

		//ValidID
		public RuleCall getFkColumnValidIDParserRuleCall_3_1_0() { return cFkColumnValidIDParserRuleCall_3_1_0; }
	}

	public class InheritanceAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InheritanceAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDiscriminatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDiscriminatorValidIDParserRuleCall_0_0 = (RuleCall)cDiscriminatorAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDbTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDbTableValidIDParserRuleCall_2_0 = (RuleCall)cDbTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDbColumnsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbColumnsValidIDParserRuleCall_3_1_0 = (RuleCall)cDbColumnsAssignment_3_1.eContents().get(0);
		
		//InheritanceAssignement:
		//	discriminator=ValidID "->" dbTable=ValidID ("->" dbColumns+=ValidID)+;
		public ParserRule getRule() { return rule; }

		//discriminator=ValidID "->" dbTable=ValidID ("->" dbColumns+=ValidID)+
		public Group getGroup() { return cGroup; }

		//discriminator=ValidID
		public Assignment getDiscriminatorAssignment_0() { return cDiscriminatorAssignment_0; }

		//ValidID
		public RuleCall getDiscriminatorValidIDParserRuleCall_0_0() { return cDiscriminatorValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_2() { return cDbTableAssignment_2; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_2_0() { return cDbTableValidIDParserRuleCall_2_0; }

		//("->" dbColumns+=ValidID)+
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//dbColumns+=ValidID
		public Assignment getDbColumnsAssignment_3_1() { return cDbColumnsAssignment_3_1; }

		//ValidID
		public RuleCall getDbColumnsValidIDParserRuleCall_3_1_0() { return cDbColumnsValidIDParserRuleCall_3_1_0; }
	}

	public class ManyToManyAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ManyToManyAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPkColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPkColumnValidIDParserRuleCall_0_0 = (RuleCall)cPkColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPkTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPkTableValidIDParserRuleCall_2_0 = (RuleCall)cPkTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFkColumnAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFkColumnValidIDParserRuleCall_3_1_0 = (RuleCall)cFkColumnAssignment_3_1.eContents().get(0);
		
		//ManyToManyAssignement:
		//	pkColumn=ValidID "->" pkTable=ValidID ("->" fkColumn=ValidID)?;
		public ParserRule getRule() { return rule; }

		//pkColumn=ValidID "->" pkTable=ValidID ("->" fkColumn=ValidID)?
		public Group getGroup() { return cGroup; }

		//pkColumn=ValidID
		public Assignment getPkColumnAssignment_0() { return cPkColumnAssignment_0; }

		//ValidID
		public RuleCall getPkColumnValidIDParserRuleCall_0_0() { return cPkColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//pkTable=ValidID
		public Assignment getPkTableAssignment_2() { return cPkTableAssignment_2; }

		//ValidID
		public RuleCall getPkTableValidIDParserRuleCall_2_0() { return cPkTableValidIDParserRuleCall_2_0; }

		//("->" fkColumn=ValidID)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//fkColumn=ValidID
		public Assignment getFkColumnAssignment_3_1() { return cFkColumnAssignment_3_1; }

		//ValidID
		public RuleCall getFkColumnValidIDParserRuleCall_3_1_0() { return cFkColumnValidIDParserRuleCall_3_1_0; }
	}

	public class DebugLevelAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DebugLevelAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDebugAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDebugValidIDParserRuleCall_0_0 = (RuleCall)cDebugAssignment_0.eContents().get(0);
		private final Assignment cScopeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cScopeValidIDParserRuleCall_1_0 = (RuleCall)cScopeAssignment_1.eContents().get(0);
		
		//DebugLevelAssignement:
		//	debug=ValidID scope=ValidID?;
		public ParserRule getRule() { return rule; }

		//debug=ValidID scope=ValidID?
		public Group getGroup() { return cGroup; }

		//debug=ValidID
		public Assignment getDebugAssignment_0() { return cDebugAssignment_0; }

		//ValidID
		public RuleCall getDebugValidIDParserRuleCall_0_0() { return cDebugValidIDParserRuleCall_0_0; }

		//scope=ValidID?
		public Assignment getScopeAssignment_1() { return cScopeAssignment_1; }

		//ValidID
		public RuleCall getScopeValidIDParserRuleCall_1_0() { return cScopeValidIDParserRuleCall_1_0; }
	}

	public class ProcedurePojoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcedurePojoAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbProcedureAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbProcedureValidIDParserRuleCall_0_0 = (RuleCall)cDbProcedureAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPojoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPojoJvmParameterizedTypeReferenceParserRuleCall_3_0 = (RuleCall)cPojoAssignment_3.eContents().get(0);
		
		//ProcedurePojoAssignement:
		//	dbProcedure=ValidID "->" ":"? pojo=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//dbProcedure=ValidID "->" ":"? pojo=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//dbProcedure=ValidID
		public Assignment getDbProcedureAssignment_0() { return cDbProcedureAssignment_0; }

		//ValidID
		public RuleCall getDbProcedureValidIDParserRuleCall_0_0() { return cDbProcedureValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//":"?
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//pojo=JvmParameterizedTypeReference
		public Assignment getPojoAssignment_3() { return cPojoAssignment_3; }

		//JvmParameterizedTypeReference
		public RuleCall getPojoJvmParameterizedTypeReferenceParserRuleCall_3_0() { return cPojoJvmParameterizedTypeReferenceParserRuleCall_3_0; }
	}

	public class FunctionPojoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunctionPojoAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbFunctionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbFunctionValidIDParserRuleCall_0_0 = (RuleCall)cDbFunctionAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPojoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPojoJvmParameterizedTypeReferenceParserRuleCall_3_0 = (RuleCall)cPojoAssignment_3.eContents().get(0);
		
		//FunctionPojoAssignement:
		//	dbFunction=ValidID "->" ":"? pojo=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//dbFunction=ValidID "->" ":"? pojo=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//dbFunction=ValidID
		public Assignment getDbFunctionAssignment_0() { return cDbFunctionAssignment_0; }

		//ValidID
		public RuleCall getDbFunctionValidIDParserRuleCall_0_0() { return cDbFunctionValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//":"?
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//pojo=JvmParameterizedTypeReference
		public Assignment getPojoAssignment_3() { return cPojoAssignment_3; }

		//JvmParameterizedTypeReference
		public RuleCall getPojoJvmParameterizedTypeReferenceParserRuleCall_3_0() { return cPojoJvmParameterizedTypeReferenceParserRuleCall_3_0; }
	}

	public class ImplementsAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplementsAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cToImplementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cToImplementJvmParameterizedTypeReferenceParserRuleCall_1_0 = (RuleCall)cToImplementAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPlusSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_2_1_0 = (RuleCall)cDbTablesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_3_1_0 = (RuleCall)cDbNotTablesAssignment_3_1.eContents().get(0);
		
		//ImplementsAssignement:
		//	":" toImplement=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
		public ParserRule getRule() { return rule; }

		//":" toImplement=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//toImplement=JvmParameterizedTypeReference
		public Assignment getToImplementAssignment_1() { return cToImplementAssignment_1; }

		//JvmParameterizedTypeReference
		public RuleCall getToImplementJvmParameterizedTypeReferenceParserRuleCall_1_0() { return cToImplementJvmParameterizedTypeReferenceParserRuleCall_1_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_2() { return cGroup_2; }

		//"+"
		public Keyword getPlusSignKeyword_2_0() { return cPlusSignKeyword_2_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_2_1() { return cDbTablesAssignment_2_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_2_1_0() { return cDbTablesValidIDParserRuleCall_2_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_3() { return cGroup_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_3_0() { return cHyphenMinusKeyword_3_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_3_1() { return cDbNotTablesAssignment_3_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_3_1_0() { return cDbNotTablesValidIDParserRuleCall_3_1_0; }
	}

	public class ExtendsAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtendsAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cToExtendsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cToExtendsJvmParameterizedTypeReferenceParserRuleCall_1_0 = (RuleCall)cToExtendsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPlusSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_2_1_0 = (RuleCall)cDbTablesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_3_1_0 = (RuleCall)cDbNotTablesAssignment_3_1.eContents().get(0);
		
		//ExtendsAssignement:
		//	":" toExtends=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
		public ParserRule getRule() { return rule; }

		//":" toExtends=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//toExtends=JvmParameterizedTypeReference
		public Assignment getToExtendsAssignment_1() { return cToExtendsAssignment_1; }

		//JvmParameterizedTypeReference
		public RuleCall getToExtendsJvmParameterizedTypeReferenceParserRuleCall_1_0() { return cToExtendsJvmParameterizedTypeReferenceParserRuleCall_1_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_2() { return cGroup_2; }

		//"+"
		public Keyword getPlusSignKeyword_2_0() { return cPlusSignKeyword_2_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_2_1() { return cDbTablesAssignment_2_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_2_1_0() { return cDbTablesValidIDParserRuleCall_2_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_3() { return cGroup_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_3_0() { return cHyphenMinusKeyword_3_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_3_1() { return cDbNotTablesAssignment_3_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_3_1_0() { return cDbNotTablesValidIDParserRuleCall_3_1_0; }
	}

	public class ImplementsAssignementGenericsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplementsAssignementGenerics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cToImplementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cToImplementJvmParameterizedTypeReferenceParserRuleCall_1_0 = (RuleCall)cToImplementAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPlusSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_2_1_0 = (RuleCall)cDbTablesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_3_1_0 = (RuleCall)cDbNotTablesAssignment_3_1.eContents().get(0);
		
		//ImplementsAssignementGenerics:
		//	":" toImplement=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
		public ParserRule getRule() { return rule; }

		//":" toImplement=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//toImplement=JvmParameterizedTypeReference
		public Assignment getToImplementAssignment_1() { return cToImplementAssignment_1; }

		//JvmParameterizedTypeReference
		public RuleCall getToImplementJvmParameterizedTypeReferenceParserRuleCall_1_0() { return cToImplementJvmParameterizedTypeReferenceParserRuleCall_1_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_2() { return cGroup_2; }

		//"+"
		public Keyword getPlusSignKeyword_2_0() { return cPlusSignKeyword_2_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_2_1() { return cDbTablesAssignment_2_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_2_1_0() { return cDbTablesValidIDParserRuleCall_2_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_3() { return cGroup_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_3_0() { return cHyphenMinusKeyword_3_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_3_1() { return cDbNotTablesAssignment_3_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_3_1_0() { return cDbNotTablesValidIDParserRuleCall_3_1_0; }
	}

	public class ExtendsAssignementGenericsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtendsAssignementGenerics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cToExtendsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cToExtendsJvmParameterizedTypeReferenceParserRuleCall_1_0 = (RuleCall)cToExtendsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPlusSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_2_1_0 = (RuleCall)cDbTablesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_3_1_0 = (RuleCall)cDbNotTablesAssignment_3_1.eContents().get(0);
		
		//ExtendsAssignementGenerics:
		//	":" toExtends=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
		public ParserRule getRule() { return rule; }

		//":" toExtends=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//toExtends=JvmParameterizedTypeReference
		public Assignment getToExtendsAssignment_1() { return cToExtendsAssignment_1; }

		//JvmParameterizedTypeReference
		public RuleCall getToExtendsJvmParameterizedTypeReferenceParserRuleCall_1_0() { return cToExtendsJvmParameterizedTypeReferenceParserRuleCall_1_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_2() { return cGroup_2; }

		//"+"
		public Keyword getPlusSignKeyword_2_0() { return cPlusSignKeyword_2_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_2_1() { return cDbTablesAssignment_2_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_2_1_0() { return cDbTablesValidIDParserRuleCall_2_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_3() { return cGroup_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_3_0() { return cHyphenMinusKeyword_3_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_3_1() { return cDbNotTablesAssignment_3_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_3_1_0() { return cDbNotTablesValidIDParserRuleCall_3_1_0; }
	}

	public class PropertyConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertyCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueValueTypeParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PropertyCondition:
		//	"{" name=ValidID "=" value=ValueType "}";
		public ParserRule getRule() { return rule; }

		//"{" name=ValidID "=" value=ValueType "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=ValueType
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//ValueType
		public RuleCall getValueValueTypeParserRuleCall_3_0() { return cValueValueTypeParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cConditionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cConditionPropertyConditionParserRuleCall_0_0 = (RuleCall)cConditionAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cNameResolvePojoOnKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cNameResolvePojoOffKeyword_1_1_0 = (Keyword)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cNameAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final Keyword cNameDatabaseKeyword_1_2_0_0 = (Keyword)cNameAssignment_1_2_0.eContents().get(0);
		private final Assignment cDatabaseAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDatabaseDatabasePropertyParserRuleCall_1_2_1_0 = (RuleCall)cDatabaseAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Assignment cNameAssignment_1_3_0 = (Assignment)cGroup_1_3.eContents().get(0);
		private final Keyword cNamePojogenKeyword_1_3_0_0 = (Keyword)cNameAssignment_1_3_0.eContents().get(0);
		private final Assignment cPojogenAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cPojogenPojogenPropertyParserRuleCall_1_3_1_0 = (RuleCall)cPojogenAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Assignment cNameAssignment_1_4_0 = (Assignment)cGroup_1_4.eContents().get(0);
		private final Keyword cNameMetagenKeyword_1_4_0_0 = (Keyword)cNameAssignment_1_4_0.eContents().get(0);
		private final Assignment cMetagenAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cMetagenMetagenPropertyParserRuleCall_1_4_1_0 = (RuleCall)cMetagenAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cAlternatives_1.eContents().get(5);
		private final Assignment cNameAssignment_1_5_0 = (Assignment)cGroup_1_5.eContents().get(0);
		private final Keyword cNameDaogenKeyword_1_5_0_0 = (Keyword)cNameAssignment_1_5_0.eContents().get(0);
		private final Assignment cDaogenAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cDaogenDaogenPropertyParserRuleCall_1_5_1_0 = (RuleCall)cDaogenAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cAlternatives_1.eContents().get(6);
		private final Assignment cNameAssignment_1_6_0 = (Assignment)cGroup_1_6.eContents().get(0);
		private final Keyword cNameReplaceAllRegexKeyword_1_6_0_0 = (Keyword)cNameAssignment_1_6_0.eContents().get(0);
		private final Assignment cReplaceIdAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cReplaceIdValidIDParserRuleCall_1_6_1_0 = (RuleCall)cReplaceIdAssignment_1_6_1.eContents().get(0);
		private final Assignment cRegexAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cRegexValueTypeParserRuleCall_1_6_2_0 = (RuleCall)cRegexAssignment_1_6_2.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cAlternatives_1.eContents().get(7);
		private final Assignment cNameAssignment_1_7_0 = (Assignment)cGroup_1_7.eContents().get(0);
		private final Keyword cNameReplaceAllReplacementKeyword_1_7_0_0 = (Keyword)cNameAssignment_1_7_0.eContents().get(0);
		private final Assignment cReplaceIdAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cReplaceIdValidIDParserRuleCall_1_7_1_0 = (RuleCall)cReplaceIdAssignment_1_7_1.eContents().get(0);
		private final Assignment cReplacementAssignment_1_7_2 = (Assignment)cGroup_1_7.eContents().get(2);
		private final RuleCall cReplacementValueTypeParserRuleCall_1_7_2_0 = (RuleCall)cReplacementAssignment_1_7_2.eContents().get(0);
		private final Assignment cNameAssignment_1_8 = (Assignment)cAlternatives_1.eContents().get(8);
		private final Keyword cNameCompressMetaDirectivesKeyword_1_8_0 = (Keyword)cNameAssignment_1_8.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Property:
		//	condition=PropertyCondition? (name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-"
		//	database=DatabaseProperty | name="pojogen-" pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty |
		//	name="daogen-" daogen=DaogenProperty | name="replace-all-regex" replaceId=ValidID regex=ValueType |
		//	name="replace-all-replacement" replaceId=ValidID replacement=ValueType | name="compress-meta-directives") ";";
		public ParserRule getRule() { return rule; }

		//condition=PropertyCondition? (name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-"
		//database=DatabaseProperty | name="pojogen-" pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty |
		//name="daogen-" daogen=DaogenProperty | name="replace-all-regex" replaceId=ValidID regex=ValueType |
		//name="replace-all-replacement" replaceId=ValidID replacement=ValueType | name="compress-meta-directives") ";"
		public Group getGroup() { return cGroup; }

		//condition=PropertyCondition?
		public Assignment getConditionAssignment_0() { return cConditionAssignment_0; }

		//PropertyCondition
		public RuleCall getConditionPropertyConditionParserRuleCall_0_0() { return cConditionPropertyConditionParserRuleCall_0_0; }

		//name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-" database=DatabaseProperty | name="pojogen-"
		//pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty | name="daogen-" daogen=DaogenProperty |
		//name="replace-all-regex" replaceId=ValidID regex=ValueType | name="replace-all-replacement" replaceId=ValidID
		//replacement=ValueType | name="compress-meta-directives"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//name="resolve-pojo-on"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"resolve-pojo-on"
		public Keyword getNameResolvePojoOnKeyword_1_0_0() { return cNameResolvePojoOnKeyword_1_0_0; }

		//name="resolve-pojo-off"
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//"resolve-pojo-off"
		public Keyword getNameResolvePojoOffKeyword_1_1_0() { return cNameResolvePojoOffKeyword_1_1_0; }

		//name="database-" database=DatabaseProperty
		public Group getGroup_1_2() { return cGroup_1_2; }

		//name="database-"
		public Assignment getNameAssignment_1_2_0() { return cNameAssignment_1_2_0; }

		//"database-"
		public Keyword getNameDatabaseKeyword_1_2_0_0() { return cNameDatabaseKeyword_1_2_0_0; }

		//database=DatabaseProperty
		public Assignment getDatabaseAssignment_1_2_1() { return cDatabaseAssignment_1_2_1; }

		//DatabaseProperty
		public RuleCall getDatabaseDatabasePropertyParserRuleCall_1_2_1_0() { return cDatabaseDatabasePropertyParserRuleCall_1_2_1_0; }

		//name="pojogen-" pojogen=PojogenProperty
		public Group getGroup_1_3() { return cGroup_1_3; }

		//name="pojogen-"
		public Assignment getNameAssignment_1_3_0() { return cNameAssignment_1_3_0; }

		//"pojogen-"
		public Keyword getNamePojogenKeyword_1_3_0_0() { return cNamePojogenKeyword_1_3_0_0; }

		//pojogen=PojogenProperty
		public Assignment getPojogenAssignment_1_3_1() { return cPojogenAssignment_1_3_1; }

		//PojogenProperty
		public RuleCall getPojogenPojogenPropertyParserRuleCall_1_3_1_0() { return cPojogenPojogenPropertyParserRuleCall_1_3_1_0; }

		//name="metagen-" metagen=MetagenProperty
		public Group getGroup_1_4() { return cGroup_1_4; }

		//name="metagen-"
		public Assignment getNameAssignment_1_4_0() { return cNameAssignment_1_4_0; }

		//"metagen-"
		public Keyword getNameMetagenKeyword_1_4_0_0() { return cNameMetagenKeyword_1_4_0_0; }

		//metagen=MetagenProperty
		public Assignment getMetagenAssignment_1_4_1() { return cMetagenAssignment_1_4_1; }

		//MetagenProperty
		public RuleCall getMetagenMetagenPropertyParserRuleCall_1_4_1_0() { return cMetagenMetagenPropertyParserRuleCall_1_4_1_0; }

		//name="daogen-" daogen=DaogenProperty
		public Group getGroup_1_5() { return cGroup_1_5; }

		//name="daogen-"
		public Assignment getNameAssignment_1_5_0() { return cNameAssignment_1_5_0; }

		//"daogen-"
		public Keyword getNameDaogenKeyword_1_5_0_0() { return cNameDaogenKeyword_1_5_0_0; }

		//daogen=DaogenProperty
		public Assignment getDaogenAssignment_1_5_1() { return cDaogenAssignment_1_5_1; }

		//DaogenProperty
		public RuleCall getDaogenDaogenPropertyParserRuleCall_1_5_1_0() { return cDaogenDaogenPropertyParserRuleCall_1_5_1_0; }

		//name="replace-all-regex" replaceId=ValidID regex=ValueType
		public Group getGroup_1_6() { return cGroup_1_6; }

		//name="replace-all-regex"
		public Assignment getNameAssignment_1_6_0() { return cNameAssignment_1_6_0; }

		//"replace-all-regex"
		public Keyword getNameReplaceAllRegexKeyword_1_6_0_0() { return cNameReplaceAllRegexKeyword_1_6_0_0; }

		//replaceId=ValidID
		public Assignment getReplaceIdAssignment_1_6_1() { return cReplaceIdAssignment_1_6_1; }

		//ValidID
		public RuleCall getReplaceIdValidIDParserRuleCall_1_6_1_0() { return cReplaceIdValidIDParserRuleCall_1_6_1_0; }

		//regex=ValueType
		public Assignment getRegexAssignment_1_6_2() { return cRegexAssignment_1_6_2; }

		//ValueType
		public RuleCall getRegexValueTypeParserRuleCall_1_6_2_0() { return cRegexValueTypeParserRuleCall_1_6_2_0; }

		//name="replace-all-replacement" replaceId=ValidID replacement=ValueType
		public Group getGroup_1_7() { return cGroup_1_7; }

		//name="replace-all-replacement"
		public Assignment getNameAssignment_1_7_0() { return cNameAssignment_1_7_0; }

		//"replace-all-replacement"
		public Keyword getNameReplaceAllReplacementKeyword_1_7_0_0() { return cNameReplaceAllReplacementKeyword_1_7_0_0; }

		//replaceId=ValidID
		public Assignment getReplaceIdAssignment_1_7_1() { return cReplaceIdAssignment_1_7_1; }

		//ValidID
		public RuleCall getReplaceIdValidIDParserRuleCall_1_7_1_0() { return cReplaceIdValidIDParserRuleCall_1_7_1_0; }

		//replacement=ValueType
		public Assignment getReplacementAssignment_1_7_2() { return cReplacementAssignment_1_7_2; }

		//ValueType
		public RuleCall getReplacementValueTypeParserRuleCall_1_7_2_0() { return cReplacementValueTypeParserRuleCall_1_7_2_0; }

		//name="compress-meta-directives"
		public Assignment getNameAssignment_1_8() { return cNameAssignment_1_8; }

		//"compress-meta-directives"
		public Keyword getNameCompressMetaDirectivesKeyword_1_8_0() { return cNameCompressMetaDirectivesKeyword_1_8_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class DatabasePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cNameIsOnlineKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cNameIsOfflineKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameHasUrlKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Assignment cDbUrlAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDbUrlValueTypeParserRuleCall_2_1_0 = (RuleCall)cDbUrlAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameLoginUsernameKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final Assignment cDbUsernameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbUsernameValueTypeParserRuleCall_3_1_0 = (RuleCall)cDbUsernameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameLoginPasswordKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final Assignment cDbPasswordAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDbPasswordValueTypeParserRuleCall_4_1_0 = (RuleCall)cDbPasswordAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameInCatalogKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final Assignment cDbCatalogAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDbCatalogDatabaseCatalogAssignementParserRuleCall_5_1_0 = (RuleCall)cDbCatalogAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cNameAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cNameActiveSchemaKeyword_6_0_0 = (Keyword)cNameAssignment_6_0.eContents().get(0);
		private final Assignment cDbSchemaAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDbSchemaDatabaseSchemaAssignementParserRuleCall_6_1_0 = (RuleCall)cDbSchemaAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameJdbcDriverKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final Alternatives cAlternatives_7_1 = (Alternatives)cGroup_7.eContents().get(1);
		private final Group cGroup_7_1_0 = (Group)cAlternatives_7_1.eContents().get(0);
		private final Keyword cColonKeyword_7_1_0_0 = (Keyword)cGroup_7_1_0.eContents().get(0);
		private final Assignment cDbDriverxAssignment_7_1_0_1 = (Assignment)cGroup_7_1_0.eContents().get(1);
		private final RuleCall cDbDriverxJvmParameterizedTypeReferenceParserRuleCall_7_1_0_1_0 = (RuleCall)cDbDriverxAssignment_7_1_0_1.eContents().get(0);
		private final Assignment cDbDriverAssignment_7_1_1 = (Assignment)cAlternatives_7_1.eContents().get(1);
		private final RuleCall cDbDriverValueTypeParserRuleCall_7_1_1_0 = (RuleCall)cDbDriverAssignment_7_1_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameDdlCreateKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final Assignment cDbExecuteBeforeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDbExecuteBeforeValueTypeParserRuleCall_8_1_0 = (RuleCall)cDbExecuteBeforeAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cNameAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cNameDdlDropKeyword_9_0_0 = (Keyword)cNameAssignment_9_0.eContents().get(0);
		private final Assignment cDbExecuteAfterAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDbExecuteAfterValueTypeParserRuleCall_9_1_0 = (RuleCall)cDbExecuteAfterAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cNameAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cNameIndexTypesKeyword_10_0_0 = (Keyword)cNameAssignment_10_0.eContents().get(0);
		private final Assignment cDbIndexTypesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDbIndexTypesValueTypeParserRuleCall_10_1_0 = (RuleCall)cDbIndexTypesAssignment_10_1.eContents().get(0);
		private final Assignment cNameAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cNameSkipIndexesKeyword_11_0 = (Keyword)cNameAssignment_11.eContents().get(0);
		private final Assignment cNameAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cNameSkipFunctionsProceduresKeyword_12_0 = (Keyword)cNameAssignment_12.eContents().get(0);
		private final Assignment cNameAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final Keyword cNameSkipCheckConstraintsKeyword_13_0 = (Keyword)cNameAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cNameAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cNameIsOfTypeKeyword_14_0_0 = (Keyword)cNameAssignment_14_0.eContents().get(0);
		private final Assignment cDbTypeAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cDbTypeDatabaseTypeAssignementParserRuleCall_14_1_0 = (RuleCall)cDbTypeAssignment_14_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cNameAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cNameShowDatabaseInfoKeyword_15_0_0 = (Keyword)cNameAssignment_15_0.eContents().get(0);
		private final Assignment cDbMetaInfoAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_1_0 = (RuleCall)cDbMetaInfoAssignment_15_1.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cNameAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cNameShowDriverInfoKeyword_16_0_0 = (Keyword)cNameAssignment_16_0.eContents().get(0);
		private final Assignment cDbDriverInfoAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_1_0 = (RuleCall)cDbDriverInfoAssignment_16_1.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Assignment cNameAssignment_17_0 = (Assignment)cGroup_17.eContents().get(0);
		private final Keyword cNameShowDriverOutputKeyword_17_0_0 = (Keyword)cNameAssignment_17_0.eContents().get(0);
		private final Assignment cDbMethodsCallsAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_0 = (RuleCall)cDbMethodsCallsAssignment_17_1.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cNameAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_18_0_0 = (Keyword)cNameAssignment_18_0.eContents().get(0);
		private final Assignment cDebugAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_18_1_0 = (RuleCall)cDebugAssignment_18_1.eContents().get(0);
		private final Assignment cNameAssignment_19 = (Assignment)cAlternatives.eContents().get(19);
		private final Keyword cNameTakeCommentsKeyword_19_0 = (Keyword)cNameAssignment_19.eContents().get(0);
		private final Assignment cNameAssignment_20 = (Assignment)cAlternatives.eContents().get(20);
		private final Keyword cNameLowercaseNamesKeyword_20_0 = (Keyword)cNameAssignment_20.eContents().get(0);
		private final Assignment cNameAssignment_21 = (Assignment)cAlternatives.eContents().get(21);
		private final Keyword cNameUppercaseNamesKeyword_21_0 = (Keyword)cNameAssignment_21.eContents().get(0);
		
		//DatabaseProperty:
		//	name="is-online" | name="is-offline" | name="has-url" dbUrl=ValueType | name="login-username" dbUsername=ValueType |
		//	name="login-password" dbPassword=ValueType | name="in-catalog" dbCatalog=DatabaseCatalogAssignement |
		//	name="active-schema" dbSchema=DatabaseSchemaAssignement | name="jdbc-driver" (":"
		//	dbDriverx=JvmParameterizedTypeReference | dbDriver=ValueType) | name="ddl-create" dbExecuteBefore=ValueType |
		//	name="ddl-drop" dbExecuteAfter=ValueType | name="index-types" dbIndexTypes=ValueType | name="skip-indexes" |
		//	name="skip-functions-procedures" | name="skip-check-constraints" | name="is-of-type" dbType=DatabaseTypeAssignement |
		//	name="show-database-info" dbMetaInfo=DatabaseMetaInfoAssignement | name="show-driver-info"
		//	dbDriverInfo=DriverMetaInfoAssignement | name="show-driver-output" dbMethodsCalls+=DriverMethodOutputAssignement+ |
		//	name="debug-level" debug=DebugLevelAssignement | name="take-comments" | name="lowercase-names" |
		//	name="uppercase-names";
		public ParserRule getRule() { return rule; }

		//name="is-online" | name="is-offline" | name="has-url" dbUrl=ValueType | name="login-username" dbUsername=ValueType |
		//name="login-password" dbPassword=ValueType | name="in-catalog" dbCatalog=DatabaseCatalogAssignement |
		//name="active-schema" dbSchema=DatabaseSchemaAssignement | name="jdbc-driver" (":"
		//dbDriverx=JvmParameterizedTypeReference | dbDriver=ValueType) | name="ddl-create" dbExecuteBefore=ValueType |
		//name="ddl-drop" dbExecuteAfter=ValueType | name="index-types" dbIndexTypes=ValueType | name="skip-indexes" |
		//name="skip-functions-procedures" | name="skip-check-constraints" | name="is-of-type" dbType=DatabaseTypeAssignement |
		//name="show-database-info" dbMetaInfo=DatabaseMetaInfoAssignement | name="show-driver-info"
		//dbDriverInfo=DriverMetaInfoAssignement | name="show-driver-output" dbMethodsCalls+=DriverMethodOutputAssignement+ |
		//name="debug-level" debug=DebugLevelAssignement | name="take-comments" | name="lowercase-names" | name="uppercase-names"
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="is-online"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"is-online"
		public Keyword getNameIsOnlineKeyword_0_0() { return cNameIsOnlineKeyword_0_0; }

		//name="is-offline"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"is-offline"
		public Keyword getNameIsOfflineKeyword_1_0() { return cNameIsOfflineKeyword_1_0; }

		//name="has-url" dbUrl=ValueType
		public Group getGroup_2() { return cGroup_2; }

		//name="has-url"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"has-url"
		public Keyword getNameHasUrlKeyword_2_0_0() { return cNameHasUrlKeyword_2_0_0; }

		//dbUrl=ValueType
		public Assignment getDbUrlAssignment_2_1() { return cDbUrlAssignment_2_1; }

		//ValueType
		public RuleCall getDbUrlValueTypeParserRuleCall_2_1_0() { return cDbUrlValueTypeParserRuleCall_2_1_0; }

		//name="login-username" dbUsername=ValueType
		public Group getGroup_3() { return cGroup_3; }

		//name="login-username"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"login-username"
		public Keyword getNameLoginUsernameKeyword_3_0_0() { return cNameLoginUsernameKeyword_3_0_0; }

		//dbUsername=ValueType
		public Assignment getDbUsernameAssignment_3_1() { return cDbUsernameAssignment_3_1; }

		//ValueType
		public RuleCall getDbUsernameValueTypeParserRuleCall_3_1_0() { return cDbUsernameValueTypeParserRuleCall_3_1_0; }

		//name="login-password" dbPassword=ValueType
		public Group getGroup_4() { return cGroup_4; }

		//name="login-password"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"login-password"
		public Keyword getNameLoginPasswordKeyword_4_0_0() { return cNameLoginPasswordKeyword_4_0_0; }

		//dbPassword=ValueType
		public Assignment getDbPasswordAssignment_4_1() { return cDbPasswordAssignment_4_1; }

		//ValueType
		public RuleCall getDbPasswordValueTypeParserRuleCall_4_1_0() { return cDbPasswordValueTypeParserRuleCall_4_1_0; }

		//name="in-catalog" dbCatalog=DatabaseCatalogAssignement
		public Group getGroup_5() { return cGroup_5; }

		//name="in-catalog"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"in-catalog"
		public Keyword getNameInCatalogKeyword_5_0_0() { return cNameInCatalogKeyword_5_0_0; }

		//dbCatalog=DatabaseCatalogAssignement
		public Assignment getDbCatalogAssignment_5_1() { return cDbCatalogAssignment_5_1; }

		//DatabaseCatalogAssignement
		public RuleCall getDbCatalogDatabaseCatalogAssignementParserRuleCall_5_1_0() { return cDbCatalogDatabaseCatalogAssignementParserRuleCall_5_1_0; }

		//name="active-schema" dbSchema=DatabaseSchemaAssignement
		public Group getGroup_6() { return cGroup_6; }

		//name="active-schema"
		public Assignment getNameAssignment_6_0() { return cNameAssignment_6_0; }

		//"active-schema"
		public Keyword getNameActiveSchemaKeyword_6_0_0() { return cNameActiveSchemaKeyword_6_0_0; }

		//dbSchema=DatabaseSchemaAssignement
		public Assignment getDbSchemaAssignment_6_1() { return cDbSchemaAssignment_6_1; }

		//DatabaseSchemaAssignement
		public RuleCall getDbSchemaDatabaseSchemaAssignementParserRuleCall_6_1_0() { return cDbSchemaDatabaseSchemaAssignementParserRuleCall_6_1_0; }

		//name="jdbc-driver" (":" dbDriverx=JvmParameterizedTypeReference | dbDriver=ValueType)
		public Group getGroup_7() { return cGroup_7; }

		//name="jdbc-driver"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"jdbc-driver"
		public Keyword getNameJdbcDriverKeyword_7_0_0() { return cNameJdbcDriverKeyword_7_0_0; }

		//=> ":" dbDriverx=JvmParameterizedTypeReference | dbDriver=ValueType
		public Alternatives getAlternatives_7_1() { return cAlternatives_7_1; }

		//=> ":" dbDriverx=JvmParameterizedTypeReference
		public Group getGroup_7_1_0() { return cGroup_7_1_0; }

		//=> ":"
		public Keyword getColonKeyword_7_1_0_0() { return cColonKeyword_7_1_0_0; }

		//dbDriverx=JvmParameterizedTypeReference
		public Assignment getDbDriverxAssignment_7_1_0_1() { return cDbDriverxAssignment_7_1_0_1; }

		//JvmParameterizedTypeReference
		public RuleCall getDbDriverxJvmParameterizedTypeReferenceParserRuleCall_7_1_0_1_0() { return cDbDriverxJvmParameterizedTypeReferenceParserRuleCall_7_1_0_1_0; }

		//dbDriver=ValueType
		public Assignment getDbDriverAssignment_7_1_1() { return cDbDriverAssignment_7_1_1; }

		//ValueType
		public RuleCall getDbDriverValueTypeParserRuleCall_7_1_1_0() { return cDbDriverValueTypeParserRuleCall_7_1_1_0; }

		//name="ddl-create" dbExecuteBefore=ValueType
		public Group getGroup_8() { return cGroup_8; }

		//name="ddl-create"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"ddl-create"
		public Keyword getNameDdlCreateKeyword_8_0_0() { return cNameDdlCreateKeyword_8_0_0; }

		//dbExecuteBefore=ValueType
		public Assignment getDbExecuteBeforeAssignment_8_1() { return cDbExecuteBeforeAssignment_8_1; }

		//ValueType
		public RuleCall getDbExecuteBeforeValueTypeParserRuleCall_8_1_0() { return cDbExecuteBeforeValueTypeParserRuleCall_8_1_0; }

		//name="ddl-drop" dbExecuteAfter=ValueType
		public Group getGroup_9() { return cGroup_9; }

		//name="ddl-drop"
		public Assignment getNameAssignment_9_0() { return cNameAssignment_9_0; }

		//"ddl-drop"
		public Keyword getNameDdlDropKeyword_9_0_0() { return cNameDdlDropKeyword_9_0_0; }

		//dbExecuteAfter=ValueType
		public Assignment getDbExecuteAfterAssignment_9_1() { return cDbExecuteAfterAssignment_9_1; }

		//ValueType
		public RuleCall getDbExecuteAfterValueTypeParserRuleCall_9_1_0() { return cDbExecuteAfterValueTypeParserRuleCall_9_1_0; }

		//name="index-types" dbIndexTypes=ValueType
		public Group getGroup_10() { return cGroup_10; }

		//name="index-types"
		public Assignment getNameAssignment_10_0() { return cNameAssignment_10_0; }

		//"index-types"
		public Keyword getNameIndexTypesKeyword_10_0_0() { return cNameIndexTypesKeyword_10_0_0; }

		//dbIndexTypes=ValueType
		public Assignment getDbIndexTypesAssignment_10_1() { return cDbIndexTypesAssignment_10_1; }

		//ValueType
		public RuleCall getDbIndexTypesValueTypeParserRuleCall_10_1_0() { return cDbIndexTypesValueTypeParserRuleCall_10_1_0; }

		//name="skip-indexes"
		public Assignment getNameAssignment_11() { return cNameAssignment_11; }

		//"skip-indexes"
		public Keyword getNameSkipIndexesKeyword_11_0() { return cNameSkipIndexesKeyword_11_0; }

		//name="skip-functions-procedures"
		public Assignment getNameAssignment_12() { return cNameAssignment_12; }

		//"skip-functions-procedures"
		public Keyword getNameSkipFunctionsProceduresKeyword_12_0() { return cNameSkipFunctionsProceduresKeyword_12_0; }

		//name="skip-check-constraints"
		public Assignment getNameAssignment_13() { return cNameAssignment_13; }

		//"skip-check-constraints"
		public Keyword getNameSkipCheckConstraintsKeyword_13_0() { return cNameSkipCheckConstraintsKeyword_13_0; }

		//name="is-of-type" dbType=DatabaseTypeAssignement
		public Group getGroup_14() { return cGroup_14; }

		//name="is-of-type"
		public Assignment getNameAssignment_14_0() { return cNameAssignment_14_0; }

		//"is-of-type"
		public Keyword getNameIsOfTypeKeyword_14_0_0() { return cNameIsOfTypeKeyword_14_0_0; }

		//dbType=DatabaseTypeAssignement
		public Assignment getDbTypeAssignment_14_1() { return cDbTypeAssignment_14_1; }

		//DatabaseTypeAssignement
		public RuleCall getDbTypeDatabaseTypeAssignementParserRuleCall_14_1_0() { return cDbTypeDatabaseTypeAssignementParserRuleCall_14_1_0; }

		//name="show-database-info" dbMetaInfo=DatabaseMetaInfoAssignement
		public Group getGroup_15() { return cGroup_15; }

		//name="show-database-info"
		public Assignment getNameAssignment_15_0() { return cNameAssignment_15_0; }

		//"show-database-info"
		public Keyword getNameShowDatabaseInfoKeyword_15_0_0() { return cNameShowDatabaseInfoKeyword_15_0_0; }

		//dbMetaInfo=DatabaseMetaInfoAssignement
		public Assignment getDbMetaInfoAssignment_15_1() { return cDbMetaInfoAssignment_15_1; }

		//DatabaseMetaInfoAssignement
		public RuleCall getDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_1_0() { return cDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_1_0; }

		//name="show-driver-info" dbDriverInfo=DriverMetaInfoAssignement
		public Group getGroup_16() { return cGroup_16; }

		//name="show-driver-info"
		public Assignment getNameAssignment_16_0() { return cNameAssignment_16_0; }

		//"show-driver-info"
		public Keyword getNameShowDriverInfoKeyword_16_0_0() { return cNameShowDriverInfoKeyword_16_0_0; }

		//dbDriverInfo=DriverMetaInfoAssignement
		public Assignment getDbDriverInfoAssignment_16_1() { return cDbDriverInfoAssignment_16_1; }

		//DriverMetaInfoAssignement
		public RuleCall getDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_1_0() { return cDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_1_0; }

		//name="show-driver-output" dbMethodsCalls+=DriverMethodOutputAssignement+
		public Group getGroup_17() { return cGroup_17; }

		//name="show-driver-output"
		public Assignment getNameAssignment_17_0() { return cNameAssignment_17_0; }

		//"show-driver-output"
		public Keyword getNameShowDriverOutputKeyword_17_0_0() { return cNameShowDriverOutputKeyword_17_0_0; }

		//dbMethodsCalls+=DriverMethodOutputAssignement+
		public Assignment getDbMethodsCallsAssignment_17_1() { return cDbMethodsCallsAssignment_17_1; }

		//DriverMethodOutputAssignement
		public RuleCall getDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_0() { return cDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_0; }

		//name="debug-level" debug=DebugLevelAssignement
		public Group getGroup_18() { return cGroup_18; }

		//name="debug-level"
		public Assignment getNameAssignment_18_0() { return cNameAssignment_18_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_18_0_0() { return cNameDebugLevelKeyword_18_0_0; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_18_1() { return cDebugAssignment_18_1; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_18_1_0() { return cDebugDebugLevelAssignementParserRuleCall_18_1_0; }

		//name="take-comments"
		public Assignment getNameAssignment_19() { return cNameAssignment_19; }

		//"take-comments"
		public Keyword getNameTakeCommentsKeyword_19_0() { return cNameTakeCommentsKeyword_19_0; }

		//name="lowercase-names"
		public Assignment getNameAssignment_20() { return cNameAssignment_20; }

		//"lowercase-names"
		public Keyword getNameLowercaseNamesKeyword_20_0() { return cNameLowercaseNamesKeyword_20_0; }

		//name="uppercase-names"
		public Assignment getNameAssignment_21() { return cNameAssignment_21; }

		//"uppercase-names"
		public Keyword getNameUppercaseNamesKeyword_21_0() { return cNameUppercaseNamesKeyword_21_0; }
	}

	public class PojogenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojogenProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameTypesSqltypesKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cSqlTypesAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cSqlTypesSqlTypeAssignementParserRuleCall_0_1_0 = (RuleCall)cSqlTypesAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameTypesInTableKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Assignment cDbTableAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_1_1_0 = (RuleCall)cDbTableAssignment_1_1.eContents().get(0);
		private final Assignment cSqlTypesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSqlTypesSqlTypeAssignementParserRuleCall_1_2_0 = (RuleCall)cSqlTypesAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameTypesForColumnsKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Assignment cDbTableAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_2_1_0 = (RuleCall)cDbTableAssignment_2_1.eContents().get(0);
		private final Assignment cColumnTypesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_2_2_0 = (RuleCall)cColumnTypesAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameTypesForProcedureKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final Assignment cDbProcedureAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbProcedureValidIDParserRuleCall_3_1_0 = (RuleCall)cDbProcedureAssignment_3_1.eContents().get(0);
		private final Assignment cColumnTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_3_2_0 = (RuleCall)cColumnTypesAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameTypesForFunctionKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final Assignment cDbFunctionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDbFunctionValidIDParserRuleCall_4_1_0 = (RuleCall)cDbFunctionAssignment_4_1.eContents().get(0);
		private final Assignment cColumnTypesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_4_2_0 = (RuleCall)cColumnTypesAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameShowTypeForColumnKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final Assignment cDbTableAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_5_1_0 = (RuleCall)cDbTableAssignment_5_1.eContents().get(0);
		private final Assignment cColumnTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cColumnTypeShowColumnTypeAssignementParserRuleCall_5_2_0 = (RuleCall)cColumnTypeAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cNameAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cNameShowTypeForProcedureKeyword_6_0_0 = (Keyword)cNameAssignment_6_0.eContents().get(0);
		private final Assignment cDbProcedureAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDbProcedureValidIDParserRuleCall_6_1_0 = (RuleCall)cDbProcedureAssignment_6_1.eContents().get(0);
		private final Assignment cColumnTypeAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cColumnTypeShowColumnTypeAssignementParserRuleCall_6_2_0 = (RuleCall)cColumnTypeAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameShowTypeForFunctionKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final Assignment cDbFunctionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDbFunctionValidIDParserRuleCall_7_1_0 = (RuleCall)cDbFunctionAssignment_7_1.eContents().get(0);
		private final Assignment cColumnTypeAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cColumnTypeShowColumnTypeAssignementParserRuleCall_7_2_0 = (RuleCall)cColumnTypeAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameIgnoreTablesKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_8_1_0 = (RuleCall)cDbTablesAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cNameAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cNameOnlyTablesKeyword_9_0_0 = (Keyword)cNameAssignment_9_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_9_1_0 = (RuleCall)cDbTablesAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cNameAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cNameNotAbstractTablesKeyword_10_0_0 = (Keyword)cNameAssignment_10_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_10_1_0 = (RuleCall)cDbTablesAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cNameAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final Keyword cNameJoinTablesKeyword_11_0_0 = (Keyword)cNameAssignment_11_0.eContents().get(0);
		private final Assignment cJoinTablesAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cJoinTablesJoinTableAssignementParserRuleCall_11_1_0 = (RuleCall)cJoinTablesAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Assignment cNameAssignment_12_0 = (Assignment)cGroup_12.eContents().get(0);
		private final Keyword cNameIgnoreColumnsKeyword_12_0_0 = (Keyword)cNameAssignment_12_0.eContents().get(0);
		private final Assignment cDbTableAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_12_1_0 = (RuleCall)cDbTableAssignment_12_1.eContents().get(0);
		private final Assignment cDbColumnsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cDbColumnsValidIDParserRuleCall_12_2_0 = (RuleCall)cDbColumnsAssignment_12_2.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Assignment cNameAssignment_13_0 = (Assignment)cGroup_13.eContents().get(0);
		private final Keyword cNameRequiredColumnsKeyword_13_0_0 = (Keyword)cNameAssignment_13_0.eContents().get(0);
		private final Assignment cDbTableAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_13_1_0 = (RuleCall)cDbTableAssignment_13_1.eContents().get(0);
		private final Assignment cDbColumnsAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cDbColumnsValidIDParserRuleCall_13_2_0 = (RuleCall)cDbColumnsAssignment_13_2.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cNameAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cNameNotRequiredColumnsKeyword_14_0_0 = (Keyword)cNameAssignment_14_0.eContents().get(0);
		private final Assignment cDbTableAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_14_1_0 = (RuleCall)cDbTableAssignment_14_1.eContents().get(0);
		private final Assignment cDbColumnsAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cDbColumnsValidIDParserRuleCall_14_2_0 = (RuleCall)cDbColumnsAssignment_14_2.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cNameAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cNameCreateColumnsKeyword_15_0_0 = (Keyword)cNameAssignment_15_0.eContents().get(0);
		private final Assignment cDbTableAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_15_1_0 = (RuleCall)cDbTableAssignment_15_1.eContents().get(0);
		private final Assignment cColumnTypesAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_15_2_0 = (RuleCall)cColumnTypesAssignment_15_2.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cNameAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cNameRenameTablesKeyword_16_0_0 = (Keyword)cNameAssignment_16_0.eContents().get(0);
		private final Assignment cTablesAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cTablesTableAssignementParserRuleCall_16_1_0 = (RuleCall)cTablesAssignment_16_1.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Assignment cNameAssignment_17_0 = (Assignment)cGroup_17.eContents().get(0);
		private final Keyword cNameRenameColumnsKeyword_17_0_0 = (Keyword)cNameAssignment_17_0.eContents().get(0);
		private final Assignment cDbTableAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_17_1_0 = (RuleCall)cDbTableAssignment_17_1.eContents().get(0);
		private final Assignment cColumnsAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final RuleCall cColumnsColumnAssignementParserRuleCall_17_2_0 = (RuleCall)cColumnsAssignment_17_2.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cNameAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cNameIgnoreOneToManyKeyword_18_0_0 = (Keyword)cNameAssignment_18_0.eContents().get(0);
		private final Assignment cDbTableAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_18_1_0 = (RuleCall)cDbTableAssignment_18_1.eContents().get(0);
		private final Assignment cExportsAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cExportsExportAssignementParserRuleCall_18_2_0 = (RuleCall)cExportsAssignment_18_2.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Assignment cNameAssignment_19_0 = (Assignment)cGroup_19.eContents().get(0);
		private final Keyword cNameIgnoreManyToOneKeyword_19_0_0 = (Keyword)cNameAssignment_19_0.eContents().get(0);
		private final Assignment cDbTableAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_19_1_0 = (RuleCall)cDbTableAssignment_19_1.eContents().get(0);
		private final Assignment cImportsAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cImportsImportAssignementParserRuleCall_19_2_0 = (RuleCall)cImportsAssignment_19_2.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Assignment cNameAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final Keyword cNameInheritManyToOneKeyword_20_0_0 = (Keyword)cNameAssignment_20_0.eContents().get(0);
		private final Assignment cDbTableAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_20_1_0 = (RuleCall)cDbTableAssignment_20_1.eContents().get(0);
		private final Assignment cImportsAssignment_20_2 = (Assignment)cGroup_20.eContents().get(2);
		private final RuleCall cImportsImportAssignementParserRuleCall_20_2_0 = (RuleCall)cImportsAssignment_20_2.eContents().get(0);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Assignment cNameAssignment_21_0 = (Assignment)cGroup_21.eContents().get(0);
		private final Keyword cNameCreateOneToManyKeyword_21_0_0 = (Keyword)cNameAssignment_21_0.eContents().get(0);
		private final Assignment cDbTableAssignment_21_1 = (Assignment)cGroup_21.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_21_1_0 = (RuleCall)cDbTableAssignment_21_1.eContents().get(0);
		private final Assignment cExportsAssignment_21_2 = (Assignment)cGroup_21.eContents().get(2);
		private final RuleCall cExportsExportAssignementParserRuleCall_21_2_0 = (RuleCall)cExportsAssignment_21_2.eContents().get(0);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Assignment cNameAssignment_22_0 = (Assignment)cGroup_22.eContents().get(0);
		private final Keyword cNameCreateManyToOneKeyword_22_0_0 = (Keyword)cNameAssignment_22_0.eContents().get(0);
		private final Assignment cDbTableAssignment_22_1 = (Assignment)cGroup_22.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_22_1_0 = (RuleCall)cDbTableAssignment_22_1.eContents().get(0);
		private final Assignment cImportsAssignment_22_2 = (Assignment)cGroup_22.eContents().get(2);
		private final RuleCall cImportsImportAssignementParserRuleCall_22_2_0 = (RuleCall)cImportsAssignment_22_2.eContents().get(0);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Assignment cNameAssignment_23_0 = (Assignment)cGroup_23.eContents().get(0);
		private final Keyword cNameTableManyToManyKeyword_23_0_0 = (Keyword)cNameAssignment_23_0.eContents().get(0);
		private final Assignment cDbTableAssignment_23_1 = (Assignment)cGroup_23.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_23_1_0 = (RuleCall)cDbTableAssignment_23_1.eContents().get(0);
		private final Assignment cMany2sAssignment_23_2 = (Assignment)cGroup_23.eContents().get(2);
		private final RuleCall cMany2sManyToManyAssignementParserRuleCall_23_2_0 = (RuleCall)cMany2sAssignment_23_2.eContents().get(0);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Assignment cNameAssignment_24_0 = (Assignment)cGroup_24.eContents().get(0);
		private final Keyword cNameInheritDiscriminatorKeyword_24_0_0 = (Keyword)cNameAssignment_24_0.eContents().get(0);
		private final Assignment cDbTableAssignment_24_1 = (Assignment)cGroup_24.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_24_1_0 = (RuleCall)cDbTableAssignment_24_1.eContents().get(0);
		private final Assignment cDbColumnAssignment_24_2 = (Assignment)cGroup_24.eContents().get(2);
		private final RuleCall cDbColumnValidIDParserRuleCall_24_2_0 = (RuleCall)cDbColumnAssignment_24_2.eContents().get(0);
		private final Assignment cInheritanceAssignment_24_3 = (Assignment)cGroup_24.eContents().get(3);
		private final RuleCall cInheritanceInheritanceAssignementParserRuleCall_24_3_0 = (RuleCall)cInheritanceAssignment_24_3.eContents().get(0);
		private final Group cGroup_25 = (Group)cAlternatives.eContents().get(25);
		private final Assignment cNameAssignment_25_0 = (Assignment)cGroup_25.eContents().get(0);
		private final Keyword cNameGenerateMethodsKeyword_25_0_0 = (Keyword)cNameAssignment_25_0.eContents().get(0);
		private final Assignment cMethodsAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cMethodsValidIDParserRuleCall_25_1_0 = (RuleCall)cMethodsAssignment_25_1.eContents().get(0);
		private final Group cGroup_26 = (Group)cAlternatives.eContents().get(26);
		private final Assignment cNameAssignment_26_0 = (Assignment)cGroup_26.eContents().get(0);
		private final Keyword cNameGenerateOperatorsKeyword_26_0_0 = (Keyword)cNameAssignment_26_0.eContents().get(0);
		private final Assignment cOperatorsSuffixAssignment_26_1 = (Assignment)cGroup_26.eContents().get(1);
		private final RuleCall cOperatorsSuffixValidIDParserRuleCall_26_1_0 = (RuleCall)cOperatorsSuffixAssignment_26_1.eContents().get(0);
		private final Group cGroup_27 = (Group)cAlternatives.eContents().get(27);
		private final Assignment cNameAssignment_27_0 = (Assignment)cGroup_27.eContents().get(0);
		private final Keyword cNameImplementsInterfacesKeyword_27_0_0 = (Keyword)cNameAssignment_27_0.eContents().get(0);
		private final Assignment cToImplementsAssignment_27_1 = (Assignment)cGroup_27.eContents().get(1);
		private final RuleCall cToImplementsImplementsAssignementParserRuleCall_27_1_0 = (RuleCall)cToImplementsAssignment_27_1.eContents().get(0);
		private final Group cGroup_28 = (Group)cAlternatives.eContents().get(28);
		private final Assignment cNameAssignment_28_0 = (Assignment)cGroup_28.eContents().get(0);
		private final Keyword cNameExtendsClassKeyword_28_0_0 = (Keyword)cNameAssignment_28_0.eContents().get(0);
		private final Assignment cToExtendsAssignment_28_1 = (Assignment)cGroup_28.eContents().get(1);
		private final RuleCall cToExtendsExtendsAssignementParserRuleCall_28_1_0 = (RuleCall)cToExtendsAssignment_28_1.eContents().get(0);
		private final Group cGroup_29 = (Group)cAlternatives.eContents().get(29);
		private final Assignment cNameAssignment_29_0 = (Assignment)cGroup_29.eContents().get(0);
		private final Keyword cNameImplementsInterfacesGenericsKeyword_29_0_0 = (Keyword)cNameAssignment_29_0.eContents().get(0);
		private final Assignment cToImplementsGenericsAssignment_29_1 = (Assignment)cGroup_29.eContents().get(1);
		private final RuleCall cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_1_0 = (RuleCall)cToImplementsGenericsAssignment_29_1.eContents().get(0);
		private final Group cGroup_30 = (Group)cAlternatives.eContents().get(30);
		private final Assignment cNameAssignment_30_0 = (Assignment)cGroup_30.eContents().get(0);
		private final Keyword cNameExtendsClassGenericsKeyword_30_0_0 = (Keyword)cNameAssignment_30_0.eContents().get(0);
		private final Assignment cToExtendsGenericsAssignment_30_1 = (Assignment)cGroup_30.eContents().get(1);
		private final RuleCall cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_1_0 = (RuleCall)cToExtendsGenericsAssignment_30_1.eContents().get(0);
		private final Assignment cNameAssignment_31 = (Assignment)cAlternatives.eContents().get(31);
		private final Keyword cNameGenerateWrappersKeyword_31_0 = (Keyword)cNameAssignment_31.eContents().get(0);
		private final Assignment cNameAssignment_32 = (Assignment)cAlternatives.eContents().get(32);
		private final Keyword cNameGenerateValidationAnnotationsKeyword_32_0 = (Keyword)cNameAssignment_32.eContents().get(0);
		private final Group cGroup_33 = (Group)cAlternatives.eContents().get(33);
		private final Assignment cNameAssignment_33_0 = (Assignment)cGroup_33.eContents().get(0);
		private final Keyword cNamePreserveForeignKeysKeyword_33_0_0 = (Keyword)cNameAssignment_33_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_33_1 = (Assignment)cGroup_33.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_33_1_0 = (RuleCall)cDbTablesAssignment_33_1.eContents().get(0);
		private final Assignment cNameAssignment_34 = (Assignment)cAlternatives.eContents().get(34);
		private final Keyword cNameMakeItFinalKeyword_34_0 = (Keyword)cNameAssignment_34.eContents().get(0);
		private final Group cGroup_35 = (Group)cAlternatives.eContents().get(35);
		private final Assignment cNameAssignment_35_0 = (Assignment)cGroup_35.eContents().get(0);
		private final Keyword cNameVersionColumnKeyword_35_0_0 = (Keyword)cNameAssignment_35_0.eContents().get(0);
		private final Assignment cVersionAssignment_35_1 = (Assignment)cGroup_35.eContents().get(1);
		private final RuleCall cVersionValidIDParserRuleCall_35_1_0 = (RuleCall)cVersionAssignment_35_1.eContents().get(0);
		private final Group cGroup_35_2 = (Group)cGroup_35.eContents().get(2);
		private final Keyword cPlusSignKeyword_35_2_0 = (Keyword)cGroup_35_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_35_2_1 = (Assignment)cGroup_35_2.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_35_2_1_0 = (RuleCall)cDbTablesAssignment_35_2_1.eContents().get(0);
		private final Group cGroup_35_3 = (Group)cGroup_35.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_35_3_0 = (Keyword)cGroup_35_3.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_35_3_1 = (Assignment)cGroup_35_3.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_35_3_1_0 = (RuleCall)cDbNotTablesAssignment_35_3_1.eContents().get(0);
		private final Group cGroup_36 = (Group)cAlternatives.eContents().get(36);
		private final Assignment cNameAssignment_36_0 = (Assignment)cGroup_36.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_36_0_0 = (Keyword)cNameAssignment_36_0.eContents().get(0);
		private final Assignment cDebugAssignment_36_1 = (Assignment)cGroup_36.eContents().get(1);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_36_1_0 = (RuleCall)cDebugAssignment_36_1.eContents().get(0);
		private final Group cGroup_37 = (Group)cAlternatives.eContents().get(37);
		private final Assignment cNameAssignment_37_0 = (Assignment)cGroup_37.eContents().get(0);
		private final Keyword cNamePojosForProceduresKeyword_37_0_0 = (Keyword)cNameAssignment_37_0.eContents().get(0);
		private final Assignment cProcPojosAssignment_37_1 = (Assignment)cGroup_37.eContents().get(1);
		private final RuleCall cProcPojosProcedurePojoAssignementParserRuleCall_37_1_0 = (RuleCall)cProcPojosAssignment_37_1.eContents().get(0);
		private final Group cGroup_38 = (Group)cAlternatives.eContents().get(38);
		private final Assignment cNameAssignment_38_0 = (Assignment)cGroup_38.eContents().get(0);
		private final Keyword cNamePojosForFunctionsKeyword_38_0_0 = (Keyword)cNameAssignment_38_0.eContents().get(0);
		private final Assignment cFunPojosAssignment_38_1 = (Assignment)cGroup_38.eContents().get(1);
		private final RuleCall cFunPojosFunctionPojoAssignementParserRuleCall_38_1_0 = (RuleCall)cFunPojosAssignment_38_1.eContents().get(0);
		private final Group cGroup_39 = (Group)cAlternatives.eContents().get(39);
		private final Assignment cNameAssignment_39_0 = (Assignment)cGroup_39.eContents().get(0);
		private final Keyword cNameActiveFilterKeyword_39_0_0 = (Keyword)cNameAssignment_39_0.eContents().get(0);
		private final Assignment cActiveFilterAssignment_39_1 = (Assignment)cGroup_39.eContents().get(1);
		private final RuleCall cActiveFilterValueTypeParserRuleCall_39_1_0 = (RuleCall)cActiveFilterAssignment_39_1.eContents().get(0);
		private final Group cGroup_40 = (Group)cAlternatives.eContents().get(40);
		private final Assignment cNameAssignment_40_0 = (Assignment)cGroup_40.eContents().get(0);
		private final Keyword cNamePackageKeyword_40_0_0 = (Keyword)cNameAssignment_40_0.eContents().get(0);
		private final Assignment cPckgAssignment_40_1 = (Assignment)cGroup_40.eContents().get(1);
		private final RuleCall cPckgQualifiedNameParserRuleCall_40_1_0 = (RuleCall)cPckgAssignment_40_1.eContents().get(0);
		private final Group cGroup_41 = (Group)cAlternatives.eContents().get(41);
		private final Assignment cNameAssignment_41_0 = (Assignment)cGroup_41.eContents().get(0);
		private final Keyword cNameEnumForCheckConstraintsKeyword_41_0_0 = (Keyword)cNameAssignment_41_0.eContents().get(0);
		private final Assignment cEnumNameAssignment_41_1 = (Assignment)cGroup_41.eContents().get(1);
		private final RuleCall cEnumNameValidIDParserRuleCall_41_1_0 = (RuleCall)cEnumNameAssignment_41_1.eContents().get(0);
		private final Assignment cDbCheckConstraintsAssignment_41_2 = (Assignment)cGroup_41.eContents().get(2);
		private final RuleCall cDbCheckConstraintsValidIDParserRuleCall_41_2_0 = (RuleCall)cDbCheckConstraintsAssignment_41_2.eContents().get(0);
		
		//PojogenProperty:
		//	name="types-sqltypes" sqlTypes+=SqlTypeAssignement+ | name="types-in-table" dbTable=ValidID
		//	sqlTypes+=SqlTypeAssignement+ | name="types-for-columns" dbTable=ValidID columnTypes+=ColumnTypeAssignement+ |
		//	name="types-for-procedure" dbProcedure=ValidID columnTypes+=ColumnTypeAssignement+ | name="types-for-function"
		//	dbFunction=ValidID columnTypes+=ColumnTypeAssignement+ | name="show-type-for-column" dbTable=ValidID
		//	columnType=ShowColumnTypeAssignement | name="show-type-for-procedure" dbProcedure=ValidID
		//	columnType=ShowColumnTypeAssignement | name="show-type-for-function" dbFunction=ValidID
		//	columnType=ShowColumnTypeAssignement | name="ignore-tables" dbTables+=ValidID+ | name="only-tables" dbTables+=ValidID+
		//	| name="not-abstract-tables" dbTables+=ValidID+ | name="join-tables" joinTables+=JoinTableAssignement+ |
		//	name="ignore-columns" dbTable=ValidID dbColumns+=ValidID+ | name="required-columns" dbTable=ValidID
		//	dbColumns+=ValidID+ | name="not-required-columns" dbTable=ValidID dbColumns+=ValidID+ | name="create-columns"
		//	dbTable=ValidID columnTypes+=ColumnTypeAssignement+ | name="rename-tables" tables+=TableAssignement+ |
		//	name="rename-columns" dbTable=ValidID columns+=ColumnAssignement+ | name="ignore-one-to-many" dbTable=ValidID
		//	exports+=ExportAssignement+ // exports
		//	| name="ignore-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		//	| name="inherit-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		//	| name="create-one-to-many" dbTable=ValidID exports+=ExportAssignement+ // exports
		//	| name="create-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		//	| name="table-many-to-many" dbTable=ValidID many2s+=ManyToManyAssignement+ | name="inherit-discriminator"
		//	dbTable=ValidID dbColumn=ValidID inheritance+=InheritanceAssignement+ | name="generate-methods" methods+=ValidID+ |
		//	name="generate-operators" operatorsSuffix=ValidID? | name="implements-interfaces" toImplements=ImplementsAssignement |
		//	name="extends-class" toExtends=ExtendsAssignement | name="implements-interfaces-generics"
		//	toImplementsGenerics=ImplementsAssignementGenerics | name="extends-class-generics"
		//	toExtendsGenerics=ExtendsAssignementGenerics | name="generate-wrappers" | name="generate-validation-annotations" |
		//	name="preserve-foreign-keys" dbTables+=ValidID* | name="make-it-final" | name="version-column" version=ValidID ("+"
		//	dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? | name="debug-level" debug=DebugLevelAssignement |
		//	name="pojos-for-procedures" procPojos+=ProcedurePojoAssignement+ | name="pojos-for-functions"
		//	funPojos+=FunctionPojoAssignement+ | name="active-filter" activeFilter=ValueType | name="package" pckg=QualifiedName |
		//	name="enum-for-check-constraints" enumName=ValidID dbCheckConstraints+=ValidID+;
		public ParserRule getRule() { return rule; }

		//name="types-sqltypes" sqlTypes+=SqlTypeAssignement+ | name="types-in-table" dbTable=ValidID
		//sqlTypes+=SqlTypeAssignement+ | name="types-for-columns" dbTable=ValidID columnTypes+=ColumnTypeAssignement+ |
		//name="types-for-procedure" dbProcedure=ValidID columnTypes+=ColumnTypeAssignement+ | name="types-for-function"
		//dbFunction=ValidID columnTypes+=ColumnTypeAssignement+ | name="show-type-for-column" dbTable=ValidID
		//columnType=ShowColumnTypeAssignement | name="show-type-for-procedure" dbProcedure=ValidID
		//columnType=ShowColumnTypeAssignement | name="show-type-for-function" dbFunction=ValidID
		//columnType=ShowColumnTypeAssignement | name="ignore-tables" dbTables+=ValidID+ | name="only-tables" dbTables+=ValidID+
		//| name="not-abstract-tables" dbTables+=ValidID+ | name="join-tables" joinTables+=JoinTableAssignement+ |
		//name="ignore-columns" dbTable=ValidID dbColumns+=ValidID+ | name="required-columns" dbTable=ValidID dbColumns+=ValidID+
		//| name="not-required-columns" dbTable=ValidID dbColumns+=ValidID+ | name="create-columns" dbTable=ValidID
		//columnTypes+=ColumnTypeAssignement+ | name="rename-tables" tables+=TableAssignement+ | name="rename-columns"
		//dbTable=ValidID columns+=ColumnAssignement+ | name="ignore-one-to-many" dbTable=ValidID exports+=ExportAssignement+ // exports
		//| name="ignore-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		//| name="inherit-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		//| name="create-one-to-many" dbTable=ValidID exports+=ExportAssignement+ // exports
		//| name="create-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		//| name="table-many-to-many" dbTable=ValidID many2s+=ManyToManyAssignement+ | name="inherit-discriminator"
		//dbTable=ValidID dbColumn=ValidID inheritance+=InheritanceAssignement+ | name="generate-methods" methods+=ValidID+ |
		//name="generate-operators" operatorsSuffix=ValidID? | name="implements-interfaces" toImplements=ImplementsAssignement |
		//name="extends-class" toExtends=ExtendsAssignement | name="implements-interfaces-generics"
		//toImplementsGenerics=ImplementsAssignementGenerics | name="extends-class-generics"
		//toExtendsGenerics=ExtendsAssignementGenerics | name="generate-wrappers" | name="generate-validation-annotations" |
		//name="preserve-foreign-keys" dbTables+=ValidID* | name="make-it-final" | name="version-column" version=ValidID ("+"
		//dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? | name="debug-level" debug=DebugLevelAssignement |
		//name="pojos-for-procedures" procPojos+=ProcedurePojoAssignement+ | name="pojos-for-functions"
		//funPojos+=FunctionPojoAssignement+ | name="active-filter" activeFilter=ValueType | name="package" pckg=QualifiedName |
		//name="enum-for-check-constraints" enumName=ValidID dbCheckConstraints+=ValidID+
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="types-sqltypes" sqlTypes+=SqlTypeAssignement+
		public Group getGroup_0() { return cGroup_0; }

		//name="types-sqltypes"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"types-sqltypes"
		public Keyword getNameTypesSqltypesKeyword_0_0_0() { return cNameTypesSqltypesKeyword_0_0_0; }

		//sqlTypes+=SqlTypeAssignement+
		public Assignment getSqlTypesAssignment_0_1() { return cSqlTypesAssignment_0_1; }

		//SqlTypeAssignement
		public RuleCall getSqlTypesSqlTypeAssignementParserRuleCall_0_1_0() { return cSqlTypesSqlTypeAssignementParserRuleCall_0_1_0; }

		//name="types-in-table" dbTable=ValidID sqlTypes+=SqlTypeAssignement+
		public Group getGroup_1() { return cGroup_1; }

		//name="types-in-table"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"types-in-table"
		public Keyword getNameTypesInTableKeyword_1_0_0() { return cNameTypesInTableKeyword_1_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_1_1() { return cDbTableAssignment_1_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_1_1_0() { return cDbTableValidIDParserRuleCall_1_1_0; }

		//sqlTypes+=SqlTypeAssignement+
		public Assignment getSqlTypesAssignment_1_2() { return cSqlTypesAssignment_1_2; }

		//SqlTypeAssignement
		public RuleCall getSqlTypesSqlTypeAssignementParserRuleCall_1_2_0() { return cSqlTypesSqlTypeAssignementParserRuleCall_1_2_0; }

		//name="types-for-columns" dbTable=ValidID columnTypes+=ColumnTypeAssignement+
		public Group getGroup_2() { return cGroup_2; }

		//name="types-for-columns"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"types-for-columns"
		public Keyword getNameTypesForColumnsKeyword_2_0_0() { return cNameTypesForColumnsKeyword_2_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_2_1() { return cDbTableAssignment_2_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_2_1_0() { return cDbTableValidIDParserRuleCall_2_1_0; }

		//columnTypes+=ColumnTypeAssignement+
		public Assignment getColumnTypesAssignment_2_2() { return cColumnTypesAssignment_2_2; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_2_2_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_2_2_0; }

		//name="types-for-procedure" dbProcedure=ValidID columnTypes+=ColumnTypeAssignement+
		public Group getGroup_3() { return cGroup_3; }

		//name="types-for-procedure"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"types-for-procedure"
		public Keyword getNameTypesForProcedureKeyword_3_0_0() { return cNameTypesForProcedureKeyword_3_0_0; }

		//dbProcedure=ValidID
		public Assignment getDbProcedureAssignment_3_1() { return cDbProcedureAssignment_3_1; }

		//ValidID
		public RuleCall getDbProcedureValidIDParserRuleCall_3_1_0() { return cDbProcedureValidIDParserRuleCall_3_1_0; }

		//columnTypes+=ColumnTypeAssignement+
		public Assignment getColumnTypesAssignment_3_2() { return cColumnTypesAssignment_3_2; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_3_2_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_3_2_0; }

		//name="types-for-function" dbFunction=ValidID columnTypes+=ColumnTypeAssignement+
		public Group getGroup_4() { return cGroup_4; }

		//name="types-for-function"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"types-for-function"
		public Keyword getNameTypesForFunctionKeyword_4_0_0() { return cNameTypesForFunctionKeyword_4_0_0; }

		//dbFunction=ValidID
		public Assignment getDbFunctionAssignment_4_1() { return cDbFunctionAssignment_4_1; }

		//ValidID
		public RuleCall getDbFunctionValidIDParserRuleCall_4_1_0() { return cDbFunctionValidIDParserRuleCall_4_1_0; }

		//columnTypes+=ColumnTypeAssignement+
		public Assignment getColumnTypesAssignment_4_2() { return cColumnTypesAssignment_4_2; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_4_2_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_4_2_0; }

		//name="show-type-for-column" dbTable=ValidID columnType=ShowColumnTypeAssignement
		public Group getGroup_5() { return cGroup_5; }

		//name="show-type-for-column"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"show-type-for-column"
		public Keyword getNameShowTypeForColumnKeyword_5_0_0() { return cNameShowTypeForColumnKeyword_5_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_5_1() { return cDbTableAssignment_5_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_5_1_0() { return cDbTableValidIDParserRuleCall_5_1_0; }

		//columnType=ShowColumnTypeAssignement
		public Assignment getColumnTypeAssignment_5_2() { return cColumnTypeAssignment_5_2; }

		//ShowColumnTypeAssignement
		public RuleCall getColumnTypeShowColumnTypeAssignementParserRuleCall_5_2_0() { return cColumnTypeShowColumnTypeAssignementParserRuleCall_5_2_0; }

		//name="show-type-for-procedure" dbProcedure=ValidID columnType=ShowColumnTypeAssignement
		public Group getGroup_6() { return cGroup_6; }

		//name="show-type-for-procedure"
		public Assignment getNameAssignment_6_0() { return cNameAssignment_6_0; }

		//"show-type-for-procedure"
		public Keyword getNameShowTypeForProcedureKeyword_6_0_0() { return cNameShowTypeForProcedureKeyword_6_0_0; }

		//dbProcedure=ValidID
		public Assignment getDbProcedureAssignment_6_1() { return cDbProcedureAssignment_6_1; }

		//ValidID
		public RuleCall getDbProcedureValidIDParserRuleCall_6_1_0() { return cDbProcedureValidIDParserRuleCall_6_1_0; }

		//columnType=ShowColumnTypeAssignement
		public Assignment getColumnTypeAssignment_6_2() { return cColumnTypeAssignment_6_2; }

		//ShowColumnTypeAssignement
		public RuleCall getColumnTypeShowColumnTypeAssignementParserRuleCall_6_2_0() { return cColumnTypeShowColumnTypeAssignementParserRuleCall_6_2_0; }

		//name="show-type-for-function" dbFunction=ValidID columnType=ShowColumnTypeAssignement
		public Group getGroup_7() { return cGroup_7; }

		//name="show-type-for-function"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"show-type-for-function"
		public Keyword getNameShowTypeForFunctionKeyword_7_0_0() { return cNameShowTypeForFunctionKeyword_7_0_0; }

		//dbFunction=ValidID
		public Assignment getDbFunctionAssignment_7_1() { return cDbFunctionAssignment_7_1; }

		//ValidID
		public RuleCall getDbFunctionValidIDParserRuleCall_7_1_0() { return cDbFunctionValidIDParserRuleCall_7_1_0; }

		//columnType=ShowColumnTypeAssignement
		public Assignment getColumnTypeAssignment_7_2() { return cColumnTypeAssignment_7_2; }

		//ShowColumnTypeAssignement
		public RuleCall getColumnTypeShowColumnTypeAssignementParserRuleCall_7_2_0() { return cColumnTypeShowColumnTypeAssignementParserRuleCall_7_2_0; }

		//name="ignore-tables" dbTables+=ValidID+
		public Group getGroup_8() { return cGroup_8; }

		//name="ignore-tables"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"ignore-tables"
		public Keyword getNameIgnoreTablesKeyword_8_0_0() { return cNameIgnoreTablesKeyword_8_0_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_8_1() { return cDbTablesAssignment_8_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_8_1_0() { return cDbTablesValidIDParserRuleCall_8_1_0; }

		//name="only-tables" dbTables+=ValidID+
		public Group getGroup_9() { return cGroup_9; }

		//name="only-tables"
		public Assignment getNameAssignment_9_0() { return cNameAssignment_9_0; }

		//"only-tables"
		public Keyword getNameOnlyTablesKeyword_9_0_0() { return cNameOnlyTablesKeyword_9_0_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_9_1() { return cDbTablesAssignment_9_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_9_1_0() { return cDbTablesValidIDParserRuleCall_9_1_0; }

		//name="not-abstract-tables" dbTables+=ValidID+
		public Group getGroup_10() { return cGroup_10; }

		//name="not-abstract-tables"
		public Assignment getNameAssignment_10_0() { return cNameAssignment_10_0; }

		//"not-abstract-tables"
		public Keyword getNameNotAbstractTablesKeyword_10_0_0() { return cNameNotAbstractTablesKeyword_10_0_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_10_1() { return cDbTablesAssignment_10_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_10_1_0() { return cDbTablesValidIDParserRuleCall_10_1_0; }

		//name="join-tables" joinTables+=JoinTableAssignement+
		public Group getGroup_11() { return cGroup_11; }

		//name="join-tables"
		public Assignment getNameAssignment_11_0() { return cNameAssignment_11_0; }

		//"join-tables"
		public Keyword getNameJoinTablesKeyword_11_0_0() { return cNameJoinTablesKeyword_11_0_0; }

		//joinTables+=JoinTableAssignement+
		public Assignment getJoinTablesAssignment_11_1() { return cJoinTablesAssignment_11_1; }

		//JoinTableAssignement
		public RuleCall getJoinTablesJoinTableAssignementParserRuleCall_11_1_0() { return cJoinTablesJoinTableAssignementParserRuleCall_11_1_0; }

		//name="ignore-columns" dbTable=ValidID dbColumns+=ValidID+
		public Group getGroup_12() { return cGroup_12; }

		//name="ignore-columns"
		public Assignment getNameAssignment_12_0() { return cNameAssignment_12_0; }

		//"ignore-columns"
		public Keyword getNameIgnoreColumnsKeyword_12_0_0() { return cNameIgnoreColumnsKeyword_12_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_12_1() { return cDbTableAssignment_12_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_12_1_0() { return cDbTableValidIDParserRuleCall_12_1_0; }

		//dbColumns+=ValidID+
		public Assignment getDbColumnsAssignment_12_2() { return cDbColumnsAssignment_12_2; }

		//ValidID
		public RuleCall getDbColumnsValidIDParserRuleCall_12_2_0() { return cDbColumnsValidIDParserRuleCall_12_2_0; }

		//name="required-columns" dbTable=ValidID dbColumns+=ValidID+
		public Group getGroup_13() { return cGroup_13; }

		//name="required-columns"
		public Assignment getNameAssignment_13_0() { return cNameAssignment_13_0; }

		//"required-columns"
		public Keyword getNameRequiredColumnsKeyword_13_0_0() { return cNameRequiredColumnsKeyword_13_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_13_1() { return cDbTableAssignment_13_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_13_1_0() { return cDbTableValidIDParserRuleCall_13_1_0; }

		//dbColumns+=ValidID+
		public Assignment getDbColumnsAssignment_13_2() { return cDbColumnsAssignment_13_2; }

		//ValidID
		public RuleCall getDbColumnsValidIDParserRuleCall_13_2_0() { return cDbColumnsValidIDParserRuleCall_13_2_0; }

		//name="not-required-columns" dbTable=ValidID dbColumns+=ValidID+
		public Group getGroup_14() { return cGroup_14; }

		//name="not-required-columns"
		public Assignment getNameAssignment_14_0() { return cNameAssignment_14_0; }

		//"not-required-columns"
		public Keyword getNameNotRequiredColumnsKeyword_14_0_0() { return cNameNotRequiredColumnsKeyword_14_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_14_1() { return cDbTableAssignment_14_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_14_1_0() { return cDbTableValidIDParserRuleCall_14_1_0; }

		//dbColumns+=ValidID+
		public Assignment getDbColumnsAssignment_14_2() { return cDbColumnsAssignment_14_2; }

		//ValidID
		public RuleCall getDbColumnsValidIDParserRuleCall_14_2_0() { return cDbColumnsValidIDParserRuleCall_14_2_0; }

		//name="create-columns" dbTable=ValidID columnTypes+=ColumnTypeAssignement+
		public Group getGroup_15() { return cGroup_15; }

		//name="create-columns"
		public Assignment getNameAssignment_15_0() { return cNameAssignment_15_0; }

		//"create-columns"
		public Keyword getNameCreateColumnsKeyword_15_0_0() { return cNameCreateColumnsKeyword_15_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_15_1() { return cDbTableAssignment_15_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_15_1_0() { return cDbTableValidIDParserRuleCall_15_1_0; }

		//columnTypes+=ColumnTypeAssignement+
		public Assignment getColumnTypesAssignment_15_2() { return cColumnTypesAssignment_15_2; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_15_2_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_15_2_0; }

		//name="rename-tables" tables+=TableAssignement+
		public Group getGroup_16() { return cGroup_16; }

		//name="rename-tables"
		public Assignment getNameAssignment_16_0() { return cNameAssignment_16_0; }

		//"rename-tables"
		public Keyword getNameRenameTablesKeyword_16_0_0() { return cNameRenameTablesKeyword_16_0_0; }

		//tables+=TableAssignement+
		public Assignment getTablesAssignment_16_1() { return cTablesAssignment_16_1; }

		//TableAssignement
		public RuleCall getTablesTableAssignementParserRuleCall_16_1_0() { return cTablesTableAssignementParserRuleCall_16_1_0; }

		//name="rename-columns" dbTable=ValidID columns+=ColumnAssignement+
		public Group getGroup_17() { return cGroup_17; }

		//name="rename-columns"
		public Assignment getNameAssignment_17_0() { return cNameAssignment_17_0; }

		//"rename-columns"
		public Keyword getNameRenameColumnsKeyword_17_0_0() { return cNameRenameColumnsKeyword_17_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_17_1() { return cDbTableAssignment_17_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_17_1_0() { return cDbTableValidIDParserRuleCall_17_1_0; }

		//columns+=ColumnAssignement+
		public Assignment getColumnsAssignment_17_2() { return cColumnsAssignment_17_2; }

		//ColumnAssignement
		public RuleCall getColumnsColumnAssignementParserRuleCall_17_2_0() { return cColumnsColumnAssignementParserRuleCall_17_2_0; }

		//name="ignore-one-to-many" dbTable=ValidID exports+=ExportAssignement+ // exports
		public Group getGroup_18() { return cGroup_18; }

		//name="ignore-one-to-many"
		public Assignment getNameAssignment_18_0() { return cNameAssignment_18_0; }

		//"ignore-one-to-many"
		public Keyword getNameIgnoreOneToManyKeyword_18_0_0() { return cNameIgnoreOneToManyKeyword_18_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_18_1() { return cDbTableAssignment_18_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_18_1_0() { return cDbTableValidIDParserRuleCall_18_1_0; }

		//exports+=ExportAssignement+
		public Assignment getExportsAssignment_18_2() { return cExportsAssignment_18_2; }

		//ExportAssignement
		public RuleCall getExportsExportAssignementParserRuleCall_18_2_0() { return cExportsExportAssignementParserRuleCall_18_2_0; }

		//name="ignore-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		public Group getGroup_19() { return cGroup_19; }

		//name="ignore-many-to-one"
		public Assignment getNameAssignment_19_0() { return cNameAssignment_19_0; }

		//"ignore-many-to-one"
		public Keyword getNameIgnoreManyToOneKeyword_19_0_0() { return cNameIgnoreManyToOneKeyword_19_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_19_1() { return cDbTableAssignment_19_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_19_1_0() { return cDbTableValidIDParserRuleCall_19_1_0; }

		//imports+=ImportAssignement+
		public Assignment getImportsAssignment_19_2() { return cImportsAssignment_19_2; }

		//ImportAssignement
		public RuleCall getImportsImportAssignementParserRuleCall_19_2_0() { return cImportsImportAssignementParserRuleCall_19_2_0; }

		//name="inherit-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		public Group getGroup_20() { return cGroup_20; }

		//name="inherit-many-to-one"
		public Assignment getNameAssignment_20_0() { return cNameAssignment_20_0; }

		//"inherit-many-to-one"
		public Keyword getNameInheritManyToOneKeyword_20_0_0() { return cNameInheritManyToOneKeyword_20_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_20_1() { return cDbTableAssignment_20_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_20_1_0() { return cDbTableValidIDParserRuleCall_20_1_0; }

		//imports+=ImportAssignement+
		public Assignment getImportsAssignment_20_2() { return cImportsAssignment_20_2; }

		//ImportAssignement
		public RuleCall getImportsImportAssignementParserRuleCall_20_2_0() { return cImportsImportAssignementParserRuleCall_20_2_0; }

		//name="create-one-to-many" dbTable=ValidID exports+=ExportAssignement+ // exports
		public Group getGroup_21() { return cGroup_21; }

		//name="create-one-to-many"
		public Assignment getNameAssignment_21_0() { return cNameAssignment_21_0; }

		//"create-one-to-many"
		public Keyword getNameCreateOneToManyKeyword_21_0_0() { return cNameCreateOneToManyKeyword_21_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_21_1() { return cDbTableAssignment_21_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_21_1_0() { return cDbTableValidIDParserRuleCall_21_1_0; }

		//exports+=ExportAssignement+
		public Assignment getExportsAssignment_21_2() { return cExportsAssignment_21_2; }

		//ExportAssignement
		public RuleCall getExportsExportAssignementParserRuleCall_21_2_0() { return cExportsExportAssignementParserRuleCall_21_2_0; }

		//name="create-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
		public Group getGroup_22() { return cGroup_22; }

		//name="create-many-to-one"
		public Assignment getNameAssignment_22_0() { return cNameAssignment_22_0; }

		//"create-many-to-one"
		public Keyword getNameCreateManyToOneKeyword_22_0_0() { return cNameCreateManyToOneKeyword_22_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_22_1() { return cDbTableAssignment_22_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_22_1_0() { return cDbTableValidIDParserRuleCall_22_1_0; }

		//imports+=ImportAssignement+
		public Assignment getImportsAssignment_22_2() { return cImportsAssignment_22_2; }

		//ImportAssignement
		public RuleCall getImportsImportAssignementParserRuleCall_22_2_0() { return cImportsImportAssignementParserRuleCall_22_2_0; }

		//name="table-many-to-many" dbTable=ValidID many2s+=ManyToManyAssignement+
		public Group getGroup_23() { return cGroup_23; }

		//name="table-many-to-many"
		public Assignment getNameAssignment_23_0() { return cNameAssignment_23_0; }

		//"table-many-to-many"
		public Keyword getNameTableManyToManyKeyword_23_0_0() { return cNameTableManyToManyKeyword_23_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_23_1() { return cDbTableAssignment_23_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_23_1_0() { return cDbTableValidIDParserRuleCall_23_1_0; }

		//many2s+=ManyToManyAssignement+
		public Assignment getMany2sAssignment_23_2() { return cMany2sAssignment_23_2; }

		//ManyToManyAssignement
		public RuleCall getMany2sManyToManyAssignementParserRuleCall_23_2_0() { return cMany2sManyToManyAssignementParserRuleCall_23_2_0; }

		//name="inherit-discriminator" dbTable=ValidID dbColumn=ValidID inheritance+=InheritanceAssignement+
		public Group getGroup_24() { return cGroup_24; }

		//name="inherit-discriminator"
		public Assignment getNameAssignment_24_0() { return cNameAssignment_24_0; }

		//"inherit-discriminator"
		public Keyword getNameInheritDiscriminatorKeyword_24_0_0() { return cNameInheritDiscriminatorKeyword_24_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_24_1() { return cDbTableAssignment_24_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_24_1_0() { return cDbTableValidIDParserRuleCall_24_1_0; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_24_2() { return cDbColumnAssignment_24_2; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_24_2_0() { return cDbColumnValidIDParserRuleCall_24_2_0; }

		//inheritance+=InheritanceAssignement+
		public Assignment getInheritanceAssignment_24_3() { return cInheritanceAssignment_24_3; }

		//InheritanceAssignement
		public RuleCall getInheritanceInheritanceAssignementParserRuleCall_24_3_0() { return cInheritanceInheritanceAssignementParserRuleCall_24_3_0; }

		//name="generate-methods" methods+=ValidID+
		public Group getGroup_25() { return cGroup_25; }

		//name="generate-methods"
		public Assignment getNameAssignment_25_0() { return cNameAssignment_25_0; }

		//"generate-methods"
		public Keyword getNameGenerateMethodsKeyword_25_0_0() { return cNameGenerateMethodsKeyword_25_0_0; }

		//methods+=ValidID+
		public Assignment getMethodsAssignment_25_1() { return cMethodsAssignment_25_1; }

		//ValidID
		public RuleCall getMethodsValidIDParserRuleCall_25_1_0() { return cMethodsValidIDParserRuleCall_25_1_0; }

		//name="generate-operators" operatorsSuffix=ValidID?
		public Group getGroup_26() { return cGroup_26; }

		//name="generate-operators"
		public Assignment getNameAssignment_26_0() { return cNameAssignment_26_0; }

		//"generate-operators"
		public Keyword getNameGenerateOperatorsKeyword_26_0_0() { return cNameGenerateOperatorsKeyword_26_0_0; }

		//operatorsSuffix=ValidID?
		public Assignment getOperatorsSuffixAssignment_26_1() { return cOperatorsSuffixAssignment_26_1; }

		//ValidID
		public RuleCall getOperatorsSuffixValidIDParserRuleCall_26_1_0() { return cOperatorsSuffixValidIDParserRuleCall_26_1_0; }

		//name="implements-interfaces" toImplements=ImplementsAssignement
		public Group getGroup_27() { return cGroup_27; }

		//name="implements-interfaces"
		public Assignment getNameAssignment_27_0() { return cNameAssignment_27_0; }

		//"implements-interfaces"
		public Keyword getNameImplementsInterfacesKeyword_27_0_0() { return cNameImplementsInterfacesKeyword_27_0_0; }

		//toImplements=ImplementsAssignement
		public Assignment getToImplementsAssignment_27_1() { return cToImplementsAssignment_27_1; }

		//ImplementsAssignement
		public RuleCall getToImplementsImplementsAssignementParserRuleCall_27_1_0() { return cToImplementsImplementsAssignementParserRuleCall_27_1_0; }

		//name="extends-class" toExtends=ExtendsAssignement
		public Group getGroup_28() { return cGroup_28; }

		//name="extends-class"
		public Assignment getNameAssignment_28_0() { return cNameAssignment_28_0; }

		//"extends-class"
		public Keyword getNameExtendsClassKeyword_28_0_0() { return cNameExtendsClassKeyword_28_0_0; }

		//toExtends=ExtendsAssignement
		public Assignment getToExtendsAssignment_28_1() { return cToExtendsAssignment_28_1; }

		//ExtendsAssignement
		public RuleCall getToExtendsExtendsAssignementParserRuleCall_28_1_0() { return cToExtendsExtendsAssignementParserRuleCall_28_1_0; }

		//name="implements-interfaces-generics" toImplementsGenerics=ImplementsAssignementGenerics
		public Group getGroup_29() { return cGroup_29; }

		//name="implements-interfaces-generics"
		public Assignment getNameAssignment_29_0() { return cNameAssignment_29_0; }

		//"implements-interfaces-generics"
		public Keyword getNameImplementsInterfacesGenericsKeyword_29_0_0() { return cNameImplementsInterfacesGenericsKeyword_29_0_0; }

		//toImplementsGenerics=ImplementsAssignementGenerics
		public Assignment getToImplementsGenericsAssignment_29_1() { return cToImplementsGenericsAssignment_29_1; }

		//ImplementsAssignementGenerics
		public RuleCall getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_1_0() { return cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_1_0; }

		//name="extends-class-generics" toExtendsGenerics=ExtendsAssignementGenerics
		public Group getGroup_30() { return cGroup_30; }

		//name="extends-class-generics"
		public Assignment getNameAssignment_30_0() { return cNameAssignment_30_0; }

		//"extends-class-generics"
		public Keyword getNameExtendsClassGenericsKeyword_30_0_0() { return cNameExtendsClassGenericsKeyword_30_0_0; }

		//toExtendsGenerics=ExtendsAssignementGenerics
		public Assignment getToExtendsGenericsAssignment_30_1() { return cToExtendsGenericsAssignment_30_1; }

		//ExtendsAssignementGenerics
		public RuleCall getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_1_0() { return cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_1_0; }

		//name="generate-wrappers"
		public Assignment getNameAssignment_31() { return cNameAssignment_31; }

		//"generate-wrappers"
		public Keyword getNameGenerateWrappersKeyword_31_0() { return cNameGenerateWrappersKeyword_31_0; }

		//name="generate-validation-annotations"
		public Assignment getNameAssignment_32() { return cNameAssignment_32; }

		//"generate-validation-annotations"
		public Keyword getNameGenerateValidationAnnotationsKeyword_32_0() { return cNameGenerateValidationAnnotationsKeyword_32_0; }

		//name="preserve-foreign-keys" dbTables+=ValidID*
		public Group getGroup_33() { return cGroup_33; }

		//name="preserve-foreign-keys"
		public Assignment getNameAssignment_33_0() { return cNameAssignment_33_0; }

		//"preserve-foreign-keys"
		public Keyword getNamePreserveForeignKeysKeyword_33_0_0() { return cNamePreserveForeignKeysKeyword_33_0_0; }

		//dbTables+=ValidID*
		public Assignment getDbTablesAssignment_33_1() { return cDbTablesAssignment_33_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_33_1_0() { return cDbTablesValidIDParserRuleCall_33_1_0; }

		//name="make-it-final"
		public Assignment getNameAssignment_34() { return cNameAssignment_34; }

		//"make-it-final"
		public Keyword getNameMakeItFinalKeyword_34_0() { return cNameMakeItFinalKeyword_34_0; }

		//name="version-column" version=ValidID ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup_35() { return cGroup_35; }

		//name="version-column"
		public Assignment getNameAssignment_35_0() { return cNameAssignment_35_0; }

		//"version-column"
		public Keyword getNameVersionColumnKeyword_35_0_0() { return cNameVersionColumnKeyword_35_0_0; }

		//version=ValidID
		public Assignment getVersionAssignment_35_1() { return cVersionAssignment_35_1; }

		//ValidID
		public RuleCall getVersionValidIDParserRuleCall_35_1_0() { return cVersionValidIDParserRuleCall_35_1_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_35_2() { return cGroup_35_2; }

		//"+"
		public Keyword getPlusSignKeyword_35_2_0() { return cPlusSignKeyword_35_2_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_35_2_1() { return cDbTablesAssignment_35_2_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_35_2_1_0() { return cDbTablesValidIDParserRuleCall_35_2_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_35_3() { return cGroup_35_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_35_3_0() { return cHyphenMinusKeyword_35_3_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_35_3_1() { return cDbNotTablesAssignment_35_3_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_35_3_1_0() { return cDbNotTablesValidIDParserRuleCall_35_3_1_0; }

		//name="debug-level" debug=DebugLevelAssignement
		public Group getGroup_36() { return cGroup_36; }

		//name="debug-level"
		public Assignment getNameAssignment_36_0() { return cNameAssignment_36_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_36_0_0() { return cNameDebugLevelKeyword_36_0_0; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_36_1() { return cDebugAssignment_36_1; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_36_1_0() { return cDebugDebugLevelAssignementParserRuleCall_36_1_0; }

		//name="pojos-for-procedures" procPojos+=ProcedurePojoAssignement+
		public Group getGroup_37() { return cGroup_37; }

		//name="pojos-for-procedures"
		public Assignment getNameAssignment_37_0() { return cNameAssignment_37_0; }

		//"pojos-for-procedures"
		public Keyword getNamePojosForProceduresKeyword_37_0_0() { return cNamePojosForProceduresKeyword_37_0_0; }

		//procPojos+=ProcedurePojoAssignement+
		public Assignment getProcPojosAssignment_37_1() { return cProcPojosAssignment_37_1; }

		//ProcedurePojoAssignement
		public RuleCall getProcPojosProcedurePojoAssignementParserRuleCall_37_1_0() { return cProcPojosProcedurePojoAssignementParserRuleCall_37_1_0; }

		//name="pojos-for-functions" funPojos+=FunctionPojoAssignement+
		public Group getGroup_38() { return cGroup_38; }

		//name="pojos-for-functions"
		public Assignment getNameAssignment_38_0() { return cNameAssignment_38_0; }

		//"pojos-for-functions"
		public Keyword getNamePojosForFunctionsKeyword_38_0_0() { return cNamePojosForFunctionsKeyword_38_0_0; }

		//funPojos+=FunctionPojoAssignement+
		public Assignment getFunPojosAssignment_38_1() { return cFunPojosAssignment_38_1; }

		//FunctionPojoAssignement
		public RuleCall getFunPojosFunctionPojoAssignementParserRuleCall_38_1_0() { return cFunPojosFunctionPojoAssignementParserRuleCall_38_1_0; }

		//name="active-filter" activeFilter=ValueType
		public Group getGroup_39() { return cGroup_39; }

		//name="active-filter"
		public Assignment getNameAssignment_39_0() { return cNameAssignment_39_0; }

		//"active-filter"
		public Keyword getNameActiveFilterKeyword_39_0_0() { return cNameActiveFilterKeyword_39_0_0; }

		//activeFilter=ValueType
		public Assignment getActiveFilterAssignment_39_1() { return cActiveFilterAssignment_39_1; }

		//ValueType
		public RuleCall getActiveFilterValueTypeParserRuleCall_39_1_0() { return cActiveFilterValueTypeParserRuleCall_39_1_0; }

		//name="package" pckg=QualifiedName
		public Group getGroup_40() { return cGroup_40; }

		//name="package"
		public Assignment getNameAssignment_40_0() { return cNameAssignment_40_0; }

		//"package"
		public Keyword getNamePackageKeyword_40_0_0() { return cNamePackageKeyword_40_0_0; }

		//pckg=QualifiedName
		public Assignment getPckgAssignment_40_1() { return cPckgAssignment_40_1; }

		//QualifiedName
		public RuleCall getPckgQualifiedNameParserRuleCall_40_1_0() { return cPckgQualifiedNameParserRuleCall_40_1_0; }

		//name="enum-for-check-constraints" enumName=ValidID dbCheckConstraints+=ValidID+
		public Group getGroup_41() { return cGroup_41; }

		//name="enum-for-check-constraints"
		public Assignment getNameAssignment_41_0() { return cNameAssignment_41_0; }

		//"enum-for-check-constraints"
		public Keyword getNameEnumForCheckConstraintsKeyword_41_0_0() { return cNameEnumForCheckConstraintsKeyword_41_0_0; }

		//enumName=ValidID
		public Assignment getEnumNameAssignment_41_1() { return cEnumNameAssignment_41_1; }

		//ValidID
		public RuleCall getEnumNameValidIDParserRuleCall_41_1_0() { return cEnumNameValidIDParserRuleCall_41_1_0; }

		//dbCheckConstraints+=ValidID+
		public Assignment getDbCheckConstraintsAssignment_41_2() { return cDbCheckConstraintsAssignment_41_2; }

		//ValidID
		public RuleCall getDbCheckConstraintsValidIDParserRuleCall_41_2_0() { return cDbCheckConstraintsValidIDParserRuleCall_41_2_0; }
	}

	public class MetaTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnValidIDParserRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeValidIDParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExtensionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cExtensionValidIDParserRuleCall_3_1_0 = (RuleCall)cExtensionAssignment_3_1.eContents().get(0);
		
		//MetaTypeAssignement:
		//	dbColumn=ValidID "->" type=ValidID ("->" extension=ValidID)?;
		public ParserRule getRule() { return rule; }

		//dbColumn=ValidID "->" type=ValidID ("->" extension=ValidID)?
		public Group getGroup() { return cGroup; }

		//dbColumn=ValidID
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//ValidID
		public RuleCall getDbColumnValidIDParserRuleCall_0_0() { return cDbColumnValidIDParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//type=ValidID
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_2_0() { return cTypeValidIDParserRuleCall_2_0; }

		//("->" extension=ValidID)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//extension=ValidID
		public Assignment getExtensionAssignment_3_1() { return cExtensionAssignment_3_1; }

		//ValidID
		public RuleCall getExtensionValidIDParserRuleCall_3_1_0() { return cExtensionValidIDParserRuleCall_3_1_0; }
	}

	public class MetagenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetagenProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameGlobalSequenceKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cSequenceAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cSequenceValidIDParserRuleCall_0_1_0 = (RuleCall)cSequenceAssignment_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cTypeValidIDParserRuleCall_0_2_0 = (RuleCall)cTypeAssignment_0_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cPlusSignKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cDbTablesAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_0_3_1_0 = (RuleCall)cDbTablesAssignment_0_3_1.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cGroup_0.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_0_4_0 = (Keyword)cGroup_0_4.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_0_4_1 = (Assignment)cGroup_0_4.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_0_4_1_0 = (RuleCall)cDbNotTablesAssignment_0_4_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameTableSequenceKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Assignment cDbTableAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_1_1_0 = (RuleCall)cDbTableAssignment_1_1.eContents().get(0);
		private final Assignment cSequenceAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSequenceValidIDParserRuleCall_1_2_0 = (RuleCall)cSequenceAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cTypeValidIDParserRuleCall_1_3_0 = (RuleCall)cTypeAssignment_1_3.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameGlobalIdentityKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cIdentityAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cIdentityValidIDParserRuleCall_2_1_0_0 = (RuleCall)cIdentityAssignment_2_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cTypeValidIDParserRuleCall_2_1_1_0 = (RuleCall)cTypeAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cPlusSignKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_2_2_1_0 = (RuleCall)cDbTablesAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cDbNotTablesValidIDParserRuleCall_2_3_1_0 = (RuleCall)cDbNotTablesAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameTableIdentityKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final Assignment cDbTableAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_3_1_0 = (RuleCall)cDbTableAssignment_3_1.eContents().get(0);
		private final Assignment cIdentityAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdentityValidIDParserRuleCall_3_2_0 = (RuleCall)cIdentityAssignment_3_2.eContents().get(0);
		private final Assignment cTypeAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cTypeValidIDParserRuleCall_3_3_0 = (RuleCall)cTypeAssignment_3_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameColumnMetaTypeKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final Assignment cDbTableAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDbTableValidIDParserRuleCall_4_1_0 = (RuleCall)cDbTableAssignment_4_1.eContents().get(0);
		private final Assignment cMetaTypesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cMetaTypesMetaTypeAssignementParserRuleCall_4_2_0 = (RuleCall)cMetaTypesAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameStatementMetaTypeKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final Assignment cDbStatementAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDbStatementValidIDParserRuleCall_5_1_0 = (RuleCall)cDbStatementAssignment_5_1.eContents().get(0);
		private final Assignment cMetaTypesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMetaTypesMetaTypeAssignementParserRuleCall_5_2_0 = (RuleCall)cMetaTypesAssignment_5_2.eContents().get(0);
		private final Assignment cNameAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cNameMakeItFinalKeyword_6_0 = (Keyword)cNameAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameLikeColumnsKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Assignment cDbTableAssignment_7_1_0 = (Assignment)cGroup_7_1.eContents().get(0);
		private final RuleCall cDbTableValidIDParserRuleCall_7_1_0_0 = (RuleCall)cDbTableAssignment_7_1_0.eContents().get(0);
		private final Assignment cDbColumnsAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cDbColumnsValidIDParserRuleCall_7_1_1_0 = (RuleCall)cDbColumnsAssignment_7_1_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameNotLikeColumnsKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final Assignment cDbTableAssignment_8_1_0 = (Assignment)cGroup_8_1.eContents().get(0);
		private final RuleCall cDbTableValidIDParserRuleCall_8_1_0_0 = (RuleCall)cDbTableAssignment_8_1_0.eContents().get(0);
		private final Assignment cDbColumnsAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cDbColumnsValidIDParserRuleCall_8_1_1_0 = (RuleCall)cDbColumnsAssignment_8_1_1.eContents().get(0);
		private final Assignment cNameAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final Keyword cNameGenerateSequencesKeyword_9_0 = (Keyword)cNameAssignment_9.eContents().get(0);
		private final Assignment cNameAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final Keyword cNameGenerateIdentitiesKeyword_10_0 = (Keyword)cNameAssignment_10.eContents().get(0);
		private final Assignment cNameAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cNameGenerateIdgeneratorsKeyword_11_0 = (Keyword)cNameAssignment_11.eContents().get(0);
		private final Assignment cNameAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cNameGenerateDefaultIdgeneratorsKeyword_12_0 = (Keyword)cNameAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Assignment cNameAssignment_13_0 = (Assignment)cGroup_13.eContents().get(0);
		private final Keyword cNameFunctionResultKeyword_13_0_0 = (Keyword)cNameAssignment_13_0.eContents().get(0);
		private final Assignment cDbFunctionAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cDbFunctionValidIDParserRuleCall_13_1_0 = (RuleCall)cDbFunctionAssignment_13_1.eContents().get(0);
		private final Assignment cTypeAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cTypeValidIDParserRuleCall_13_2_0 = (RuleCall)cTypeAssignment_13_2.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cNameAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cNameFunctionResultSetKeyword_14_0_0 = (Keyword)cNameAssignment_14_0.eContents().get(0);
		private final Assignment cDbFunctionAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cDbFunctionValidIDParserRuleCall_14_1_0 = (RuleCall)cDbFunctionAssignment_14_1.eContents().get(0);
		private final Assignment cDbTableAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cDbTableValidIDParserRuleCall_14_2_0 = (RuleCall)cDbTableAssignment_14_2.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cNameAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cNameProcedureResultSetKeyword_15_0_0 = (Keyword)cNameAssignment_15_0.eContents().get(0);
		private final Assignment cDbProcedureAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cDbProcedureValidIDParserRuleCall_15_1_0 = (RuleCall)cDbProcedureAssignment_15_1.eContents().get(0);
		private final Assignment cDbTableAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cDbTableValidIDParserRuleCall_15_2_0 = (RuleCall)cDbTableAssignment_15_2.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cNameAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_16_0_0 = (Keyword)cNameAssignment_16_0.eContents().get(0);
		private final Assignment cDebugAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_16_1_0 = (RuleCall)cDebugAssignment_16_1.eContents().get(0);
		private final Assignment cNameAssignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final Keyword cNameGenerateOperatorsKeyword_17_0 = (Keyword)cNameAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cNameAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cNameOptimizeInsertKeyword_18_0_0 = (Keyword)cNameAssignment_18_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_18_1_0 = (RuleCall)cDbTablesAssignment_18_1.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Assignment cNameAssignment_19_0 = (Assignment)cGroup_19.eContents().get(0);
		private final Keyword cNameOptionalFeaturesKeyword_19_0_0 = (Keyword)cNameAssignment_19_0.eContents().get(0);
		private final Assignment cDbStatementAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cDbStatementValidIDParserRuleCall_19_1_0 = (RuleCall)cDbStatementAssignment_19_1.eContents().get(0);
		private final Assignment cOptionalFeaturesAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cOptionalFeaturesValidIDParserRuleCall_19_2_0 = (RuleCall)cOptionalFeaturesAssignment_19_2.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Assignment cNameAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final Keyword cNameActiveFilterKeyword_20_0_0 = (Keyword)cNameAssignment_20_0.eContents().get(0);
		private final Assignment cActiveFilterAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cActiveFilterValueTypeParserRuleCall_20_1_0 = (RuleCall)cActiveFilterAssignment_20_1.eContents().get(0);
		
		//MetagenProperty:
		//	name="global-sequence" sequence=ValidID type=ValidID? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? |
		//	name="table-sequence" dbTable=ValidID sequence=ValidID type=ValidID? | name="global-identity" (identity=ValidID
		//	type=ValidID?)? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? | name="table-identity" dbTable=ValidID
		//	identity=ValidID type=ValidID? | name="column-meta-type" dbTable=ValidID metaTypes+=MetaTypeAssignement+ |
		//	name="statement-meta-type" dbStatement=ValidID metaTypes+=MetaTypeAssignement+ | name="make-it-final" |
		//	name="like-columns" (dbTable=ValidID dbColumns+=ValidID+)? | name="not-like-columns" (dbTable=ValidID
		//	dbColumns+=ValidID+)? | name="generate-sequences" | name="generate-identities" | name="generate-idgenerators" |
		//	name="generate-default-idgenerators" | name="function-result" dbFunction=ValidID type=ValidID |
		//	name="function-result-set" dbFunction=ValidID dbTable=ValidID | name="procedure-result-set" dbProcedure=ValidID
		//	dbTable=ValidID | name="debug-level" debug=DebugLevelAssignement | name="generate-operators" | name="optimize-insert"
		//	dbTables+=ValidID* | name="optional-features" dbStatement=ValidID optionalFeatures+=ValidID+ | name="active-filter"
		//	activeFilter=ValueType;
		public ParserRule getRule() { return rule; }

		//name="global-sequence" sequence=ValidID type=ValidID? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? |
		//name="table-sequence" dbTable=ValidID sequence=ValidID type=ValidID? | name="global-identity" (identity=ValidID
		//type=ValidID?)? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? | name="table-identity" dbTable=ValidID
		//identity=ValidID type=ValidID? | name="column-meta-type" dbTable=ValidID metaTypes+=MetaTypeAssignement+ |
		//name="statement-meta-type" dbStatement=ValidID metaTypes+=MetaTypeAssignement+ | name="make-it-final" |
		//name="like-columns" (dbTable=ValidID dbColumns+=ValidID+)? | name="not-like-columns" (dbTable=ValidID
		//dbColumns+=ValidID+)? | name="generate-sequences" | name="generate-identities" | name="generate-idgenerators" |
		//name="generate-default-idgenerators" | name="function-result" dbFunction=ValidID type=ValidID |
		//name="function-result-set" dbFunction=ValidID dbTable=ValidID | name="procedure-result-set" dbProcedure=ValidID
		//dbTable=ValidID | name="debug-level" debug=DebugLevelAssignement | name="generate-operators" | name="optimize-insert"
		//dbTables+=ValidID* | name="optional-features" dbStatement=ValidID optionalFeatures+=ValidID+ | name="active-filter"
		//activeFilter=ValueType
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="global-sequence" sequence=ValidID type=ValidID? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup_0() { return cGroup_0; }

		//name="global-sequence"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"global-sequence"
		public Keyword getNameGlobalSequenceKeyword_0_0_0() { return cNameGlobalSequenceKeyword_0_0_0; }

		//sequence=ValidID
		public Assignment getSequenceAssignment_0_1() { return cSequenceAssignment_0_1; }

		//ValidID
		public RuleCall getSequenceValidIDParserRuleCall_0_1_0() { return cSequenceValidIDParserRuleCall_0_1_0; }

		//type=ValidID?
		public Assignment getTypeAssignment_0_2() { return cTypeAssignment_0_2; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_0_2_0() { return cTypeValidIDParserRuleCall_0_2_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_0_3() { return cGroup_0_3; }

		//"+"
		public Keyword getPlusSignKeyword_0_3_0() { return cPlusSignKeyword_0_3_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_0_3_1() { return cDbTablesAssignment_0_3_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_0_3_1_0() { return cDbTablesValidIDParserRuleCall_0_3_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_0_4() { return cGroup_0_4; }

		//"-"
		public Keyword getHyphenMinusKeyword_0_4_0() { return cHyphenMinusKeyword_0_4_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_0_4_1() { return cDbNotTablesAssignment_0_4_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_0_4_1_0() { return cDbNotTablesValidIDParserRuleCall_0_4_1_0; }

		//name="table-sequence" dbTable=ValidID sequence=ValidID type=ValidID?
		public Group getGroup_1() { return cGroup_1; }

		//name="table-sequence"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"table-sequence"
		public Keyword getNameTableSequenceKeyword_1_0_0() { return cNameTableSequenceKeyword_1_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_1_1() { return cDbTableAssignment_1_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_1_1_0() { return cDbTableValidIDParserRuleCall_1_1_0; }

		//sequence=ValidID
		public Assignment getSequenceAssignment_1_2() { return cSequenceAssignment_1_2; }

		//ValidID
		public RuleCall getSequenceValidIDParserRuleCall_1_2_0() { return cSequenceValidIDParserRuleCall_1_2_0; }

		//type=ValidID?
		public Assignment getTypeAssignment_1_3() { return cTypeAssignment_1_3; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_1_3_0() { return cTypeValidIDParserRuleCall_1_3_0; }

		//name="global-identity" (identity=ValidID type=ValidID?)? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?
		public Group getGroup_2() { return cGroup_2; }

		//name="global-identity"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"global-identity"
		public Keyword getNameGlobalIdentityKeyword_2_0_0() { return cNameGlobalIdentityKeyword_2_0_0; }

		//(identity=ValidID type=ValidID?)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//identity=ValidID
		public Assignment getIdentityAssignment_2_1_0() { return cIdentityAssignment_2_1_0; }

		//ValidID
		public RuleCall getIdentityValidIDParserRuleCall_2_1_0_0() { return cIdentityValidIDParserRuleCall_2_1_0_0; }

		//type=ValidID?
		public Assignment getTypeAssignment_2_1_1() { return cTypeAssignment_2_1_1; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_2_1_1_0() { return cTypeValidIDParserRuleCall_2_1_1_0; }

		//("+" dbTables+=ValidID+)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"+"
		public Keyword getPlusSignKeyword_2_2_0() { return cPlusSignKeyword_2_2_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_2_2_1() { return cDbTablesAssignment_2_2_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_2_2_1_0() { return cDbTablesValidIDParserRuleCall_2_2_1_0; }

		//("-" dbNotTables+=ValidID+)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_2_3_0() { return cHyphenMinusKeyword_2_3_0; }

		//dbNotTables+=ValidID+
		public Assignment getDbNotTablesAssignment_2_3_1() { return cDbNotTablesAssignment_2_3_1; }

		//ValidID
		public RuleCall getDbNotTablesValidIDParserRuleCall_2_3_1_0() { return cDbNotTablesValidIDParserRuleCall_2_3_1_0; }

		//name="table-identity" dbTable=ValidID identity=ValidID type=ValidID?
		public Group getGroup_3() { return cGroup_3; }

		//name="table-identity"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"table-identity"
		public Keyword getNameTableIdentityKeyword_3_0_0() { return cNameTableIdentityKeyword_3_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_3_1() { return cDbTableAssignment_3_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_3_1_0() { return cDbTableValidIDParserRuleCall_3_1_0; }

		//identity=ValidID
		public Assignment getIdentityAssignment_3_2() { return cIdentityAssignment_3_2; }

		//ValidID
		public RuleCall getIdentityValidIDParserRuleCall_3_2_0() { return cIdentityValidIDParserRuleCall_3_2_0; }

		//type=ValidID?
		public Assignment getTypeAssignment_3_3() { return cTypeAssignment_3_3; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_3_3_0() { return cTypeValidIDParserRuleCall_3_3_0; }

		//name="column-meta-type" dbTable=ValidID metaTypes+=MetaTypeAssignement+
		public Group getGroup_4() { return cGroup_4; }

		//name="column-meta-type"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"column-meta-type"
		public Keyword getNameColumnMetaTypeKeyword_4_0_0() { return cNameColumnMetaTypeKeyword_4_0_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_4_1() { return cDbTableAssignment_4_1; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_4_1_0() { return cDbTableValidIDParserRuleCall_4_1_0; }

		//metaTypes+=MetaTypeAssignement+
		public Assignment getMetaTypesAssignment_4_2() { return cMetaTypesAssignment_4_2; }

		//MetaTypeAssignement
		public RuleCall getMetaTypesMetaTypeAssignementParserRuleCall_4_2_0() { return cMetaTypesMetaTypeAssignementParserRuleCall_4_2_0; }

		//name="statement-meta-type" dbStatement=ValidID metaTypes+=MetaTypeAssignement+
		public Group getGroup_5() { return cGroup_5; }

		//name="statement-meta-type"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"statement-meta-type"
		public Keyword getNameStatementMetaTypeKeyword_5_0_0() { return cNameStatementMetaTypeKeyword_5_0_0; }

		//dbStatement=ValidID
		public Assignment getDbStatementAssignment_5_1() { return cDbStatementAssignment_5_1; }

		//ValidID
		public RuleCall getDbStatementValidIDParserRuleCall_5_1_0() { return cDbStatementValidIDParserRuleCall_5_1_0; }

		//metaTypes+=MetaTypeAssignement+
		public Assignment getMetaTypesAssignment_5_2() { return cMetaTypesAssignment_5_2; }

		//MetaTypeAssignement
		public RuleCall getMetaTypesMetaTypeAssignementParserRuleCall_5_2_0() { return cMetaTypesMetaTypeAssignementParserRuleCall_5_2_0; }

		//name="make-it-final"
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//"make-it-final"
		public Keyword getNameMakeItFinalKeyword_6_0() { return cNameMakeItFinalKeyword_6_0; }

		//name="like-columns" (dbTable=ValidID dbColumns+=ValidID+)?
		public Group getGroup_7() { return cGroup_7; }

		//name="like-columns"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"like-columns"
		public Keyword getNameLikeColumnsKeyword_7_0_0() { return cNameLikeColumnsKeyword_7_0_0; }

		//(dbTable=ValidID dbColumns+=ValidID+)?
		public Group getGroup_7_1() { return cGroup_7_1; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_7_1_0() { return cDbTableAssignment_7_1_0; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_7_1_0_0() { return cDbTableValidIDParserRuleCall_7_1_0_0; }

		//dbColumns+=ValidID+
		public Assignment getDbColumnsAssignment_7_1_1() { return cDbColumnsAssignment_7_1_1; }

		//ValidID
		public RuleCall getDbColumnsValidIDParserRuleCall_7_1_1_0() { return cDbColumnsValidIDParserRuleCall_7_1_1_0; }

		//name="not-like-columns" (dbTable=ValidID dbColumns+=ValidID+)?
		public Group getGroup_8() { return cGroup_8; }

		//name="not-like-columns"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"not-like-columns"
		public Keyword getNameNotLikeColumnsKeyword_8_0_0() { return cNameNotLikeColumnsKeyword_8_0_0; }

		//(dbTable=ValidID dbColumns+=ValidID+)?
		public Group getGroup_8_1() { return cGroup_8_1; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_8_1_0() { return cDbTableAssignment_8_1_0; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_8_1_0_0() { return cDbTableValidIDParserRuleCall_8_1_0_0; }

		//dbColumns+=ValidID+
		public Assignment getDbColumnsAssignment_8_1_1() { return cDbColumnsAssignment_8_1_1; }

		//ValidID
		public RuleCall getDbColumnsValidIDParserRuleCall_8_1_1_0() { return cDbColumnsValidIDParserRuleCall_8_1_1_0; }

		//name="generate-sequences"
		public Assignment getNameAssignment_9() { return cNameAssignment_9; }

		//"generate-sequences"
		public Keyword getNameGenerateSequencesKeyword_9_0() { return cNameGenerateSequencesKeyword_9_0; }

		//name="generate-identities"
		public Assignment getNameAssignment_10() { return cNameAssignment_10; }

		//"generate-identities"
		public Keyword getNameGenerateIdentitiesKeyword_10_0() { return cNameGenerateIdentitiesKeyword_10_0; }

		//name="generate-idgenerators"
		public Assignment getNameAssignment_11() { return cNameAssignment_11; }

		//"generate-idgenerators"
		public Keyword getNameGenerateIdgeneratorsKeyword_11_0() { return cNameGenerateIdgeneratorsKeyword_11_0; }

		//name="generate-default-idgenerators"
		public Assignment getNameAssignment_12() { return cNameAssignment_12; }

		//"generate-default-idgenerators"
		public Keyword getNameGenerateDefaultIdgeneratorsKeyword_12_0() { return cNameGenerateDefaultIdgeneratorsKeyword_12_0; }

		//name="function-result" dbFunction=ValidID type=ValidID
		public Group getGroup_13() { return cGroup_13; }

		//name="function-result"
		public Assignment getNameAssignment_13_0() { return cNameAssignment_13_0; }

		//"function-result"
		public Keyword getNameFunctionResultKeyword_13_0_0() { return cNameFunctionResultKeyword_13_0_0; }

		//dbFunction=ValidID
		public Assignment getDbFunctionAssignment_13_1() { return cDbFunctionAssignment_13_1; }

		//ValidID
		public RuleCall getDbFunctionValidIDParserRuleCall_13_1_0() { return cDbFunctionValidIDParserRuleCall_13_1_0; }

		//type=ValidID
		public Assignment getTypeAssignment_13_2() { return cTypeAssignment_13_2; }

		//ValidID
		public RuleCall getTypeValidIDParserRuleCall_13_2_0() { return cTypeValidIDParserRuleCall_13_2_0; }

		//name="function-result-set" dbFunction=ValidID dbTable=ValidID
		public Group getGroup_14() { return cGroup_14; }

		//name="function-result-set"
		public Assignment getNameAssignment_14_0() { return cNameAssignment_14_0; }

		//"function-result-set"
		public Keyword getNameFunctionResultSetKeyword_14_0_0() { return cNameFunctionResultSetKeyword_14_0_0; }

		//dbFunction=ValidID
		public Assignment getDbFunctionAssignment_14_1() { return cDbFunctionAssignment_14_1; }

		//ValidID
		public RuleCall getDbFunctionValidIDParserRuleCall_14_1_0() { return cDbFunctionValidIDParserRuleCall_14_1_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_14_2() { return cDbTableAssignment_14_2; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_14_2_0() { return cDbTableValidIDParserRuleCall_14_2_0; }

		//name="procedure-result-set" dbProcedure=ValidID dbTable=ValidID
		public Group getGroup_15() { return cGroup_15; }

		//name="procedure-result-set"
		public Assignment getNameAssignment_15_0() { return cNameAssignment_15_0; }

		//"procedure-result-set"
		public Keyword getNameProcedureResultSetKeyword_15_0_0() { return cNameProcedureResultSetKeyword_15_0_0; }

		//dbProcedure=ValidID
		public Assignment getDbProcedureAssignment_15_1() { return cDbProcedureAssignment_15_1; }

		//ValidID
		public RuleCall getDbProcedureValidIDParserRuleCall_15_1_0() { return cDbProcedureValidIDParserRuleCall_15_1_0; }

		//dbTable=ValidID
		public Assignment getDbTableAssignment_15_2() { return cDbTableAssignment_15_2; }

		//ValidID
		public RuleCall getDbTableValidIDParserRuleCall_15_2_0() { return cDbTableValidIDParserRuleCall_15_2_0; }

		//name="debug-level" debug=DebugLevelAssignement
		public Group getGroup_16() { return cGroup_16; }

		//name="debug-level"
		public Assignment getNameAssignment_16_0() { return cNameAssignment_16_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_16_0_0() { return cNameDebugLevelKeyword_16_0_0; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_16_1() { return cDebugAssignment_16_1; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_16_1_0() { return cDebugDebugLevelAssignementParserRuleCall_16_1_0; }

		//name="generate-operators"
		public Assignment getNameAssignment_17() { return cNameAssignment_17; }

		//"generate-operators"
		public Keyword getNameGenerateOperatorsKeyword_17_0() { return cNameGenerateOperatorsKeyword_17_0; }

		//name="optimize-insert" dbTables+=ValidID*
		public Group getGroup_18() { return cGroup_18; }

		//name="optimize-insert"
		public Assignment getNameAssignment_18_0() { return cNameAssignment_18_0; }

		//"optimize-insert"
		public Keyword getNameOptimizeInsertKeyword_18_0_0() { return cNameOptimizeInsertKeyword_18_0_0; }

		//dbTables+=ValidID*
		public Assignment getDbTablesAssignment_18_1() { return cDbTablesAssignment_18_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_18_1_0() { return cDbTablesValidIDParserRuleCall_18_1_0; }

		//name="optional-features" dbStatement=ValidID optionalFeatures+=ValidID+
		public Group getGroup_19() { return cGroup_19; }

		//name="optional-features"
		public Assignment getNameAssignment_19_0() { return cNameAssignment_19_0; }

		//"optional-features"
		public Keyword getNameOptionalFeaturesKeyword_19_0_0() { return cNameOptionalFeaturesKeyword_19_0_0; }

		//dbStatement=ValidID
		public Assignment getDbStatementAssignment_19_1() { return cDbStatementAssignment_19_1; }

		//ValidID
		public RuleCall getDbStatementValidIDParserRuleCall_19_1_0() { return cDbStatementValidIDParserRuleCall_19_1_0; }

		//optionalFeatures+=ValidID+
		public Assignment getOptionalFeaturesAssignment_19_2() { return cOptionalFeaturesAssignment_19_2; }

		//ValidID
		public RuleCall getOptionalFeaturesValidIDParserRuleCall_19_2_0() { return cOptionalFeaturesValidIDParserRuleCall_19_2_0; }

		//name="active-filter" activeFilter=ValueType
		public Group getGroup_20() { return cGroup_20; }

		//name="active-filter"
		public Assignment getNameAssignment_20_0() { return cNameAssignment_20_0; }

		//"active-filter"
		public Keyword getNameActiveFilterKeyword_20_0_0() { return cNameActiveFilterKeyword_20_0_0; }

		//activeFilter=ValueType
		public Assignment getActiveFilterAssignment_20_1() { return cActiveFilterAssignment_20_1; }

		//ValueType
		public RuleCall getActiveFilterValueTypeParserRuleCall_20_1_0() { return cActiveFilterValueTypeParserRuleCall_20_1_0; }
	}

	public class DaogenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DaogenProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameIgnoreTablesKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_0_1_0 = (RuleCall)cDbTablesAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameOnlyTablesKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDbTablesValidIDParserRuleCall_1_1_0 = (RuleCall)cDbTablesAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameImplementsInterfacesKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Assignment cToImplementsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cToImplementsImplementsAssignementParserRuleCall_2_1_0 = (RuleCall)cToImplementsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameExtendsClassKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final Assignment cToExtendsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cToExtendsExtendsAssignementParserRuleCall_3_1_0 = (RuleCall)cToExtendsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameImplementsInterfacesGenericsKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final Assignment cToImplementsGenericsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_4_1_0 = (RuleCall)cToImplementsGenericsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameExtendsClassGenericsKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final Assignment cToExtendsGenericsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_5_1_0 = (RuleCall)cToExtendsGenericsAssignment_5_1.eContents().get(0);
		private final Assignment cNameAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cNameMakeItFinalKeyword_6_0 = (Keyword)cNameAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameFunctionResultKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final Assignment cDbFunctionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDbFunctionValidIDParserRuleCall_7_1_0 = (RuleCall)cDbFunctionAssignment_7_1.eContents().get(0);
		private final Keyword cColonKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cResultTypeAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cResultTypeJvmParameterizedTypeReferenceParserRuleCall_7_3_0 = (RuleCall)cResultTypeAssignment_7_3.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final Assignment cDebugAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_8_1_0 = (RuleCall)cDebugAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cNameAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cNameActiveFilterKeyword_9_0_0 = (Keyword)cNameAssignment_9_0.eContents().get(0);
		private final Assignment cActiveFilterAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cActiveFilterValueTypeParserRuleCall_9_1_0 = (RuleCall)cActiveFilterAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cNameAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cNamePackageKeyword_10_0_0 = (Keyword)cNameAssignment_10_0.eContents().get(0);
		private final Assignment cPckgAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cPckgQualifiedNameParserRuleCall_10_1_0 = (RuleCall)cPckgAssignment_10_1.eContents().get(0);
		
		//DaogenProperty:
		//	name="ignore-tables" dbTables+=ValidID+ | name="only-tables" dbTables+=ValidID* | name="implements-interfaces"
		//	toImplements=ImplementsAssignement | name="extends-class" toExtends=ExtendsAssignement |
		//	name="implements-interfaces-generics" toImplementsGenerics=ImplementsAssignementGenerics |
		//	name="extends-class-generics" toExtendsGenerics=ExtendsAssignementGenerics | name="make-it-final" |
		//	name="function-result" dbFunction=ValidID ":"? resultType=JvmParameterizedTypeReference | name="debug-level"
		//	debug=DebugLevelAssignement | name="active-filter" activeFilter=ValueType | name="package" pckg=QualifiedName;
		public ParserRule getRule() { return rule; }

		//name="ignore-tables" dbTables+=ValidID+ | name="only-tables" dbTables+=ValidID* | name="implements-interfaces"
		//toImplements=ImplementsAssignement | name="extends-class" toExtends=ExtendsAssignement |
		//name="implements-interfaces-generics" toImplementsGenerics=ImplementsAssignementGenerics |
		//name="extends-class-generics" toExtendsGenerics=ExtendsAssignementGenerics | name="make-it-final" |
		//name="function-result" dbFunction=ValidID ":"? resultType=JvmParameterizedTypeReference | name="debug-level"
		//debug=DebugLevelAssignement | name="active-filter" activeFilter=ValueType | name="package" pckg=QualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="ignore-tables" dbTables+=ValidID+
		public Group getGroup_0() { return cGroup_0; }

		//name="ignore-tables"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"ignore-tables"
		public Keyword getNameIgnoreTablesKeyword_0_0_0() { return cNameIgnoreTablesKeyword_0_0_0; }

		//dbTables+=ValidID+
		public Assignment getDbTablesAssignment_0_1() { return cDbTablesAssignment_0_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_0_1_0() { return cDbTablesValidIDParserRuleCall_0_1_0; }

		//name="only-tables" dbTables+=ValidID*
		public Group getGroup_1() { return cGroup_1; }

		//name="only-tables"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"only-tables"
		public Keyword getNameOnlyTablesKeyword_1_0_0() { return cNameOnlyTablesKeyword_1_0_0; }

		//dbTables+=ValidID*
		public Assignment getDbTablesAssignment_1_1() { return cDbTablesAssignment_1_1; }

		//ValidID
		public RuleCall getDbTablesValidIDParserRuleCall_1_1_0() { return cDbTablesValidIDParserRuleCall_1_1_0; }

		//name="implements-interfaces" toImplements=ImplementsAssignement
		public Group getGroup_2() { return cGroup_2; }

		//name="implements-interfaces"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"implements-interfaces"
		public Keyword getNameImplementsInterfacesKeyword_2_0_0() { return cNameImplementsInterfacesKeyword_2_0_0; }

		//toImplements=ImplementsAssignement
		public Assignment getToImplementsAssignment_2_1() { return cToImplementsAssignment_2_1; }

		//ImplementsAssignement
		public RuleCall getToImplementsImplementsAssignementParserRuleCall_2_1_0() { return cToImplementsImplementsAssignementParserRuleCall_2_1_0; }

		//name="extends-class" toExtends=ExtendsAssignement
		public Group getGroup_3() { return cGroup_3; }

		//name="extends-class"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"extends-class"
		public Keyword getNameExtendsClassKeyword_3_0_0() { return cNameExtendsClassKeyword_3_0_0; }

		//toExtends=ExtendsAssignement
		public Assignment getToExtendsAssignment_3_1() { return cToExtendsAssignment_3_1; }

		//ExtendsAssignement
		public RuleCall getToExtendsExtendsAssignementParserRuleCall_3_1_0() { return cToExtendsExtendsAssignementParserRuleCall_3_1_0; }

		//name="implements-interfaces-generics" toImplementsGenerics=ImplementsAssignementGenerics
		public Group getGroup_4() { return cGroup_4; }

		//name="implements-interfaces-generics"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"implements-interfaces-generics"
		public Keyword getNameImplementsInterfacesGenericsKeyword_4_0_0() { return cNameImplementsInterfacesGenericsKeyword_4_0_0; }

		//toImplementsGenerics=ImplementsAssignementGenerics
		public Assignment getToImplementsGenericsAssignment_4_1() { return cToImplementsGenericsAssignment_4_1; }

		//ImplementsAssignementGenerics
		public RuleCall getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_4_1_0() { return cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_4_1_0; }

		//name="extends-class-generics" toExtendsGenerics=ExtendsAssignementGenerics
		public Group getGroup_5() { return cGroup_5; }

		//name="extends-class-generics"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"extends-class-generics"
		public Keyword getNameExtendsClassGenericsKeyword_5_0_0() { return cNameExtendsClassGenericsKeyword_5_0_0; }

		//toExtendsGenerics=ExtendsAssignementGenerics
		public Assignment getToExtendsGenericsAssignment_5_1() { return cToExtendsGenericsAssignment_5_1; }

		//ExtendsAssignementGenerics
		public RuleCall getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_5_1_0() { return cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_5_1_0; }

		//name="make-it-final"
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//"make-it-final"
		public Keyword getNameMakeItFinalKeyword_6_0() { return cNameMakeItFinalKeyword_6_0; }

		//name="function-result" dbFunction=ValidID ":"? resultType=JvmParameterizedTypeReference
		public Group getGroup_7() { return cGroup_7; }

		//name="function-result"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"function-result"
		public Keyword getNameFunctionResultKeyword_7_0_0() { return cNameFunctionResultKeyword_7_0_0; }

		//dbFunction=ValidID
		public Assignment getDbFunctionAssignment_7_1() { return cDbFunctionAssignment_7_1; }

		//ValidID
		public RuleCall getDbFunctionValidIDParserRuleCall_7_1_0() { return cDbFunctionValidIDParserRuleCall_7_1_0; }

		//":"?
		public Keyword getColonKeyword_7_2() { return cColonKeyword_7_2; }

		//resultType=JvmParameterizedTypeReference
		public Assignment getResultTypeAssignment_7_3() { return cResultTypeAssignment_7_3; }

		//JvmParameterizedTypeReference
		public RuleCall getResultTypeJvmParameterizedTypeReferenceParserRuleCall_7_3_0() { return cResultTypeJvmParameterizedTypeReferenceParserRuleCall_7_3_0; }

		//name="debug-level" debug=DebugLevelAssignement
		public Group getGroup_8() { return cGroup_8; }

		//name="debug-level"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_8_0_0() { return cNameDebugLevelKeyword_8_0_0; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_8_1() { return cDebugAssignment_8_1; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_8_1_0() { return cDebugDebugLevelAssignementParserRuleCall_8_1_0; }

		//name="active-filter" activeFilter=ValueType
		public Group getGroup_9() { return cGroup_9; }

		//name="active-filter"
		public Assignment getNameAssignment_9_0() { return cNameAssignment_9_0; }

		//"active-filter"
		public Keyword getNameActiveFilterKeyword_9_0_0() { return cNameActiveFilterKeyword_9_0_0; }

		//activeFilter=ValueType
		public Assignment getActiveFilterAssignment_9_1() { return cActiveFilterAssignment_9_1; }

		//ValueType
		public RuleCall getActiveFilterValueTypeParserRuleCall_9_1_0() { return cActiveFilterValueTypeParserRuleCall_9_1_0; }

		//name="package" pckg=QualifiedName
		public Group getGroup_10() { return cGroup_10; }

		//name="package"
		public Assignment getNameAssignment_10_0() { return cNameAssignment_10_0; }

		//"package"
		public Keyword getNamePackageKeyword_10_0_0() { return cNamePackageKeyword_10_0_0; }

		//pckg=QualifiedName
		public Assignment getPckgAssignment_10_1() { return cPckgAssignment_10_1; }

		//QualifiedName
		public RuleCall getPckgQualifiedNameParserRuleCall_10_1_0() { return cPckgQualifiedNameParserRuleCall_10_1_0; }
	}

	public class PojoDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPojoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cClassAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cClassQualifiedNameParserRuleCall_2_0_0 = (RuleCall)cClassAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cColonKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cClassxAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cClassxJvmParameterizedTypeReferenceParserRuleCall_2_1_1_0 = (RuleCall)cClassxAssignment_2_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PojoDefinition:
		//	"pojo" name=ValidID (class=QualifiedName | ":" classx=JvmParameterizedTypeReference) ";";
		public ParserRule getRule() { return rule; }

		//"pojo" name=ValidID (class=QualifiedName | ":" classx=JvmParameterizedTypeReference) ";"
		public Group getGroup() { return cGroup; }

		//"pojo"
		public Keyword getPojoKeyword_0() { return cPojoKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//class=QualifiedName | ":" classx=JvmParameterizedTypeReference
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//class=QualifiedName
		public Assignment getClassAssignment_2_0() { return cClassAssignment_2_0; }

		//QualifiedName
		public RuleCall getClassQualifiedNameParserRuleCall_2_0_0() { return cClassQualifiedNameParserRuleCall_2_0_0; }

		//":" classx=JvmParameterizedTypeReference
		public Group getGroup_2_1() { return cGroup_2_1; }

		//":"
		public Keyword getColonKeyword_2_1_0() { return cColonKeyword_2_1_0; }

		//classx=JvmParameterizedTypeReference
		public Assignment getClassxAssignment_2_1_1() { return cClassxAssignment_2_1_1; }

		//JvmParameterizedTypeReference
		public RuleCall getClassxJvmParameterizedTypeReferenceParserRuleCall_2_1_1_0() { return cClassxJvmParameterizedTypeReferenceParserRuleCall_2_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class TableDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableValidIDParserRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TableDefinition:
		//	"table" name=ValidID table=ValidID ";";
		public ParserRule getRule() { return rule; }

		//"table" name=ValidID table=ValidID ";"
		public Group getGroup() { return cGroup; }

		//"table"
		public Keyword getTableKeyword_0() { return cTableKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//table=ValidID
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }

		//ValidID
		public RuleCall getTableValidIDParserRuleCall_2_0() { return cTableValidIDParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ProcedureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcedureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcedureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableValidIDParserRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ProcedureDefinition:
		//	"procedure" name=ValidID table=ValidID ";";
		public ParserRule getRule() { return rule; }

		//"procedure" name=ValidID table=ValidID ";"
		public Group getGroup() { return cGroup; }

		//"procedure"
		public Keyword getProcedureKeyword_0() { return cProcedureKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//table=ValidID
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }

		//ValidID
		public RuleCall getTableValidIDParserRuleCall_2_0() { return cTableValidIDParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class FunctionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunctionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableValidIDParserRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FunctionDefinition:
		//	"function" name=ValidID table=ValidID ";";
		public ParserRule getRule() { return rule; }

		//"function" name=ValidID table=ValidID ";"
		public Group getGroup() { return cGroup; }

		//"function"
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//table=ValidID
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }

		//ValidID
		public RuleCall getTableValidIDParserRuleCall_2_0() { return cTableValidIDParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportSectionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportSectionXImportSectionParserRuleCall_3_0 = (RuleCall)cImportSectionAssignment_3.eContents().get(0);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsAbstractEntityParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Package:
		//	"package" name=QualifiedName "{" importSection=XImportSection? elements+=AbstractEntity* "}";
		public ParserRule getRule() { return rule; }

		//"package" name=QualifiedName "{" importSection=XImportSection? elements+=AbstractEntity* "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//importSection=XImportSection?
		public Assignment getImportSectionAssignment_3() { return cImportSectionAssignment_3; }

		//XImportSection
		public RuleCall getImportSectionXImportSectionParserRuleCall_3_0() { return cImportSectionXImportSectionParserRuleCall_3_0; }

		//elements+=AbstractEntity*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//AbstractEntity
		public RuleCall getElementsAbstractEntityParserRuleCall_4_0() { return cElementsAbstractEntityParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AbstractEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cImplementsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExtendsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAnnotatedEntityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AbstractEntity:
		//	Implements | Extends | AnnotatedEntity;
		public ParserRule getRule() { return rule; }

		//Implements | Extends | AnnotatedEntity
		public Alternatives getAlternatives() { return cAlternatives; }

		//Implements
		public RuleCall getImplementsParserRuleCall_0() { return cImplementsParserRuleCall_0; }

		//Extends
		public RuleCall getExtendsParserRuleCall_1() { return cExtendsParserRuleCall_1; }

		//AnnotatedEntity
		public RuleCall getAnnotatedEntityParserRuleCall_2() { return cAnnotatedEntityParserRuleCall_2; }
	}

	public class ImplementsExtendsDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplementsExtendsDirective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cImplementsExtendsDirectiveGenericsAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cGenericsKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cImplementsExtendsDirectiveOnlyPojosAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cOnlyPojosKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOnlyPojosAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cOnlyPojosPojoEntityCrossReference_1_2_0 = (CrossReference)cOnlyPojosAssignment_1_2.eContents().get(0);
		private final RuleCall cOnlyPojosPojoEntityValidIDParserRuleCall_1_2_0_1 = (RuleCall)cOnlyPojosPojoEntityCrossReference_1_2_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cImplementsExtendsDirectiveOnlyDaosAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cOnlyDaosKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cOnlyDaosAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cOnlyDaosDaoEntityCrossReference_2_2_0 = (CrossReference)cOnlyDaosAssignment_2_2.eContents().get(0);
		private final RuleCall cOnlyDaosDaoEntityValidIDParserRuleCall_2_2_0_1 = (RuleCall)cOnlyDaosDaoEntityCrossReference_2_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cImplementsExtendsDirectiveExceptPojosAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cExceptPojosKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cExceptPojosAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cExceptPojosPojoEntityCrossReference_3_2_0 = (CrossReference)cExceptPojosAssignment_3_2.eContents().get(0);
		private final RuleCall cExceptPojosPojoEntityValidIDParserRuleCall_3_2_0_1 = (RuleCall)cExceptPojosPojoEntityCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cImplementsExtendsDirectiveExceptDaosAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cExceptDaosKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExceptDaosAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cExceptDaosDaoEntityCrossReference_4_2_0 = (CrossReference)cExceptDaosAssignment_4_2.eContents().get(0);
		private final RuleCall cExceptDaosDaoEntityValidIDParserRuleCall_4_2_0_1 = (RuleCall)cExceptDaosDaoEntityCrossReference_4_2_0.eContents().get(1);
		
		//ImplementsExtendsDirective:
		//	{ImplementsExtendsDirectiveGenerics} "#Generics" | {ImplementsExtendsDirectiveOnlyPojos} "#OnlyPojos"
		//	onlyPojos+=[PojoEntity|ValidID]* | {ImplementsExtendsDirectiveOnlyDaos} "#OnlyDaos" onlyDaos+=[DaoEntity|ValidID]* |
		//	{ImplementsExtendsDirectiveExceptPojos} "#ExceptPojos" exceptPojos+=[PojoEntity|ValidID]* |
		//	{ImplementsExtendsDirectiveExceptDaos} "#ExceptDaos" exceptDaos+=[DaoEntity|ValidID]*;
		public ParserRule getRule() { return rule; }

		//{ImplementsExtendsDirectiveGenerics} "#Generics" | {ImplementsExtendsDirectiveOnlyPojos} "#OnlyPojos"
		//onlyPojos+=[PojoEntity|ValidID]* | {ImplementsExtendsDirectiveOnlyDaos} "#OnlyDaos" onlyDaos+=[DaoEntity|ValidID]* |
		//{ImplementsExtendsDirectiveExceptPojos} "#ExceptPojos" exceptPojos+=[PojoEntity|ValidID]* |
		//{ImplementsExtendsDirectiveExceptDaos} "#ExceptDaos" exceptDaos+=[DaoEntity|ValidID]*
		public Alternatives getAlternatives() { return cAlternatives; }

		//{ImplementsExtendsDirectiveGenerics} "#Generics"
		public Group getGroup_0() { return cGroup_0; }

		//{ImplementsExtendsDirectiveGenerics}
		public Action getImplementsExtendsDirectiveGenericsAction_0_0() { return cImplementsExtendsDirectiveGenericsAction_0_0; }

		//"#Generics"
		public Keyword getGenericsKeyword_0_1() { return cGenericsKeyword_0_1; }

		//{ImplementsExtendsDirectiveOnlyPojos} "#OnlyPojos" onlyPojos+=[PojoEntity|ValidID]*
		public Group getGroup_1() { return cGroup_1; }

		//{ImplementsExtendsDirectiveOnlyPojos}
		public Action getImplementsExtendsDirectiveOnlyPojosAction_1_0() { return cImplementsExtendsDirectiveOnlyPojosAction_1_0; }

		//"#OnlyPojos"
		public Keyword getOnlyPojosKeyword_1_1() { return cOnlyPojosKeyword_1_1; }

		//onlyPojos+=[PojoEntity|ValidID]*
		public Assignment getOnlyPojosAssignment_1_2() { return cOnlyPojosAssignment_1_2; }

		//[PojoEntity|ValidID]
		public CrossReference getOnlyPojosPojoEntityCrossReference_1_2_0() { return cOnlyPojosPojoEntityCrossReference_1_2_0; }

		//ValidID
		public RuleCall getOnlyPojosPojoEntityValidIDParserRuleCall_1_2_0_1() { return cOnlyPojosPojoEntityValidIDParserRuleCall_1_2_0_1; }

		//{ImplementsExtendsDirectiveOnlyDaos} "#OnlyDaos" onlyDaos+=[DaoEntity|ValidID]*
		public Group getGroup_2() { return cGroup_2; }

		//{ImplementsExtendsDirectiveOnlyDaos}
		public Action getImplementsExtendsDirectiveOnlyDaosAction_2_0() { return cImplementsExtendsDirectiveOnlyDaosAction_2_0; }

		//"#OnlyDaos"
		public Keyword getOnlyDaosKeyword_2_1() { return cOnlyDaosKeyword_2_1; }

		//onlyDaos+=[DaoEntity|ValidID]*
		public Assignment getOnlyDaosAssignment_2_2() { return cOnlyDaosAssignment_2_2; }

		//[DaoEntity|ValidID]
		public CrossReference getOnlyDaosDaoEntityCrossReference_2_2_0() { return cOnlyDaosDaoEntityCrossReference_2_2_0; }

		//ValidID
		public RuleCall getOnlyDaosDaoEntityValidIDParserRuleCall_2_2_0_1() { return cOnlyDaosDaoEntityValidIDParserRuleCall_2_2_0_1; }

		//{ImplementsExtendsDirectiveExceptPojos} "#ExceptPojos" exceptPojos+=[PojoEntity|ValidID]*
		public Group getGroup_3() { return cGroup_3; }

		//{ImplementsExtendsDirectiveExceptPojos}
		public Action getImplementsExtendsDirectiveExceptPojosAction_3_0() { return cImplementsExtendsDirectiveExceptPojosAction_3_0; }

		//"#ExceptPojos"
		public Keyword getExceptPojosKeyword_3_1() { return cExceptPojosKeyword_3_1; }

		//exceptPojos+=[PojoEntity|ValidID]*
		public Assignment getExceptPojosAssignment_3_2() { return cExceptPojosAssignment_3_2; }

		//[PojoEntity|ValidID]
		public CrossReference getExceptPojosPojoEntityCrossReference_3_2_0() { return cExceptPojosPojoEntityCrossReference_3_2_0; }

		//ValidID
		public RuleCall getExceptPojosPojoEntityValidIDParserRuleCall_3_2_0_1() { return cExceptPojosPojoEntityValidIDParserRuleCall_3_2_0_1; }

		//{ImplementsExtendsDirectiveExceptDaos} "#ExceptDaos" exceptDaos+=[DaoEntity|ValidID]*
		public Group getGroup_4() { return cGroup_4; }

		//{ImplementsExtendsDirectiveExceptDaos}
		public Action getImplementsExtendsDirectiveExceptDaosAction_4_0() { return cImplementsExtendsDirectiveExceptDaosAction_4_0; }

		//"#ExceptDaos"
		public Keyword getExceptDaosKeyword_4_1() { return cExceptDaosKeyword_4_1; }

		//exceptDaos+=[DaoEntity|ValidID]*
		public Assignment getExceptDaosAssignment_4_2() { return cExceptDaosAssignment_4_2; }

		//[DaoEntity|ValidID]
		public CrossReference getExceptDaosDaoEntityCrossReference_4_2_0() { return cExceptDaosDaoEntityCrossReference_4_2_0; }

		//ValidID
		public RuleCall getExceptDaosDaoEntityValidIDParserRuleCall_4_2_0_1() { return cExceptDaosDaoEntityValidIDParserRuleCall_4_2_0_1; }
	}

	public class ImplementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Implements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesImplementsExtendsDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Keyword cImplementsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImplementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0 = (RuleCall)cImplementsAssignment_2.eContents().get(0);
		
		//Implements:
		//	directives+=ImplementsExtendsDirective* "implements" implements=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//directives+=ImplementsExtendsDirective* "implements" implements=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//directives+=ImplementsExtendsDirective*
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//ImplementsExtendsDirective
		public RuleCall getDirectivesImplementsExtendsDirectiveParserRuleCall_0_0() { return cDirectivesImplementsExtendsDirectiveParserRuleCall_0_0; }

		//"implements"
		public Keyword getImplementsKeyword_1() { return cImplementsKeyword_1; }

		//implements=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2() { return cImplementsAssignment_2; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0; }
	}

	public class ExtendsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Extends");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesImplementsExtendsDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Keyword cExtendsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0 = (RuleCall)cExtendsAssignment_2.eContents().get(0);
		
		//Extends:
		//	directives+=ImplementsExtendsDirective* "extends" extends=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//directives+=ImplementsExtendsDirective* "extends" extends=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//directives+=ImplementsExtendsDirective*
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//ImplementsExtendsDirective
		public RuleCall getDirectivesImplementsExtendsDirectiveParserRuleCall_0_0() { return cDirectivesImplementsExtendsDirectiveParserRuleCall_0_0; }

		//"extends"
		public Keyword getExtendsKeyword_1() { return cExtendsKeyword_1; }

		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2() { return cExtendsAssignment_2; }

		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0; }
	}

	public class AnnotatedEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotatedEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntityEntityParserRuleCall_1_0 = (RuleCall)cEntityAssignment_1.eContents().get(0);
		
		//AnnotatedEntity:
		//	annotations+=Annotation* entity=Entity;
		public ParserRule getRule() { return rule; }

		//annotations+=Annotation* entity=Entity
		public Group getGroup() { return cGroup; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_0_0() { return cAnnotationsAnnotationParserRuleCall_0_0; }

		//entity=Entity
		public Assignment getEntityAssignment_1() { return cEntityAssignment_1; }

		//Entity
		public RuleCall getEntityEntityParserRuleCall_1_0() { return cEntityEntityParserRuleCall_1_0; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPojoEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDaoEntityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Entity:
		//	PojoEntity | EnumEntity | DaoEntity;
		public ParserRule getRule() { return rule; }

		//PojoEntity | EnumEntity | DaoEntity
		public Alternatives getAlternatives() { return cAlternatives; }

		//PojoEntity
		public RuleCall getPojoEntityParserRuleCall_0() { return cPojoEntityParserRuleCall_0; }

		//EnumEntity
		public RuleCall getEnumEntityParserRuleCall_1() { return cEnumEntityParserRuleCall_1; }

		//DaoEntity
		public RuleCall getDaoEntityParserRuleCall_2() { return cDaoEntityParserRuleCall_2; }
	}

	public class DirectivePropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DirectiveProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFeaturesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFeaturesPojoAttributeCrossReference_0_0 = (CrossReference)cFeaturesAssignment_0.eContents().get(0);
		private final RuleCall cFeaturesPojoAttributeValidIDParserRuleCall_0_0_1 = (RuleCall)cFeaturesPojoAttributeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cFeaturesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cFeaturesPojoAttributeCrossReference_1_1_0 = (CrossReference)cFeaturesAssignment_1_1.eContents().get(0);
		private final RuleCall cFeaturesPojoAttributeValidIDParserRuleCall_1_1_0_1 = (RuleCall)cFeaturesPojoAttributeCrossReference_1_1_0.eContents().get(1);
		
		//DirectiveProperties:
		//	features+=[PojoAttribute|ValidID] ("," features+=[PojoAttribute|ValidID])*;
		public ParserRule getRule() { return rule; }

		//features+=[PojoAttribute|ValidID] ("," features+=[PojoAttribute|ValidID])*
		public Group getGroup() { return cGroup; }

		//features+=[PojoAttribute|ValidID]
		public Assignment getFeaturesAssignment_0() { return cFeaturesAssignment_0; }

		//[PojoAttribute|ValidID]
		public CrossReference getFeaturesPojoAttributeCrossReference_0_0() { return cFeaturesPojoAttributeCrossReference_0_0; }

		//ValidID
		public RuleCall getFeaturesPojoAttributeValidIDParserRuleCall_0_0_1() { return cFeaturesPojoAttributeValidIDParserRuleCall_0_0_1; }

		//("," features+=[PojoAttribute|ValidID])*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//features+=[PojoAttribute|ValidID]
		public Assignment getFeaturesAssignment_1_1() { return cFeaturesAssignment_1_1; }

		//[PojoAttribute|ValidID]
		public CrossReference getFeaturesPojoAttributeCrossReference_1_1_0() { return cFeaturesPojoAttributeCrossReference_1_1_0; }

		//ValidID
		public RuleCall getFeaturesPojoAttributeValidIDParserRuleCall_1_1_0_1() { return cFeaturesPojoAttributeValidIDParserRuleCall_1_1_0_1; }
	}

	public class PojoDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoDirective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPojoDirectiveToStringAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cToStringKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cProplistAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cProplistDirectivePropertiesParserRuleCall_0_3_0 = (RuleCall)cProplistAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cPojoDirectiveIndexAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cIndexKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cIndexAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cIndexINTTerminalRuleCall_1_3_0 = (RuleCall)cIndexAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cProplistAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cProplistDirectivePropertiesParserRuleCall_1_5_0 = (RuleCall)cProplistAssignment_1_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cPojoDirectiveOperatorsAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cOperatorsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cOperatorsSuffixAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cOperatorsSuffixValidIDParserRuleCall_2_2_1_0 = (RuleCall)cOperatorsSuffixAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cPojoDirectiveSerializableAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cSerializableKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSernumAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSernumINTTerminalRuleCall_3_3_0 = (RuleCall)cSernumAssignment_3_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cPojoDirectiveDiscriminatorAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cInheritanceChildKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cDiscriminatorAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cDiscriminatorValidIDParserRuleCall_4_3_0 = (RuleCall)cDiscriminatorAssignment_4_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cPojoDirectiveEqualsAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cEqualsKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cProplistAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cProplistDirectivePropertiesParserRuleCall_5_3_0 = (RuleCall)cProplistAssignment_5_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cPojoDirectiveHashCodeAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cHashCodeKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cProplistAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cProplistDirectivePropertiesParserRuleCall_6_3_0 = (RuleCall)cProplistAssignment_6_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		
		//PojoDirective:
		//	{PojoDirectiveToString} "#ToString" "(" proplist=DirectiveProperties ")" | {PojoDirectiveIndex} "#Index" "(" index=INT
		//	"," proplist=DirectiveProperties ")" | {PojoDirectiveOperators} "#Operators" ("(" operatorsSuffix=ValidID ")")? |
		//	{PojoDirectiveSerializable} "#Serializable" "(" sernum=INT ")" | {PojoDirectiveDiscriminator} "#InheritanceChild" "("
		//	discriminator=ValidID ")" | {PojoDirectiveEquals} "#Equals" "(" proplist=DirectiveProperties ")" |
		//	{PojoDirectiveHashCode} "#HashCode" "(" proplist=DirectiveProperties ")";
		public ParserRule getRule() { return rule; }

		//{PojoDirectiveToString} "#ToString" "(" proplist=DirectiveProperties ")" | {PojoDirectiveIndex} "#Index" "(" index=INT
		//"," proplist=DirectiveProperties ")" | {PojoDirectiveOperators} "#Operators" ("(" operatorsSuffix=ValidID ")")? |
		//{PojoDirectiveSerializable} "#Serializable" "(" sernum=INT ")" | {PojoDirectiveDiscriminator} "#InheritanceChild" "("
		//discriminator=ValidID ")" | {PojoDirectiveEquals} "#Equals" "(" proplist=DirectiveProperties ")" |
		//{PojoDirectiveHashCode} "#HashCode" "(" proplist=DirectiveProperties ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{PojoDirectiveToString} "#ToString" "(" proplist=DirectiveProperties ")"
		public Group getGroup_0() { return cGroup_0; }

		//{PojoDirectiveToString}
		public Action getPojoDirectiveToStringAction_0_0() { return cPojoDirectiveToStringAction_0_0; }

		//"#ToString"
		public Keyword getToStringKeyword_0_1() { return cToStringKeyword_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//proplist=DirectiveProperties
		public Assignment getProplistAssignment_0_3() { return cProplistAssignment_0_3; }

		//DirectiveProperties
		public RuleCall getProplistDirectivePropertiesParserRuleCall_0_3_0() { return cProplistDirectivePropertiesParserRuleCall_0_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }

		//{PojoDirectiveIndex} "#Index" "(" index=INT "," proplist=DirectiveProperties ")"
		public Group getGroup_1() { return cGroup_1; }

		//{PojoDirectiveIndex}
		public Action getPojoDirectiveIndexAction_1_0() { return cPojoDirectiveIndexAction_1_0; }

		//"#Index"
		public Keyword getIndexKeyword_1_1() { return cIndexKeyword_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }

		//index=INT
		public Assignment getIndexAssignment_1_3() { return cIndexAssignment_1_3; }

		//INT
		public RuleCall getIndexINTTerminalRuleCall_1_3_0() { return cIndexINTTerminalRuleCall_1_3_0; }

		//","
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }

		//proplist=DirectiveProperties
		public Assignment getProplistAssignment_1_5() { return cProplistAssignment_1_5; }

		//DirectiveProperties
		public RuleCall getProplistDirectivePropertiesParserRuleCall_1_5_0() { return cProplistDirectivePropertiesParserRuleCall_1_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_6() { return cRightParenthesisKeyword_1_6; }

		//{PojoDirectiveOperators} "#Operators" ("(" operatorsSuffix=ValidID ")")?
		public Group getGroup_2() { return cGroup_2; }

		//{PojoDirectiveOperators}
		public Action getPojoDirectiveOperatorsAction_2_0() { return cPojoDirectiveOperatorsAction_2_0; }

		//"#Operators"
		public Keyword getOperatorsKeyword_2_1() { return cOperatorsKeyword_2_1; }

		//("(" operatorsSuffix=ValidID ")")?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2_0() { return cLeftParenthesisKeyword_2_2_0; }

		//operatorsSuffix=ValidID
		public Assignment getOperatorsSuffixAssignment_2_2_1() { return cOperatorsSuffixAssignment_2_2_1; }

		//ValidID
		public RuleCall getOperatorsSuffixValidIDParserRuleCall_2_2_1_0() { return cOperatorsSuffixValidIDParserRuleCall_2_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2_2() { return cRightParenthesisKeyword_2_2_2; }

		//{PojoDirectiveSerializable} "#Serializable" "(" sernum=INT ")"
		public Group getGroup_3() { return cGroup_3; }

		//{PojoDirectiveSerializable}
		public Action getPojoDirectiveSerializableAction_3_0() { return cPojoDirectiveSerializableAction_3_0; }

		//"#Serializable"
		public Keyword getSerializableKeyword_3_1() { return cSerializableKeyword_3_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_2() { return cLeftParenthesisKeyword_3_2; }

		//sernum=INT
		public Assignment getSernumAssignment_3_3() { return cSernumAssignment_3_3; }

		//INT
		public RuleCall getSernumINTTerminalRuleCall_3_3_0() { return cSernumINTTerminalRuleCall_3_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }

		//{PojoDirectiveDiscriminator} "#InheritanceChild" "(" discriminator=ValidID ")"
		public Group getGroup_4() { return cGroup_4; }

		//{PojoDirectiveDiscriminator}
		public Action getPojoDirectiveDiscriminatorAction_4_0() { return cPojoDirectiveDiscriminatorAction_4_0; }

		//"#InheritanceChild"
		public Keyword getInheritanceChildKeyword_4_1() { return cInheritanceChildKeyword_4_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_2() { return cLeftParenthesisKeyword_4_2; }

		//discriminator=ValidID
		public Assignment getDiscriminatorAssignment_4_3() { return cDiscriminatorAssignment_4_3; }

		//ValidID
		public RuleCall getDiscriminatorValidIDParserRuleCall_4_3_0() { return cDiscriminatorValidIDParserRuleCall_4_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }

		//{PojoDirectiveEquals} "#Equals" "(" proplist=DirectiveProperties ")"
		public Group getGroup_5() { return cGroup_5; }

		//{PojoDirectiveEquals}
		public Action getPojoDirectiveEqualsAction_5_0() { return cPojoDirectiveEqualsAction_5_0; }

		//"#Equals"
		public Keyword getEqualsKeyword_5_1() { return cEqualsKeyword_5_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_2() { return cLeftParenthesisKeyword_5_2; }

		//proplist=DirectiveProperties
		public Assignment getProplistAssignment_5_3() { return cProplistAssignment_5_3; }

		//DirectiveProperties
		public RuleCall getProplistDirectivePropertiesParserRuleCall_5_3_0() { return cProplistDirectivePropertiesParserRuleCall_5_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }

		//{PojoDirectiveHashCode} "#HashCode" "(" proplist=DirectiveProperties ")"
		public Group getGroup_6() { return cGroup_6; }

		//{PojoDirectiveHashCode}
		public Action getPojoDirectiveHashCodeAction_6_0() { return cPojoDirectiveHashCodeAction_6_0; }

		//"#HashCode"
		public Keyword getHashCodeKeyword_6_1() { return cHashCodeKeyword_6_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_2() { return cLeftParenthesisKeyword_6_2; }

		//proplist=DirectiveProperties
		public Assignment getProplistAssignment_6_3() { return cProplistAssignment_6_3; }

		//DirectiveProperties
		public RuleCall getProplistDirectivePropertiesParserRuleCall_6_3_0() { return cProplistDirectivePropertiesParserRuleCall_6_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }
	}

	public class PojoEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesPojoDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Assignment cFinalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFinalFinalKeyword_1_0 = (Keyword)cFinalAssignment_1.eContents().get(0);
		private final Assignment cAbstractAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cAbstractAbstractKeyword_2_0 = (Keyword)cAbstractAssignment_2.eContents().get(0);
		private final Keyword cPojoKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExtendsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSuperTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSuperTypeJvmParameterizedTypeReferenceParserRuleCall_5_1_0 = (RuleCall)cSuperTypeAssignment_5_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cAttributesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAttributesPojoAttributeParserRuleCall_7_0 = (RuleCall)cAttributesAssignment_7.eContents().get(0);
		private final Assignment cProceduresAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cProceduresPojoProcedureParserRuleCall_8_0 = (RuleCall)cProceduresAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//PojoEntity:
		//	directives+=PojoDirective* final?="final"? abstract?="abstract"? "#Pojo" name=ValidID ("extends"
		//	superType=JvmParameterizedTypeReference)? "{" attributes+=PojoAttribute* procedures+=PojoProcedure* "}";
		public ParserRule getRule() { return rule; }

		//directives+=PojoDirective* final?="final"? abstract?="abstract"? "#Pojo" name=ValidID ("extends"
		//superType=JvmParameterizedTypeReference)? "{" attributes+=PojoAttribute* procedures+=PojoProcedure* "}"
		public Group getGroup() { return cGroup; }

		//directives+=PojoDirective*
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//PojoDirective
		public RuleCall getDirectivesPojoDirectiveParserRuleCall_0_0() { return cDirectivesPojoDirectiveParserRuleCall_0_0; }

		//final?="final"?
		public Assignment getFinalAssignment_1() { return cFinalAssignment_1; }

		//"final"
		public Keyword getFinalFinalKeyword_1_0() { return cFinalFinalKeyword_1_0; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_2() { return cAbstractAssignment_2; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_2_0() { return cAbstractAbstractKeyword_2_0; }

		//"#Pojo"
		public Keyword getPojoKeyword_3() { return cPojoKeyword_3; }

		//name=ValidID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_4_0() { return cNameValidIDParserRuleCall_4_0; }

		//("extends" superType=JvmParameterizedTypeReference)?
		public Group getGroup_5() { return cGroup_5; }

		//"extends"
		public Keyword getExtendsKeyword_5_0() { return cExtendsKeyword_5_0; }

		//superType=JvmParameterizedTypeReference
		public Assignment getSuperTypeAssignment_5_1() { return cSuperTypeAssignment_5_1; }

		//JvmParameterizedTypeReference
		public RuleCall getSuperTypeJvmParameterizedTypeReferenceParserRuleCall_5_1_0() { return cSuperTypeJvmParameterizedTypeReferenceParserRuleCall_5_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//attributes+=PojoAttribute*
		public Assignment getAttributesAssignment_7() { return cAttributesAssignment_7; }

		//PojoAttribute
		public RuleCall getAttributesPojoAttributeParserRuleCall_7_0() { return cAttributesPojoAttributeParserRuleCall_7_0; }

		//procedures+=PojoProcedure*
		public Assignment getProceduresAssignment_8() { return cProceduresAssignment_8; }

		//PojoProcedure
		public RuleCall getProceduresPojoProcedureParserRuleCall_8_0() { return cProceduresPojoProcedureParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class PojoAttributeDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoAttributeDirective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPojoAttributeDirectiveRequiredAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cRequiredKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cPojoAttributeDirectivePrimaryKeyAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cPrimaryKeyKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cPojoAttributeDirectiveDiscriminatorAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cInheritanceDiscriminatorKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cPojoAttributeDirectiveIndexAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cIndexKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cIndexAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cIndexINTTerminalRuleCall_3_3_0 = (RuleCall)cIndexAssignment_3_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cPojoAttributeDirectiveVersionAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cVersionKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cPojoAttributeDirectiveUpdateColAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cUpdateColKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cUpdateColumn1Assignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cUpdateColumn1PojoAttributeCrossReference_5_3_0 = (CrossReference)cUpdateColumn1Assignment_5_3.eContents().get(0);
		private final RuleCall cUpdateColumn1PojoAttributeValidIDParserRuleCall_5_3_0_1 = (RuleCall)cUpdateColumn1PojoAttributeCrossReference_5_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Assignment cUpdateColumn2Assignment_5_5 = (Assignment)cGroup_5.eContents().get(5);
		private final CrossReference cUpdateColumn2PojoAttributeCrossReference_5_5_0 = (CrossReference)cUpdateColumn2Assignment_5_5.eContents().get(0);
		private final RuleCall cUpdateColumn2PojoAttributeValidIDParserRuleCall_5_5_0_1 = (RuleCall)cUpdateColumn2PojoAttributeCrossReference_5_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_6 = (Keyword)cGroup_5.eContents().get(6);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cPojoAttributeDirectiveCreateColAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cCreateColKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cCreateColumn1Assignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cCreateColumn1PojoAttributeCrossReference_6_3_0 = (CrossReference)cCreateColumn1Assignment_6_3.eContents().get(0);
		private final RuleCall cCreateColumn1PojoAttributeValidIDParserRuleCall_6_3_0_1 = (RuleCall)cCreateColumn1PojoAttributeCrossReference_6_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Assignment cCreateColumn2Assignment_6_5 = (Assignment)cGroup_6.eContents().get(5);
		private final CrossReference cCreateColumn2PojoAttributeCrossReference_6_5_0 = (CrossReference)cCreateColumn2Assignment_6_5.eContents().get(0);
		private final RuleCall cCreateColumn2PojoAttributeValidIDParserRuleCall_6_5_0_1 = (RuleCall)cCreateColumn2PojoAttributeCrossReference_6_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_6 = (Keyword)cGroup_6.eContents().get(6);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cPojoAttributeDirectiveToInitAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final Keyword cToInitKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cPojoAttributeDirectiveEnumInitAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final Keyword cEnumInitKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Action cPojoAttributeDirectiveIsDefAction_9_0 = (Action)cGroup_9.eContents().get(0);
		private final Keyword cIsDefKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Action cPojoAttributeDirectiveEnumDefAction_10_0 = (Action)cGroup_10.eContents().get(0);
		private final Keyword cEnumDefKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		
		//PojoAttributeDirective:
		//	{PojoAttributeDirectiveRequired} "#Required" | {PojoAttributeDirectivePrimaryKey} "#PrimaryKey" |
		//	{PojoAttributeDirectiveDiscriminator} "#InheritanceDiscriminator" | {PojoAttributeDirectiveIndex} "#Index" "("
		//	index=INT ")" | {PojoAttributeDirectiveVersion} "#Version" | {PojoAttributeDirectiveUpdateCol} "#UpdateCol" "("
		//	updateColumn1=[PojoAttribute|ValidID] "," updateColumn2=[PojoAttribute|ValidID] ")" |
		//	{PojoAttributeDirectiveCreateCol} "#CreateCol" "(" createColumn1=[PojoAttribute|ValidID] ","
		//	createColumn2=[PojoAttribute|ValidID] ")" | {PojoAttributeDirectiveToInit} "#ToInit" |
		//	{PojoAttributeDirectiveEnumInit} "#EnumInit" | {PojoAttributeDirectiveIsDef} "#IsDef" |
		//	{PojoAttributeDirectiveEnumDef} "#EnumDef";
		public ParserRule getRule() { return rule; }

		//{PojoAttributeDirectiveRequired} "#Required" | {PojoAttributeDirectivePrimaryKey} "#PrimaryKey" |
		//{PojoAttributeDirectiveDiscriminator} "#InheritanceDiscriminator" | {PojoAttributeDirectiveIndex} "#Index" "("
		//index=INT ")" | {PojoAttributeDirectiveVersion} "#Version" | {PojoAttributeDirectiveUpdateCol} "#UpdateCol" "("
		//updateColumn1=[PojoAttribute|ValidID] "," updateColumn2=[PojoAttribute|ValidID] ")" | {PojoAttributeDirectiveCreateCol}
		//"#CreateCol" "(" createColumn1=[PojoAttribute|ValidID] "," createColumn2=[PojoAttribute|ValidID] ")" |
		//{PojoAttributeDirectiveToInit} "#ToInit" | {PojoAttributeDirectiveEnumInit} "#EnumInit" | {PojoAttributeDirectiveIsDef}
		//"#IsDef" | {PojoAttributeDirectiveEnumDef} "#EnumDef"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{PojoAttributeDirectiveRequired} "#Required"
		public Group getGroup_0() { return cGroup_0; }

		//{PojoAttributeDirectiveRequired}
		public Action getPojoAttributeDirectiveRequiredAction_0_0() { return cPojoAttributeDirectiveRequiredAction_0_0; }

		//"#Required"
		public Keyword getRequiredKeyword_0_1() { return cRequiredKeyword_0_1; }

		//{PojoAttributeDirectivePrimaryKey} "#PrimaryKey"
		public Group getGroup_1() { return cGroup_1; }

		//{PojoAttributeDirectivePrimaryKey}
		public Action getPojoAttributeDirectivePrimaryKeyAction_1_0() { return cPojoAttributeDirectivePrimaryKeyAction_1_0; }

		//"#PrimaryKey"
		public Keyword getPrimaryKeyKeyword_1_1() { return cPrimaryKeyKeyword_1_1; }

		//{PojoAttributeDirectiveDiscriminator} "#InheritanceDiscriminator"
		public Group getGroup_2() { return cGroup_2; }

		//{PojoAttributeDirectiveDiscriminator}
		public Action getPojoAttributeDirectiveDiscriminatorAction_2_0() { return cPojoAttributeDirectiveDiscriminatorAction_2_0; }

		//"#InheritanceDiscriminator"
		public Keyword getInheritanceDiscriminatorKeyword_2_1() { return cInheritanceDiscriminatorKeyword_2_1; }

		//{PojoAttributeDirectiveIndex} "#Index" "(" index=INT ")"
		public Group getGroup_3() { return cGroup_3; }

		//{PojoAttributeDirectiveIndex}
		public Action getPojoAttributeDirectiveIndexAction_3_0() { return cPojoAttributeDirectiveIndexAction_3_0; }

		//"#Index"
		public Keyword getIndexKeyword_3_1() { return cIndexKeyword_3_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_2() { return cLeftParenthesisKeyword_3_2; }

		//index=INT
		public Assignment getIndexAssignment_3_3() { return cIndexAssignment_3_3; }

		//INT
		public RuleCall getIndexINTTerminalRuleCall_3_3_0() { return cIndexINTTerminalRuleCall_3_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }

		//{PojoAttributeDirectiveVersion} "#Version"
		public Group getGroup_4() { return cGroup_4; }

		//{PojoAttributeDirectiveVersion}
		public Action getPojoAttributeDirectiveVersionAction_4_0() { return cPojoAttributeDirectiveVersionAction_4_0; }

		//"#Version"
		public Keyword getVersionKeyword_4_1() { return cVersionKeyword_4_1; }

		//{PojoAttributeDirectiveUpdateCol} "#UpdateCol" "(" updateColumn1=[PojoAttribute|ValidID] ","
		//updateColumn2=[PojoAttribute|ValidID] ")"
		public Group getGroup_5() { return cGroup_5; }

		//{PojoAttributeDirectiveUpdateCol}
		public Action getPojoAttributeDirectiveUpdateColAction_5_0() { return cPojoAttributeDirectiveUpdateColAction_5_0; }

		//"#UpdateCol"
		public Keyword getUpdateColKeyword_5_1() { return cUpdateColKeyword_5_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_2() { return cLeftParenthesisKeyword_5_2; }

		//updateColumn1=[PojoAttribute|ValidID]
		public Assignment getUpdateColumn1Assignment_5_3() { return cUpdateColumn1Assignment_5_3; }

		//[PojoAttribute|ValidID]
		public CrossReference getUpdateColumn1PojoAttributeCrossReference_5_3_0() { return cUpdateColumn1PojoAttributeCrossReference_5_3_0; }

		//ValidID
		public RuleCall getUpdateColumn1PojoAttributeValidIDParserRuleCall_5_3_0_1() { return cUpdateColumn1PojoAttributeValidIDParserRuleCall_5_3_0_1; }

		//","
		public Keyword getCommaKeyword_5_4() { return cCommaKeyword_5_4; }

		//updateColumn2=[PojoAttribute|ValidID]
		public Assignment getUpdateColumn2Assignment_5_5() { return cUpdateColumn2Assignment_5_5; }

		//[PojoAttribute|ValidID]
		public CrossReference getUpdateColumn2PojoAttributeCrossReference_5_5_0() { return cUpdateColumn2PojoAttributeCrossReference_5_5_0; }

		//ValidID
		public RuleCall getUpdateColumn2PojoAttributeValidIDParserRuleCall_5_5_0_1() { return cUpdateColumn2PojoAttributeValidIDParserRuleCall_5_5_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_6() { return cRightParenthesisKeyword_5_6; }

		//{PojoAttributeDirectiveCreateCol} "#CreateCol" "(" createColumn1=[PojoAttribute|ValidID] ","
		//createColumn2=[PojoAttribute|ValidID] ")"
		public Group getGroup_6() { return cGroup_6; }

		//{PojoAttributeDirectiveCreateCol}
		public Action getPojoAttributeDirectiveCreateColAction_6_0() { return cPojoAttributeDirectiveCreateColAction_6_0; }

		//"#CreateCol"
		public Keyword getCreateColKeyword_6_1() { return cCreateColKeyword_6_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_2() { return cLeftParenthesisKeyword_6_2; }

		//createColumn1=[PojoAttribute|ValidID]
		public Assignment getCreateColumn1Assignment_6_3() { return cCreateColumn1Assignment_6_3; }

		//[PojoAttribute|ValidID]
		public CrossReference getCreateColumn1PojoAttributeCrossReference_6_3_0() { return cCreateColumn1PojoAttributeCrossReference_6_3_0; }

		//ValidID
		public RuleCall getCreateColumn1PojoAttributeValidIDParserRuleCall_6_3_0_1() { return cCreateColumn1PojoAttributeValidIDParserRuleCall_6_3_0_1; }

		//","
		public Keyword getCommaKeyword_6_4() { return cCommaKeyword_6_4; }

		//createColumn2=[PojoAttribute|ValidID]
		public Assignment getCreateColumn2Assignment_6_5() { return cCreateColumn2Assignment_6_5; }

		//[PojoAttribute|ValidID]
		public CrossReference getCreateColumn2PojoAttributeCrossReference_6_5_0() { return cCreateColumn2PojoAttributeCrossReference_6_5_0; }

		//ValidID
		public RuleCall getCreateColumn2PojoAttributeValidIDParserRuleCall_6_5_0_1() { return cCreateColumn2PojoAttributeValidIDParserRuleCall_6_5_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_6() { return cRightParenthesisKeyword_6_6; }

		//{PojoAttributeDirectiveToInit} "#ToInit"
		public Group getGroup_7() { return cGroup_7; }

		//{PojoAttributeDirectiveToInit}
		public Action getPojoAttributeDirectiveToInitAction_7_0() { return cPojoAttributeDirectiveToInitAction_7_0; }

		//"#ToInit"
		public Keyword getToInitKeyword_7_1() { return cToInitKeyword_7_1; }

		//{PojoAttributeDirectiveEnumInit} "#EnumInit"
		public Group getGroup_8() { return cGroup_8; }

		//{PojoAttributeDirectiveEnumInit}
		public Action getPojoAttributeDirectiveEnumInitAction_8_0() { return cPojoAttributeDirectiveEnumInitAction_8_0; }

		//"#EnumInit"
		public Keyword getEnumInitKeyword_8_1() { return cEnumInitKeyword_8_1; }

		//{PojoAttributeDirectiveIsDef} "#IsDef"
		public Group getGroup_9() { return cGroup_9; }

		//{PojoAttributeDirectiveIsDef}
		public Action getPojoAttributeDirectiveIsDefAction_9_0() { return cPojoAttributeDirectiveIsDefAction_9_0; }

		//"#IsDef"
		public Keyword getIsDefKeyword_9_1() { return cIsDefKeyword_9_1; }

		//{PojoAttributeDirectiveEnumDef} "#EnumDef"
		public Group getGroup_10() { return cGroup_10; }

		//{PojoAttributeDirectiveEnumDef}
		public Action getPojoAttributeDirectiveEnumDefAction_10_0() { return cPojoAttributeDirectiveEnumDefAction_10_0; }

		//"#EnumDef"
		public Keyword getEnumDefKeyword_10_1() { return cEnumDefKeyword_10_1; }
	}

	public class PojoAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cDirectivesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDirectivesPojoAttributeDirectiveParserRuleCall_1_0 = (RuleCall)cDirectivesAssignment_1.eContents().get(0);
		private final Keyword cAttrKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStaticAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cStaticStaticKeyword_3_0 = (Keyword)cStaticAssignment_3.eContents().get(0);
		private final Assignment cFinalAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cFinalFinalKeyword_4_0 = (Keyword)cFinalAssignment_4.eContents().get(0);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameValidIDParserRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cInitExprAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cInitExprXExpressionParserRuleCall_7_1_0 = (RuleCall)cInitExprAssignment_7_1.eContents().get(0);
		
		//PojoAttribute:
		//	annotations+=Annotation* directives+=PojoAttributeDirective* "#Attr" => static?="static"? => final?="final"? //modifiers+=Modifier* 
		//	type=JvmTypeReference? name=ValidID ("=" initExpr=XExpression)?;
		public ParserRule getRule() { return rule; }

		//annotations+=Annotation* directives+=PojoAttributeDirective* "#Attr" => static?="static"? => final?="final"? //modifiers+=Modifier* 
		//type=JvmTypeReference? name=ValidID ("=" initExpr=XExpression)?
		public Group getGroup() { return cGroup; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_0_0() { return cAnnotationsAnnotationParserRuleCall_0_0; }

		//directives+=PojoAttributeDirective*
		public Assignment getDirectivesAssignment_1() { return cDirectivesAssignment_1; }

		//PojoAttributeDirective
		public RuleCall getDirectivesPojoAttributeDirectiveParserRuleCall_1_0() { return cDirectivesPojoAttributeDirectiveParserRuleCall_1_0; }

		//"#Attr"
		public Keyword getAttrKeyword_2() { return cAttrKeyword_2; }

		//=> static?="static"?
		public Assignment getStaticAssignment_3() { return cStaticAssignment_3; }

		//"static"
		public Keyword getStaticStaticKeyword_3_0() { return cStaticStaticKeyword_3_0; }

		//=> final?="final"?
		public Assignment getFinalAssignment_4() { return cFinalAssignment_4; }

		//"final"
		public Keyword getFinalFinalKeyword_4_0() { return cFinalFinalKeyword_4_0; }

		//type=JvmTypeReference?
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_5_0() { return cTypeJvmTypeReferenceParserRuleCall_5_0; }

		//name=ValidID
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_6_0() { return cNameValidIDParserRuleCall_6_0; }

		//("=" initExpr=XExpression)?
		public Group getGroup_7() { return cGroup_7; }

		//"="
		public Keyword getEqualsSignKeyword_7_0() { return cEqualsSignKeyword_7_0; }

		//initExpr=XExpression
		public Assignment getInitExprAssignment_7_1() { return cInitExprAssignment_7_1; }

		//XExpression
		public RuleCall getInitExprXExpressionParserRuleCall_7_1_0() { return cInitExprXExpressionParserRuleCall_7_1_0; }
	}

	public class PojoProcedureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoProcedure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Keyword cProcKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStaticAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cStaticStaticKeyword_2_0 = (Keyword)cStaticAssignment_2.eContents().get(0);
		private final Assignment cFinalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cFinalFinalKeyword_3_0 = (Keyword)cFinalAssignment_3.eContents().get(0);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameValidIDParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cParamsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cParamsFullJvmFormalParameterParserRuleCall_7_0_0 = (RuleCall)cParamsAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cCommaKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cParamsAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cParamsFullJvmFormalParameterParserRuleCall_7_1_1_0 = (RuleCall)cParamsAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBodyAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBodyXBlockExpressionParserRuleCall_9_0 = (RuleCall)cBodyAssignment_9.eContents().get(0);
		
		//PojoProcedure:
		//	annotations+=Annotation* "#Proc" => static?="static"? => final?="final"? //modifiers+=Modifier*
		//	type=JvmTypeReference? name=ValidID "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")"
		//	body=XBlockExpression;
		public ParserRule getRule() { return rule; }

		//annotations+=Annotation* "#Proc" => static?="static"? => final?="final"? //modifiers+=Modifier*
		//type=JvmTypeReference? name=ValidID "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")"
		//body=XBlockExpression
		public Group getGroup() { return cGroup; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_0_0() { return cAnnotationsAnnotationParserRuleCall_0_0; }

		//"#Proc"
		public Keyword getProcKeyword_1() { return cProcKeyword_1; }

		//=> static?="static"?
		public Assignment getStaticAssignment_2() { return cStaticAssignment_2; }

		//"static"
		public Keyword getStaticStaticKeyword_2_0() { return cStaticStaticKeyword_2_0; }

		//=> final?="final"?
		public Assignment getFinalAssignment_3() { return cFinalAssignment_3; }

		//"final"
		public Keyword getFinalFinalKeyword_3_0() { return cFinalFinalKeyword_3_0; }

		//type=JvmTypeReference?
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_4_0() { return cTypeJvmTypeReferenceParserRuleCall_4_0; }

		//name=ValidID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_5_0() { return cNameValidIDParserRuleCall_5_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }

		//(params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)?
		public Group getGroup_7() { return cGroup_7; }

		//params+=FullJvmFormalParameter
		public Assignment getParamsAssignment_7_0() { return cParamsAssignment_7_0; }

		//FullJvmFormalParameter
		public RuleCall getParamsFullJvmFormalParameterParserRuleCall_7_0_0() { return cParamsFullJvmFormalParameterParserRuleCall_7_0_0; }

		//("," params+=FullJvmFormalParameter)*
		public Group getGroup_7_1() { return cGroup_7_1; }

		//","
		public Keyword getCommaKeyword_7_1_0() { return cCommaKeyword_7_1_0; }

		//params+=FullJvmFormalParameter
		public Assignment getParamsAssignment_7_1_1() { return cParamsAssignment_7_1_1; }

		//FullJvmFormalParameter
		public RuleCall getParamsFullJvmFormalParameterParserRuleCall_7_1_1_0() { return cParamsFullJvmFormalParameterParserRuleCall_7_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }

		//body=XBlockExpression
		public Assignment getBodyAssignment_9() { return cBodyAssignment_9; }

		//XBlockExpression
		public RuleCall getBodyXBlockExpressionParserRuleCall_9_0() { return cBodyXBlockExpressionParserRuleCall_9_0; }
	}

	public class EnumDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumDirective");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumDirectiveSerializableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSerializableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSernumAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSernumINTTerminalRuleCall_3_0 = (RuleCall)cSernumAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EnumDirective:
		//	{EnumDirectiveSerializable} "#Serializable" "(" sernum=INT ")";
		public ParserRule getRule() { return rule; }

		//{EnumDirectiveSerializable} "#Serializable" "(" sernum=INT ")"
		public Group getGroup() { return cGroup; }

		//{EnumDirectiveSerializable}
		public Action getEnumDirectiveSerializableAction_0() { return cEnumDirectiveSerializableAction_0; }

		//"#Serializable"
		public Keyword getSerializableKeyword_1() { return cSerializableKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//sernum=INT
		public Assignment getSernumAssignment_3() { return cSernumAssignment_3; }

		//INT
		public RuleCall getSernumINTTerminalRuleCall_3_0() { return cSernumINTTerminalRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class EnumEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesEnumDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Assignment cFinalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFinalFinalKeyword_1_0 = (Keyword)cFinalAssignment_1.eContents().get(0);
		private final Keyword cEnumKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAttributeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAttributeEnumAttributeParserRuleCall_5_0 = (RuleCall)cAttributeAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EnumEntity:
		//	directives+=EnumDirective* final?="final"? "#Enum" name=ValidID "{" attribute=EnumAttribute "}";
		public ParserRule getRule() { return rule; }

		//directives+=EnumDirective* final?="final"? "#Enum" name=ValidID "{" attribute=EnumAttribute "}"
		public Group getGroup() { return cGroup; }

		//directives+=EnumDirective*
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//EnumDirective
		public RuleCall getDirectivesEnumDirectiveParserRuleCall_0_0() { return cDirectivesEnumDirectiveParserRuleCall_0_0; }

		//final?="final"?
		public Assignment getFinalAssignment_1() { return cFinalAssignment_1; }

		//"final"
		public Keyword getFinalFinalKeyword_1_0() { return cFinalFinalKeyword_1_0; }

		//"#Enum"
		public Keyword getEnumKeyword_2() { return cEnumKeyword_2; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//attribute=EnumAttribute
		public Assignment getAttributeAssignment_5() { return cAttributeAssignment_5; }

		//EnumAttribute
		public RuleCall getAttributeEnumAttributeParserRuleCall_5_0() { return cAttributeEnumAttributeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EnumAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumAttributeValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueXExpressionParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EnumAttributeValue:
		//	name=ValidID "=" value=XExpression;
		public ParserRule getRule() { return rule; }

		//name=ValidID "=" value=XExpression
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=XExpression
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//XExpression
		public RuleCall getValueXExpressionParserRuleCall_2_0() { return cValueXExpressionParserRuleCall_2_0; }
	}

	public class EnumAttributeDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumAttributeDirective");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumAttributeDirectiveValuesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cValuesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesEnumAttributeValueParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValuesEnumAttributeValueParserRuleCall_4_1_0 = (RuleCall)cValuesAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EnumAttributeDirective:
		//	{EnumAttributeDirectiveValues} "#Values" "(" values+=EnumAttributeValue ("," values+=EnumAttributeValue)* ")";
		public ParserRule getRule() { return rule; }

		//{EnumAttributeDirectiveValues} "#Values" "(" values+=EnumAttributeValue ("," values+=EnumAttributeValue)* ")"
		public Group getGroup() { return cGroup; }

		//{EnumAttributeDirectiveValues}
		public Action getEnumAttributeDirectiveValuesAction_0() { return cEnumAttributeDirectiveValuesAction_0; }

		//"#Values"
		public Keyword getValuesKeyword_1() { return cValuesKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//values+=EnumAttributeValue
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//EnumAttributeValue
		public RuleCall getValuesEnumAttributeValueParserRuleCall_3_0() { return cValuesEnumAttributeValueParserRuleCall_3_0; }

		//("," values+=EnumAttributeValue)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//values+=EnumAttributeValue
		public Assignment getValuesAssignment_4_1() { return cValuesAssignment_4_1; }

		//EnumAttributeValue
		public RuleCall getValuesEnumAttributeValueParserRuleCall_4_1_0() { return cValuesEnumAttributeValueParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class EnumAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesEnumAttributeDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Keyword cAttrKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//EnumAttribute:
		//	directives+=EnumAttributeDirective "#Attr" type=JvmTypeReference name=ValidID;
		public ParserRule getRule() { return rule; }

		//directives+=EnumAttributeDirective "#Attr" type=JvmTypeReference name=ValidID
		public Group getGroup() { return cGroup; }

		//directives+=EnumAttributeDirective
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//EnumAttributeDirective
		public RuleCall getDirectivesEnumAttributeDirectiveParserRuleCall_0_0() { return cDirectivesEnumAttributeDirectiveParserRuleCall_0_0; }

		//"#Attr"
		public Keyword getAttrKeyword_1() { return cAttrKeyword_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }
	}

	public class DaoDirectiveParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DaoDirectiveParameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOutAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOutJvmParameterizedTypeReferenceParserRuleCall_0_0 = (RuleCall)cOutAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInsJvmParameterizedTypeReferenceParserRuleCall_1_1_0 = (RuleCall)cInsAssignment_1_1.eContents().get(0);
		
		//DaoDirectiveParameters:
		//	out=JvmParameterizedTypeReference ("," ins+=JvmParameterizedTypeReference)*;
		public ParserRule getRule() { return rule; }

		//out=JvmParameterizedTypeReference ("," ins+=JvmParameterizedTypeReference)*
		public Group getGroup() { return cGroup; }

		//out=JvmParameterizedTypeReference
		public Assignment getOutAssignment_0() { return cOutAssignment_0; }

		//JvmParameterizedTypeReference
		public RuleCall getOutJvmParameterizedTypeReferenceParserRuleCall_0_0() { return cOutJvmParameterizedTypeReferenceParserRuleCall_0_0; }

		//("," ins+=JvmParameterizedTypeReference)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//ins+=JvmParameterizedTypeReference
		public Assignment getInsAssignment_1_1() { return cInsAssignment_1_1; }

		//JvmParameterizedTypeReference
		public RuleCall getInsJvmParameterizedTypeReferenceParserRuleCall_1_1_0() { return cInsJvmParameterizedTypeReferenceParserRuleCall_1_1_0; }
	}

	public class DescendantAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DescendantAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueValidIDParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescendantAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescendantJvmParameterizedTypeReferenceParserRuleCall_2_0 = (RuleCall)cDescendantAssignment_2.eContents().get(0);
		
		//DescendantAssignment:
		//	value=ValidID "=" descendant=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//value=ValidID "=" descendant=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//value=ValidID
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//ValidID
		public RuleCall getValueValidIDParserRuleCall_0_0() { return cValueValidIDParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//descendant=JvmParameterizedTypeReference
		public Assignment getDescendantAssignment_2() { return cDescendantAssignment_2; }

		//JvmParameterizedTypeReference
		public RuleCall getDescendantJvmParameterizedTypeReferenceParserRuleCall_2_0() { return cDescendantJvmParameterizedTypeReferenceParserRuleCall_2_0; }
	}

	public class FunProcTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunProcType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cFunctionCallQueryAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cFunctionCallQueryKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cProcedureCallQueryAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cProcedureCallQueryKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cFunctionCallAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cFunctionCallKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cProcedureUpdateAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cProcedureUpdateKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cFunctionQueryAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cFunctionQueryKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		
		//FunProcType:
		//	{FunctionCallQuery} "#FunctionCallQuery" | {ProcedureCallQuery} "#ProcedureCallQuery" | {FunctionCall} "#FunctionCall"
		//	| {ProcedureUpdate} "#ProcedureUpdate" | {FunctionQuery} "#FunctionQuery";
		public ParserRule getRule() { return rule; }

		//{FunctionCallQuery} "#FunctionCallQuery" | {ProcedureCallQuery} "#ProcedureCallQuery" | {FunctionCall} "#FunctionCall" |
		//{ProcedureUpdate} "#ProcedureUpdate" | {FunctionQuery} "#FunctionQuery"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{FunctionCallQuery} "#FunctionCallQuery"
		public Group getGroup_0() { return cGroup_0; }

		//{FunctionCallQuery}
		public Action getFunctionCallQueryAction_0_0() { return cFunctionCallQueryAction_0_0; }

		//"#FunctionCallQuery"
		public Keyword getFunctionCallQueryKeyword_0_1() { return cFunctionCallQueryKeyword_0_1; }

		//{ProcedureCallQuery} "#ProcedureCallQuery"
		public Group getGroup_1() { return cGroup_1; }

		//{ProcedureCallQuery}
		public Action getProcedureCallQueryAction_1_0() { return cProcedureCallQueryAction_1_0; }

		//"#ProcedureCallQuery"
		public Keyword getProcedureCallQueryKeyword_1_1() { return cProcedureCallQueryKeyword_1_1; }

		//{FunctionCall} "#FunctionCall"
		public Group getGroup_2() { return cGroup_2; }

		//{FunctionCall}
		public Action getFunctionCallAction_2_0() { return cFunctionCallAction_2_0; }

		//"#FunctionCall"
		public Keyword getFunctionCallKeyword_2_1() { return cFunctionCallKeyword_2_1; }

		//{ProcedureUpdate} "#ProcedureUpdate"
		public Group getGroup_3() { return cGroup_3; }

		//{ProcedureUpdate}
		public Action getProcedureUpdateAction_3_0() { return cProcedureUpdateAction_3_0; }

		//"#ProcedureUpdate"
		public Keyword getProcedureUpdateKeyword_3_1() { return cProcedureUpdateKeyword_3_1; }

		//{FunctionQuery} "#FunctionQuery"
		public Group getGroup_4() { return cGroup_4; }

		//{FunctionQuery}
		public Action getFunctionQueryAction_4_0() { return cFunctionQueryAction_4_0; }

		//"#FunctionQuery"
		public Keyword getFunctionQueryKeyword_4_1() { return cFunctionQueryKeyword_4_1; }
	}

	public class DaoDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DaoDirective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cDaoDirectiveSerializableAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cSerializableKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cSernumAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cSernumINTTerminalRuleCall_0_3_0 = (RuleCall)cSernumAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cDaoDirectiveDiscriminatorAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cInheritanceHandlerKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cAncestorAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cAncestorPojoAttributeCrossReference_1_3_0 = (CrossReference)cAncestorAssignment_1_3.eContents().get(0);
		private final RuleCall cAncestorPojoAttributeValidIDParserRuleCall_1_3_0_1 = (RuleCall)cAncestorPojoAttributeCrossReference_1_3_0.eContents().get(1);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cCommaKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cDescendantsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cDescendantsDescendantAssignmentParserRuleCall_1_4_1_0 = (RuleCall)cDescendantsAssignment_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cDaoDirectiveCrudAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cCRUDKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cPojoAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cPojoPojoEntityCrossReference_2_2_1_0 = (CrossReference)cPojoAssignment_2_2_1.eContents().get(0);
		private final RuleCall cPojoPojoEntityValidIDParserRuleCall_2_2_1_0_1 = (RuleCall)cPojoPojoEntityCrossReference_2_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cDaoDirectiveQueryAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cQueryKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cPojoAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cPojoPojoEntityCrossReference_3_2_1_0 = (CrossReference)cPojoAssignment_3_2_1.eContents().get(0);
		private final RuleCall cPojoPojoEntityValidIDParserRuleCall_3_2_1_0_1 = (RuleCall)cPojoPojoEntityCrossReference_3_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cDaoFunProcDirectiveAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeFunProcTypeParserRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamlistAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamlistDaoDirectiveParametersParserRuleCall_4_2_1_0 = (RuleCall)cParamlistAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2_2 = (Keyword)cGroup_4_2.eContents().get(2);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cDaoDirectivePojoAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cPojoKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cPojoAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cPojoPojoEntityCrossReference_5_2_1_0 = (CrossReference)cPojoAssignment_5_2_1.eContents().get(0);
		private final RuleCall cPojoPojoEntityValidIDParserRuleCall_5_2_1_0_1 = (RuleCall)cPojoPojoEntityCrossReference_5_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_2_2 = (Keyword)cGroup_5_2.eContents().get(2);
		
		//DaoDirective:
		//	{DaoDirectiveSerializable} "#Serializable" "(" sernum=INT ")" | {DaoDirectiveDiscriminator} "#InheritanceHandler" "("
		//	ancestor=[PojoAttribute|ValidID] ("," descendants+=DescendantAssignment)+ ")" | {DaoDirectiveCrud} "#CRUD" ("("
		//	pojo=[PojoEntity|ValidID] ")")? | {DaoDirectiveQuery} "#Query" ("(" pojo=[PojoEntity|ValidID] ")")? |
		//	{DaoFunProcDirective} type=FunProcType ("(" paramlist=DaoDirectiveParameters ")")? | {DaoDirectivePojo} "#Pojo" ("("
		//	pojo=[PojoEntity|ValidID] ")");
		public ParserRule getRule() { return rule; }

		//{DaoDirectiveSerializable} "#Serializable" "(" sernum=INT ")" | {DaoDirectiveDiscriminator} "#InheritanceHandler" "("
		//ancestor=[PojoAttribute|ValidID] ("," descendants+=DescendantAssignment)+ ")" | {DaoDirectiveCrud} "#CRUD" ("("
		//pojo=[PojoEntity|ValidID] ")")? | {DaoDirectiveQuery} "#Query" ("(" pojo=[PojoEntity|ValidID] ")")? |
		//{DaoFunProcDirective} type=FunProcType ("(" paramlist=DaoDirectiveParameters ")")? | {DaoDirectivePojo} "#Pojo" ("("
		//pojo=[PojoEntity|ValidID] ")")
		public Alternatives getAlternatives() { return cAlternatives; }

		//{DaoDirectiveSerializable} "#Serializable" "(" sernum=INT ")"
		public Group getGroup_0() { return cGroup_0; }

		//{DaoDirectiveSerializable}
		public Action getDaoDirectiveSerializableAction_0_0() { return cDaoDirectiveSerializableAction_0_0; }

		//"#Serializable"
		public Keyword getSerializableKeyword_0_1() { return cSerializableKeyword_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//sernum=INT
		public Assignment getSernumAssignment_0_3() { return cSernumAssignment_0_3; }

		//INT
		public RuleCall getSernumINTTerminalRuleCall_0_3_0() { return cSernumINTTerminalRuleCall_0_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }

		//{DaoDirectiveDiscriminator} "#InheritanceHandler" "(" ancestor=[PojoAttribute|ValidID] (","
		//descendants+=DescendantAssignment)+ ")"
		public Group getGroup_1() { return cGroup_1; }

		//{DaoDirectiveDiscriminator}
		public Action getDaoDirectiveDiscriminatorAction_1_0() { return cDaoDirectiveDiscriminatorAction_1_0; }

		//"#InheritanceHandler"
		public Keyword getInheritanceHandlerKeyword_1_1() { return cInheritanceHandlerKeyword_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }

		//ancestor=[PojoAttribute|ValidID]
		public Assignment getAncestorAssignment_1_3() { return cAncestorAssignment_1_3; }

		//[PojoAttribute|ValidID]
		public CrossReference getAncestorPojoAttributeCrossReference_1_3_0() { return cAncestorPojoAttributeCrossReference_1_3_0; }

		//ValidID
		public RuleCall getAncestorPojoAttributeValidIDParserRuleCall_1_3_0_1() { return cAncestorPojoAttributeValidIDParserRuleCall_1_3_0_1; }

		//("," descendants+=DescendantAssignment)+
		public Group getGroup_1_4() { return cGroup_1_4; }

		//","
		public Keyword getCommaKeyword_1_4_0() { return cCommaKeyword_1_4_0; }

		//descendants+=DescendantAssignment
		public Assignment getDescendantsAssignment_1_4_1() { return cDescendantsAssignment_1_4_1; }

		//DescendantAssignment
		public RuleCall getDescendantsDescendantAssignmentParserRuleCall_1_4_1_0() { return cDescendantsDescendantAssignmentParserRuleCall_1_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }

		//{DaoDirectiveCrud} "#CRUD" ("(" pojo=[PojoEntity|ValidID] ")")?
		public Group getGroup_2() { return cGroup_2; }

		//{DaoDirectiveCrud}
		public Action getDaoDirectiveCrudAction_2_0() { return cDaoDirectiveCrudAction_2_0; }

		//"#CRUD"
		public Keyword getCRUDKeyword_2_1() { return cCRUDKeyword_2_1; }

		//(=> "(" pojo=[PojoEntity|ValidID] ")")?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//=> "("
		public Keyword getLeftParenthesisKeyword_2_2_0() { return cLeftParenthesisKeyword_2_2_0; }

		//pojo=[PojoEntity|ValidID]
		public Assignment getPojoAssignment_2_2_1() { return cPojoAssignment_2_2_1; }

		//[PojoEntity|ValidID]
		public CrossReference getPojoPojoEntityCrossReference_2_2_1_0() { return cPojoPojoEntityCrossReference_2_2_1_0; }

		//ValidID
		public RuleCall getPojoPojoEntityValidIDParserRuleCall_2_2_1_0_1() { return cPojoPojoEntityValidIDParserRuleCall_2_2_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2_2() { return cRightParenthesisKeyword_2_2_2; }

		//{DaoDirectiveQuery} "#Query" ("(" pojo=[PojoEntity|ValidID] ")")?
		public Group getGroup_3() { return cGroup_3; }

		//{DaoDirectiveQuery}
		public Action getDaoDirectiveQueryAction_3_0() { return cDaoDirectiveQueryAction_3_0; }

		//"#Query"
		public Keyword getQueryKeyword_3_1() { return cQueryKeyword_3_1; }

		//(=> "(" pojo=[PojoEntity|ValidID] ")")?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//=> "("
		public Keyword getLeftParenthesisKeyword_3_2_0() { return cLeftParenthesisKeyword_3_2_0; }

		//pojo=[PojoEntity|ValidID]
		public Assignment getPojoAssignment_3_2_1() { return cPojoAssignment_3_2_1; }

		//[PojoEntity|ValidID]
		public CrossReference getPojoPojoEntityCrossReference_3_2_1_0() { return cPojoPojoEntityCrossReference_3_2_1_0; }

		//ValidID
		public RuleCall getPojoPojoEntityValidIDParserRuleCall_3_2_1_0_1() { return cPojoPojoEntityValidIDParserRuleCall_3_2_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2_2() { return cRightParenthesisKeyword_3_2_2; }

		//{DaoFunProcDirective} type=FunProcType ("(" paramlist=DaoDirectiveParameters ")")?
		public Group getGroup_4() { return cGroup_4; }

		//{DaoFunProcDirective}
		public Action getDaoFunProcDirectiveAction_4_0() { return cDaoFunProcDirectiveAction_4_0; }

		//type=FunProcType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }

		//FunProcType
		public RuleCall getTypeFunProcTypeParserRuleCall_4_1_0() { return cTypeFunProcTypeParserRuleCall_4_1_0; }

		//(=> "(" paramlist=DaoDirectiveParameters ")")?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//=> "("
		public Keyword getLeftParenthesisKeyword_4_2_0() { return cLeftParenthesisKeyword_4_2_0; }

		//paramlist=DaoDirectiveParameters
		public Assignment getParamlistAssignment_4_2_1() { return cParamlistAssignment_4_2_1; }

		//DaoDirectiveParameters
		public RuleCall getParamlistDaoDirectiveParametersParserRuleCall_4_2_1_0() { return cParamlistDaoDirectiveParametersParserRuleCall_4_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_2_2() { return cRightParenthesisKeyword_4_2_2; }

		//{DaoDirectivePojo} "#Pojo" ("(" pojo=[PojoEntity|ValidID] ")")
		public Group getGroup_5() { return cGroup_5; }

		//{DaoDirectivePojo}
		public Action getDaoDirectivePojoAction_5_0() { return cDaoDirectivePojoAction_5_0; }

		//"#Pojo"
		public Keyword getPojoKeyword_5_1() { return cPojoKeyword_5_1; }

		//=> "(" pojo=[PojoEntity|ValidID] ")"
		public Group getGroup_5_2() { return cGroup_5_2; }

		//=> "("
		public Keyword getLeftParenthesisKeyword_5_2_0() { return cLeftParenthesisKeyword_5_2_0; }

		//pojo=[PojoEntity|ValidID]
		public Assignment getPojoAssignment_5_2_1() { return cPojoAssignment_5_2_1; }

		//[PojoEntity|ValidID]
		public CrossReference getPojoPojoEntityCrossReference_5_2_1_0() { return cPojoPojoEntityCrossReference_5_2_1_0; }

		//ValidID
		public RuleCall getPojoPojoEntityValidIDParserRuleCall_5_2_1_0_1() { return cPojoPojoEntityValidIDParserRuleCall_5_2_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_2_2() { return cRightParenthesisKeyword_5_2_2; }
	}

	public class DaoEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DaoEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesDaoDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Assignment cFinalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFinalFinalKeyword_1_0 = (Keyword)cFinalAssignment_1.eContents().get(0);
		private final Keyword cDaoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSuperTypeJvmParameterizedTypeReferenceParserRuleCall_4_1_0 = (RuleCall)cSuperTypeAssignment_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAttributesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAttributesPojoAttributeParserRuleCall_6_0 = (RuleCall)cAttributesAssignment_6.eContents().get(0);
		private final Assignment cProceduresAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cProceduresPojoProcedureParserRuleCall_7_0 = (RuleCall)cProceduresAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//DaoEntity:
		//	directives+=DaoDirective* final?="final"? "#Dao" name=ValidID ("extends" superType=JvmParameterizedTypeReference)? "{"
		//	attributes+=PojoAttribute* procedures+=PojoProcedure* "}";
		public ParserRule getRule() { return rule; }

		//directives+=DaoDirective* final?="final"? "#Dao" name=ValidID ("extends" superType=JvmParameterizedTypeReference)? "{"
		//attributes+=PojoAttribute* procedures+=PojoProcedure* "}"
		public Group getGroup() { return cGroup; }

		//directives+=DaoDirective*
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//DaoDirective
		public RuleCall getDirectivesDaoDirectiveParserRuleCall_0_0() { return cDirectivesDaoDirectiveParserRuleCall_0_0; }

		//final?="final"?
		public Assignment getFinalAssignment_1() { return cFinalAssignment_1; }

		//"final"
		public Keyword getFinalFinalKeyword_1_0() { return cFinalFinalKeyword_1_0; }

		//"#Dao"
		public Keyword getDaoKeyword_2() { return cDaoKeyword_2; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }

		//("extends" superType=JvmParameterizedTypeReference)?
		public Group getGroup_4() { return cGroup_4; }

		//"extends"
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//superType=JvmParameterizedTypeReference
		public Assignment getSuperTypeAssignment_4_1() { return cSuperTypeAssignment_4_1; }

		//JvmParameterizedTypeReference
		public RuleCall getSuperTypeJvmParameterizedTypeReferenceParserRuleCall_4_1_0() { return cSuperTypeJvmParameterizedTypeReferenceParserRuleCall_4_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//attributes+=PojoAttribute*
		public Assignment getAttributesAssignment_6() { return cAttributesAssignment_6; }

		//PojoAttribute
		public RuleCall getAttributesPojoAttributeParserRuleCall_6_0() { return cAttributesPojoAttributeParserRuleCall_6_0; }

		//procedures+=PojoProcedure*
		public Assignment getProceduresAssignment_7() { return cProceduresAssignment_7; }

		//PojoProcedure
		public RuleCall getProceduresPojoProcedureParserRuleCall_7_0() { return cProceduresPojoProcedureParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ModifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Modifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModifierAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cAbstractAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_1_0_0 = (Keyword)cAbstractAssignment_1_0.eContents().get(0);
		private final Assignment cStaticAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cStaticStaticKeyword_1_1_0 = (Keyword)cStaticAssignment_1_1.eContents().get(0);
		private final Assignment cFinalAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cFinalFinalKeyword_1_2_0 = (Keyword)cFinalAssignment_1_2.eContents().get(0);
		
		//Modifier:
		//	{Modifier} (abstract?="abstract"? & static?="static"? & final?="final"?);
		public ParserRule getRule() { return rule; }

		//{Modifier} (abstract?="abstract"? & static?="static"? & final?="final"?)
		public Group getGroup() { return cGroup; }

		//{Modifier}
		public Action getModifierAction_0() { return cModifierAction_0; }

		//abstract?="abstract"? & static?="static"? & final?="final"?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_1_0() { return cAbstractAssignment_1_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_1_0_0() { return cAbstractAbstractKeyword_1_0_0; }

		//static?="static"?
		public Assignment getStaticAssignment_1_1() { return cStaticAssignment_1_1; }

		//"static"
		public Keyword getStaticStaticKeyword_1_1_0() { return cStaticStaticKeyword_1_1_0; }

		//final?="final"?
		public Assignment getFinalAssignment_1_2() { return cFinalAssignment_1_2; }

		//"final"
		public Keyword getFinalFinalKeyword_1_2_0() { return cFinalFinalKeyword_1_2_0; }
	}

	public class AnnotationDirectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationDirective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cAnnotationDirectiveConflictAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cConflictKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAnnotationDirectiveStaticAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cStaticKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cAnnotationDirectiveConstructorAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cConstructorKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cAnnotationDirectiveStandardAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cStandardKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cAnnotationDirectiveSetterAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cSetterKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cAnnotationDirectiveGetterAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cGetterKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cAnnotationDirectiveAttributeAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cAttributeKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		
		//AnnotationDirective:
		//	{AnnotationDirectiveConflict} "#Conflict" | {AnnotationDirectiveStatic} "#Static" | {AnnotationDirectiveConstructor}
		//	"#Constructor" | {AnnotationDirectiveStandard} "#Standard" | {AnnotationDirectiveSetter} "#Setter" |
		//	{AnnotationDirectiveGetter} "#Getter" | {AnnotationDirectiveAttribute} "#Attribute";
		public ParserRule getRule() { return rule; }

		//{AnnotationDirectiveConflict} "#Conflict" | {AnnotationDirectiveStatic} "#Static" | {AnnotationDirectiveConstructor}
		//"#Constructor" | {AnnotationDirectiveStandard} "#Standard" | {AnnotationDirectiveSetter} "#Setter" |
		//{AnnotationDirectiveGetter} "#Getter" | {AnnotationDirectiveAttribute} "#Attribute"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{AnnotationDirectiveConflict} "#Conflict"
		public Group getGroup_0() { return cGroup_0; }

		//{AnnotationDirectiveConflict}
		public Action getAnnotationDirectiveConflictAction_0_0() { return cAnnotationDirectiveConflictAction_0_0; }

		//"#Conflict"
		public Keyword getConflictKeyword_0_1() { return cConflictKeyword_0_1; }

		//{AnnotationDirectiveStatic} "#Static"
		public Group getGroup_1() { return cGroup_1; }

		//{AnnotationDirectiveStatic}
		public Action getAnnotationDirectiveStaticAction_1_0() { return cAnnotationDirectiveStaticAction_1_0; }

		//"#Static"
		public Keyword getStaticKeyword_1_1() { return cStaticKeyword_1_1; }

		//{AnnotationDirectiveConstructor} "#Constructor"
		public Group getGroup_2() { return cGroup_2; }

		//{AnnotationDirectiveConstructor}
		public Action getAnnotationDirectiveConstructorAction_2_0() { return cAnnotationDirectiveConstructorAction_2_0; }

		//"#Constructor"
		public Keyword getConstructorKeyword_2_1() { return cConstructorKeyword_2_1; }

		//{AnnotationDirectiveStandard} "#Standard"
		public Group getGroup_3() { return cGroup_3; }

		//{AnnotationDirectiveStandard}
		public Action getAnnotationDirectiveStandardAction_3_0() { return cAnnotationDirectiveStandardAction_3_0; }

		//"#Standard"
		public Keyword getStandardKeyword_3_1() { return cStandardKeyword_3_1; }

		//{AnnotationDirectiveSetter} "#Setter"
		public Group getGroup_4() { return cGroup_4; }

		//{AnnotationDirectiveSetter}
		public Action getAnnotationDirectiveSetterAction_4_0() { return cAnnotationDirectiveSetterAction_4_0; }

		//"#Setter"
		public Keyword getSetterKeyword_4_1() { return cSetterKeyword_4_1; }

		//{AnnotationDirectiveGetter} "#Getter"
		public Group getGroup_5() { return cGroup_5; }

		//{AnnotationDirectiveGetter}
		public Action getAnnotationDirectiveGetterAction_5_0() { return cAnnotationDirectiveGetterAction_5_0; }

		//"#Getter"
		public Keyword getGetterKeyword_5_1() { return cGetterKeyword_5_1; }

		//{AnnotationDirectiveAttribute} "#Attribute"
		public Group getGroup_6() { return cGroup_6; }

		//{AnnotationDirectiveAttribute}
		public Action getAnnotationDirectiveAttributeAction_6_0() { return cAnnotationDirectiveAttributeAction_6_0; }

		//"#Attribute"
		public Keyword getAttributeKeyword_6_1() { return cAttributeKeyword_6_1; }
	}

	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectivesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectivesAnnotationDirectiveParserRuleCall_0_0 = (RuleCall)cDirectivesAssignment_0.eContents().get(0);
		private final Assignment cAnnotationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationAssignment_1.eContents().get(0);
		
		//Annotation:
		//	directives+=AnnotationDirective* annotation=XAnnotation;
		public ParserRule getRule() { return rule; }

		//directives+=AnnotationDirective* annotation=XAnnotation
		public Group getGroup() { return cGroup; }

		//directives+=AnnotationDirective*
		public Assignment getDirectivesAssignment_0() { return cDirectivesAssignment_0; }

		//AnnotationDirective
		public RuleCall getDirectivesAnnotationDirectiveParserRuleCall_0_0() { return cDirectivesAnnotationDirectiveParserRuleCall_0_0; }

		//annotation=XAnnotation
		public Assignment getAnnotationAssignment_1() { return cAnnotationAssignment_1; }

		//XAnnotation
		public RuleCall getAnnotationXAnnotationParserRuleCall_1_0() { return cAnnotationXAnnotationParserRuleCall_1_0; }
	}
	
	
	private final ArtifactsElements pArtifacts;
	private final ValueTypeElements pValueType;
	private final DatabaseCatalogAssignementElements pDatabaseCatalogAssignement;
	private final DatabaseSchemaAssignementElements pDatabaseSchemaAssignement;
	private final DatabaseTypeAssignementElements pDatabaseTypeAssignement;
	private final DatabaseMetaInfoAssignementElements pDatabaseMetaInfoAssignement;
	private final DriverMetaInfoAssignementElements pDriverMetaInfoAssignement;
	private final DriverMethodOutputAssignementElements pDriverMethodOutputAssignement;
	private final SqlTypeAssignementElements pSqlTypeAssignement;
	private final ColumnTypeAssignementElements pColumnTypeAssignement;
	private final ShowColumnTypeAssignementElements pShowColumnTypeAssignement;
	private final TableAssignementElements pTableAssignement;
	private final JoinTableAssignementElements pJoinTableAssignement;
	private final ColumnAssignementElements pColumnAssignement;
	private final ImportAssignementElements pImportAssignement;
	private final ExportAssignementElements pExportAssignement;
	private final InheritanceAssignementElements pInheritanceAssignement;
	private final ManyToManyAssignementElements pManyToManyAssignement;
	private final DebugLevelAssignementElements pDebugLevelAssignement;
	private final ProcedurePojoAssignementElements pProcedurePojoAssignement;
	private final FunctionPojoAssignementElements pFunctionPojoAssignement;
	private final ImplementsAssignementElements pImplementsAssignement;
	private final ExtendsAssignementElements pExtendsAssignement;
	private final ImplementsAssignementGenericsElements pImplementsAssignementGenerics;
	private final ExtendsAssignementGenericsElements pExtendsAssignementGenerics;
	private final PropertyConditionElements pPropertyCondition;
	private final PropertyElements pProperty;
	private final DatabasePropertyElements pDatabaseProperty;
	private final PojogenPropertyElements pPojogenProperty;
	private final MetaTypeAssignementElements pMetaTypeAssignement;
	private final MetagenPropertyElements pMetagenProperty;
	private final DaogenPropertyElements pDaogenProperty;
	private final PojoDefinitionElements pPojoDefinition;
	private final TableDefinitionElements pTableDefinition;
	private final ProcedureDefinitionElements pProcedureDefinition;
	private final FunctionDefinitionElements pFunctionDefinition;
	private final PackageElements pPackage;
	private final AbstractEntityElements pAbstractEntity;
	private final ImplementsExtendsDirectiveElements pImplementsExtendsDirective;
	private final ImplementsElements pImplements;
	private final ExtendsElements pExtends;
	private final AnnotatedEntityElements pAnnotatedEntity;
	private final EntityElements pEntity;
	private final DirectivePropertiesElements pDirectiveProperties;
	private final PojoDirectiveElements pPojoDirective;
	private final PojoEntityElements pPojoEntity;
	private final PojoAttributeDirectiveElements pPojoAttributeDirective;
	private final PojoAttributeElements pPojoAttribute;
	private final PojoProcedureElements pPojoProcedure;
	private final EnumDirectiveElements pEnumDirective;
	private final EnumEntityElements pEnumEntity;
	private final EnumAttributeValueElements pEnumAttributeValue;
	private final EnumAttributeDirectiveElements pEnumAttributeDirective;
	private final EnumAttributeElements pEnumAttribute;
	private final DaoDirectiveParametersElements pDaoDirectiveParameters;
	private final DescendantAssignmentElements pDescendantAssignment;
	private final FunProcTypeElements pFunProcType;
	private final DaoDirectiveElements pDaoDirective;
	private final DaoEntityElements pDaoEntity;
	private final ModifierElements pModifier;
	private final AnnotationDirectiveElements pAnnotationDirective;
	private final AnnotationElements pAnnotation;
	
	private final Grammar grammar;

	private final XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations;

	@Inject
	public ProcessorModelGrammarAccess(GrammarProvider grammarProvider,
		XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbaseWithAnnotations = gaXbaseWithAnnotations;
		this.pArtifacts = new ArtifactsElements();
		this.pValueType = new ValueTypeElements();
		this.pDatabaseCatalogAssignement = new DatabaseCatalogAssignementElements();
		this.pDatabaseSchemaAssignement = new DatabaseSchemaAssignementElements();
		this.pDatabaseTypeAssignement = new DatabaseTypeAssignementElements();
		this.pDatabaseMetaInfoAssignement = new DatabaseMetaInfoAssignementElements();
		this.pDriverMetaInfoAssignement = new DriverMetaInfoAssignementElements();
		this.pDriverMethodOutputAssignement = new DriverMethodOutputAssignementElements();
		this.pSqlTypeAssignement = new SqlTypeAssignementElements();
		this.pColumnTypeAssignement = new ColumnTypeAssignementElements();
		this.pShowColumnTypeAssignement = new ShowColumnTypeAssignementElements();
		this.pTableAssignement = new TableAssignementElements();
		this.pJoinTableAssignement = new JoinTableAssignementElements();
		this.pColumnAssignement = new ColumnAssignementElements();
		this.pImportAssignement = new ImportAssignementElements();
		this.pExportAssignement = new ExportAssignementElements();
		this.pInheritanceAssignement = new InheritanceAssignementElements();
		this.pManyToManyAssignement = new ManyToManyAssignementElements();
		this.pDebugLevelAssignement = new DebugLevelAssignementElements();
		this.pProcedurePojoAssignement = new ProcedurePojoAssignementElements();
		this.pFunctionPojoAssignement = new FunctionPojoAssignementElements();
		this.pImplementsAssignement = new ImplementsAssignementElements();
		this.pExtendsAssignement = new ExtendsAssignementElements();
		this.pImplementsAssignementGenerics = new ImplementsAssignementGenericsElements();
		this.pExtendsAssignementGenerics = new ExtendsAssignementGenericsElements();
		this.pPropertyCondition = new PropertyConditionElements();
		this.pProperty = new PropertyElements();
		this.pDatabaseProperty = new DatabasePropertyElements();
		this.pPojogenProperty = new PojogenPropertyElements();
		this.pMetaTypeAssignement = new MetaTypeAssignementElements();
		this.pMetagenProperty = new MetagenPropertyElements();
		this.pDaogenProperty = new DaogenPropertyElements();
		this.pPojoDefinition = new PojoDefinitionElements();
		this.pTableDefinition = new TableDefinitionElements();
		this.pProcedureDefinition = new ProcedureDefinitionElements();
		this.pFunctionDefinition = new FunctionDefinitionElements();
		this.pPackage = new PackageElements();
		this.pAbstractEntity = new AbstractEntityElements();
		this.pImplementsExtendsDirective = new ImplementsExtendsDirectiveElements();
		this.pImplements = new ImplementsElements();
		this.pExtends = new ExtendsElements();
		this.pAnnotatedEntity = new AnnotatedEntityElements();
		this.pEntity = new EntityElements();
		this.pDirectiveProperties = new DirectivePropertiesElements();
		this.pPojoDirective = new PojoDirectiveElements();
		this.pPojoEntity = new PojoEntityElements();
		this.pPojoAttributeDirective = new PojoAttributeDirectiveElements();
		this.pPojoAttribute = new PojoAttributeElements();
		this.pPojoProcedure = new PojoProcedureElements();
		this.pEnumDirective = new EnumDirectiveElements();
		this.pEnumEntity = new EnumEntityElements();
		this.pEnumAttributeValue = new EnumAttributeValueElements();
		this.pEnumAttributeDirective = new EnumAttributeDirectiveElements();
		this.pEnumAttribute = new EnumAttributeElements();
		this.pDaoDirectiveParameters = new DaoDirectiveParametersElements();
		this.pDescendantAssignment = new DescendantAssignmentElements();
		this.pFunProcType = new FunProcTypeElements();
		this.pDaoDirective = new DaoDirectiveElements();
		this.pDaoEntity = new DaoEntityElements();
		this.pModifier = new ModifierElements();
		this.pAnnotationDirective = new AnnotationDirectiveElements();
		this.pAnnotation = new AnnotationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.sqlproc.model.ProcessorModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseWithAnnotationsGrammarAccess getXbaseWithAnnotationsGrammarAccess() {
		return gaXbaseWithAnnotations;
	}

	
	//Artifacts:
	//	{Artifacts} (properties+=Property | pojos+=PojoDefinition | tables+=TableDefinition | procedures+=ProcedureDefinition
	//	| functions+=FunctionDefinition | packages+=Package)*;
	public ArtifactsElements getArtifactsAccess() {
		return pArtifacts;
	}
	
	public ParserRule getArtifactsRule() {
		return getArtifactsAccess().getRule();
	}

	//ValueType:
	//	value=STRING | number=INT | id=QualifiedName;
	public ValueTypeElements getValueTypeAccess() {
		return pValueType;
	}
	
	public ParserRule getValueTypeRule() {
		return getValueTypeAccess().getRule();
	}

	//DatabaseCatalogAssignement:
	//	dbCatalog=QualifiedName;
	public DatabaseCatalogAssignementElements getDatabaseCatalogAssignementAccess() {
		return pDatabaseCatalogAssignement;
	}
	
	public ParserRule getDatabaseCatalogAssignementRule() {
		return getDatabaseCatalogAssignementAccess().getRule();
	}

	//DatabaseSchemaAssignement:
	//	dbSchema=QualifiedName;
	public DatabaseSchemaAssignementElements getDatabaseSchemaAssignementAccess() {
		return pDatabaseSchemaAssignement;
	}
	
	public ParserRule getDatabaseSchemaAssignementRule() {
		return getDatabaseSchemaAssignementAccess().getRule();
	}

	//DatabaseTypeAssignement:
	//	dbType=ValidID;
	public DatabaseTypeAssignementElements getDatabaseTypeAssignementAccess() {
		return pDatabaseTypeAssignement;
	}
	
	public ParserRule getDatabaseTypeAssignementRule() {
		return getDatabaseTypeAssignementAccess().getRule();
	}

	//DatabaseMetaInfoAssignement:
	//	dbMetaInfo=ValueType;
	public DatabaseMetaInfoAssignementElements getDatabaseMetaInfoAssignementAccess() {
		return pDatabaseMetaInfoAssignement;
	}
	
	public ParserRule getDatabaseMetaInfoAssignementRule() {
		return getDatabaseMetaInfoAssignementAccess().getRule();
	}

	//DriverMetaInfoAssignement:
	//	dbDriverInfo=ValueType;
	public DriverMetaInfoAssignementElements getDriverMetaInfoAssignementAccess() {
		return pDriverMetaInfoAssignement;
	}
	
	public ParserRule getDriverMetaInfoAssignementRule() {
		return getDriverMetaInfoAssignementAccess().getRule();
	}

	//DriverMethodOutputAssignement:
	//	driverMethod=ValidID "->" callOutput=ValueType;
	public DriverMethodOutputAssignementElements getDriverMethodOutputAssignementAccess() {
		return pDriverMethodOutputAssignement;
	}
	
	public ParserRule getDriverMethodOutputAssignementRule() {
		return getDriverMethodOutputAssignementAccess().getRule();
	}

	//SqlTypeAssignement:
	//	sqlType=ValueType "->" ":"? type=JvmParameterizedTypeReference;
	public SqlTypeAssignementElements getSqlTypeAssignementAccess() {
		return pSqlTypeAssignement;
	}
	
	public ParserRule getSqlTypeAssignementRule() {
		return getSqlTypeAssignementAccess().getRule();
	}

	//ColumnTypeAssignement:
	//	dbColumn=ValidID "->" ":"? type=JvmParameterizedTypeReference;
	public ColumnTypeAssignementElements getColumnTypeAssignementAccess() {
		return pColumnTypeAssignement;
	}
	
	public ParserRule getColumnTypeAssignementRule() {
		return getColumnTypeAssignementAccess().getRule();
	}

	//ShowColumnTypeAssignement:
	//	dbColumn=ValidID "->" type=ValueType;
	public ShowColumnTypeAssignementElements getShowColumnTypeAssignementAccess() {
		return pShowColumnTypeAssignement;
	}
	
	public ParserRule getShowColumnTypeAssignementRule() {
		return getShowColumnTypeAssignementAccess().getRule();
	}

	//TableAssignement:
	//	dbTable=ValidID "->" newName=ValidID;
	public TableAssignementElements getTableAssignementAccess() {
		return pTableAssignement;
	}
	
	public ParserRule getTableAssignementRule() {
		return getTableAssignementAccess().getRule();
	}

	//JoinTableAssignement:
	//	dbTable=ValidID ("->" dbTables+=ValidID)+;
	public JoinTableAssignementElements getJoinTableAssignementAccess() {
		return pJoinTableAssignement;
	}
	
	public ParserRule getJoinTableAssignementRule() {
		return getJoinTableAssignementAccess().getRule();
	}

	//ColumnAssignement:
	//	dbColumn=ValidID "->" newName=ValidID;
	public ColumnAssignementElements getColumnAssignementAccess() {
		return pColumnAssignement;
	}
	
	public ParserRule getColumnAssignementRule() {
		return getColumnAssignementAccess().getRule();
	}

	//ImportAssignement:
	//	dbColumn=ValidID "->" pkTable=ValidID ("->" pkColumn=ValidID)?;
	public ImportAssignementElements getImportAssignementAccess() {
		return pImportAssignement;
	}
	
	public ParserRule getImportAssignementRule() {
		return getImportAssignementAccess().getRule();
	}

	//ExportAssignement:
	//	dbColumn=ValidID "->" fkTable=ValidID ("->" fkColumn=ValidID)?;
	public ExportAssignementElements getExportAssignementAccess() {
		return pExportAssignement;
	}
	
	public ParserRule getExportAssignementRule() {
		return getExportAssignementAccess().getRule();
	}

	//InheritanceAssignement:
	//	discriminator=ValidID "->" dbTable=ValidID ("->" dbColumns+=ValidID)+;
	public InheritanceAssignementElements getInheritanceAssignementAccess() {
		return pInheritanceAssignement;
	}
	
	public ParserRule getInheritanceAssignementRule() {
		return getInheritanceAssignementAccess().getRule();
	}

	//ManyToManyAssignement:
	//	pkColumn=ValidID "->" pkTable=ValidID ("->" fkColumn=ValidID)?;
	public ManyToManyAssignementElements getManyToManyAssignementAccess() {
		return pManyToManyAssignement;
	}
	
	public ParserRule getManyToManyAssignementRule() {
		return getManyToManyAssignementAccess().getRule();
	}

	//DebugLevelAssignement:
	//	debug=ValidID scope=ValidID?;
	public DebugLevelAssignementElements getDebugLevelAssignementAccess() {
		return pDebugLevelAssignement;
	}
	
	public ParserRule getDebugLevelAssignementRule() {
		return getDebugLevelAssignementAccess().getRule();
	}

	//ProcedurePojoAssignement:
	//	dbProcedure=ValidID "->" ":"? pojo=JvmParameterizedTypeReference;
	public ProcedurePojoAssignementElements getProcedurePojoAssignementAccess() {
		return pProcedurePojoAssignement;
	}
	
	public ParserRule getProcedurePojoAssignementRule() {
		return getProcedurePojoAssignementAccess().getRule();
	}

	//FunctionPojoAssignement:
	//	dbFunction=ValidID "->" ":"? pojo=JvmParameterizedTypeReference;
	public FunctionPojoAssignementElements getFunctionPojoAssignementAccess() {
		return pFunctionPojoAssignement;
	}
	
	public ParserRule getFunctionPojoAssignementRule() {
		return getFunctionPojoAssignementAccess().getRule();
	}

	//ImplementsAssignement:
	//	":" toImplement=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
	public ImplementsAssignementElements getImplementsAssignementAccess() {
		return pImplementsAssignement;
	}
	
	public ParserRule getImplementsAssignementRule() {
		return getImplementsAssignementAccess().getRule();
	}

	//ExtendsAssignement:
	//	":" toExtends=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
	public ExtendsAssignementElements getExtendsAssignementAccess() {
		return pExtendsAssignement;
	}
	
	public ParserRule getExtendsAssignementRule() {
		return getExtendsAssignementAccess().getRule();
	}

	//ImplementsAssignementGenerics:
	//	":" toImplement=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
	public ImplementsAssignementGenericsElements getImplementsAssignementGenericsAccess() {
		return pImplementsAssignementGenerics;
	}
	
	public ParserRule getImplementsAssignementGenericsRule() {
		return getImplementsAssignementGenericsAccess().getRule();
	}

	//ExtendsAssignementGenerics:
	//	":" toExtends=JvmParameterizedTypeReference ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)?;
	public ExtendsAssignementGenericsElements getExtendsAssignementGenericsAccess() {
		return pExtendsAssignementGenerics;
	}
	
	public ParserRule getExtendsAssignementGenericsRule() {
		return getExtendsAssignementGenericsAccess().getRule();
	}

	//PropertyCondition:
	//	"{" name=ValidID "=" value=ValueType "}";
	public PropertyConditionElements getPropertyConditionAccess() {
		return pPropertyCondition;
	}
	
	public ParserRule getPropertyConditionRule() {
		return getPropertyConditionAccess().getRule();
	}

	//Property:
	//	condition=PropertyCondition? (name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-"
	//	database=DatabaseProperty | name="pojogen-" pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty |
	//	name="daogen-" daogen=DaogenProperty | name="replace-all-regex" replaceId=ValidID regex=ValueType |
	//	name="replace-all-replacement" replaceId=ValidID replacement=ValueType | name="compress-meta-directives") ";";
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//DatabaseProperty:
	//	name="is-online" | name="is-offline" | name="has-url" dbUrl=ValueType | name="login-username" dbUsername=ValueType |
	//	name="login-password" dbPassword=ValueType | name="in-catalog" dbCatalog=DatabaseCatalogAssignement |
	//	name="active-schema" dbSchema=DatabaseSchemaAssignement | name="jdbc-driver" (":"
	//	dbDriverx=JvmParameterizedTypeReference | dbDriver=ValueType) | name="ddl-create" dbExecuteBefore=ValueType |
	//	name="ddl-drop" dbExecuteAfter=ValueType | name="index-types" dbIndexTypes=ValueType | name="skip-indexes" |
	//	name="skip-functions-procedures" | name="skip-check-constraints" | name="is-of-type" dbType=DatabaseTypeAssignement |
	//	name="show-database-info" dbMetaInfo=DatabaseMetaInfoAssignement | name="show-driver-info"
	//	dbDriverInfo=DriverMetaInfoAssignement | name="show-driver-output" dbMethodsCalls+=DriverMethodOutputAssignement+ |
	//	name="debug-level" debug=DebugLevelAssignement | name="take-comments" | name="lowercase-names" |
	//	name="uppercase-names";
	public DatabasePropertyElements getDatabasePropertyAccess() {
		return pDatabaseProperty;
	}
	
	public ParserRule getDatabasePropertyRule() {
		return getDatabasePropertyAccess().getRule();
	}

	//PojogenProperty:
	//	name="types-sqltypes" sqlTypes+=SqlTypeAssignement+ | name="types-in-table" dbTable=ValidID
	//	sqlTypes+=SqlTypeAssignement+ | name="types-for-columns" dbTable=ValidID columnTypes+=ColumnTypeAssignement+ |
	//	name="types-for-procedure" dbProcedure=ValidID columnTypes+=ColumnTypeAssignement+ | name="types-for-function"
	//	dbFunction=ValidID columnTypes+=ColumnTypeAssignement+ | name="show-type-for-column" dbTable=ValidID
	//	columnType=ShowColumnTypeAssignement | name="show-type-for-procedure" dbProcedure=ValidID
	//	columnType=ShowColumnTypeAssignement | name="show-type-for-function" dbFunction=ValidID
	//	columnType=ShowColumnTypeAssignement | name="ignore-tables" dbTables+=ValidID+ | name="only-tables" dbTables+=ValidID+
	//	| name="not-abstract-tables" dbTables+=ValidID+ | name="join-tables" joinTables+=JoinTableAssignement+ |
	//	name="ignore-columns" dbTable=ValidID dbColumns+=ValidID+ | name="required-columns" dbTable=ValidID
	//	dbColumns+=ValidID+ | name="not-required-columns" dbTable=ValidID dbColumns+=ValidID+ | name="create-columns"
	//	dbTable=ValidID columnTypes+=ColumnTypeAssignement+ | name="rename-tables" tables+=TableAssignement+ |
	//	name="rename-columns" dbTable=ValidID columns+=ColumnAssignement+ | name="ignore-one-to-many" dbTable=ValidID
	//	exports+=ExportAssignement+ // exports
	//	| name="ignore-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
	//	| name="inherit-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
	//	| name="create-one-to-many" dbTable=ValidID exports+=ExportAssignement+ // exports
	//	| name="create-many-to-one" dbTable=ValidID imports+=ImportAssignement+ // imports
	//	| name="table-many-to-many" dbTable=ValidID many2s+=ManyToManyAssignement+ | name="inherit-discriminator"
	//	dbTable=ValidID dbColumn=ValidID inheritance+=InheritanceAssignement+ | name="generate-methods" methods+=ValidID+ |
	//	name="generate-operators" operatorsSuffix=ValidID? | name="implements-interfaces" toImplements=ImplementsAssignement |
	//	name="extends-class" toExtends=ExtendsAssignement | name="implements-interfaces-generics"
	//	toImplementsGenerics=ImplementsAssignementGenerics | name="extends-class-generics"
	//	toExtendsGenerics=ExtendsAssignementGenerics | name="generate-wrappers" | name="generate-validation-annotations" |
	//	name="preserve-foreign-keys" dbTables+=ValidID* | name="make-it-final" | name="version-column" version=ValidID ("+"
	//	dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? | name="debug-level" debug=DebugLevelAssignement |
	//	name="pojos-for-procedures" procPojos+=ProcedurePojoAssignement+ | name="pojos-for-functions"
	//	funPojos+=FunctionPojoAssignement+ | name="active-filter" activeFilter=ValueType | name="package" pckg=QualifiedName |
	//	name="enum-for-check-constraints" enumName=ValidID dbCheckConstraints+=ValidID+;
	public PojogenPropertyElements getPojogenPropertyAccess() {
		return pPojogenProperty;
	}
	
	public ParserRule getPojogenPropertyRule() {
		return getPojogenPropertyAccess().getRule();
	}

	//MetaTypeAssignement:
	//	dbColumn=ValidID "->" type=ValidID ("->" extension=ValidID)?;
	public MetaTypeAssignementElements getMetaTypeAssignementAccess() {
		return pMetaTypeAssignement;
	}
	
	public ParserRule getMetaTypeAssignementRule() {
		return getMetaTypeAssignementAccess().getRule();
	}

	//MetagenProperty:
	//	name="global-sequence" sequence=ValidID type=ValidID? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? |
	//	name="table-sequence" dbTable=ValidID sequence=ValidID type=ValidID? | name="global-identity" (identity=ValidID
	//	type=ValidID?)? ("+" dbTables+=ValidID+)? ("-" dbNotTables+=ValidID+)? | name="table-identity" dbTable=ValidID
	//	identity=ValidID type=ValidID? | name="column-meta-type" dbTable=ValidID metaTypes+=MetaTypeAssignement+ |
	//	name="statement-meta-type" dbStatement=ValidID metaTypes+=MetaTypeAssignement+ | name="make-it-final" |
	//	name="like-columns" (dbTable=ValidID dbColumns+=ValidID+)? | name="not-like-columns" (dbTable=ValidID
	//	dbColumns+=ValidID+)? | name="generate-sequences" | name="generate-identities" | name="generate-idgenerators" |
	//	name="generate-default-idgenerators" | name="function-result" dbFunction=ValidID type=ValidID |
	//	name="function-result-set" dbFunction=ValidID dbTable=ValidID | name="procedure-result-set" dbProcedure=ValidID
	//	dbTable=ValidID | name="debug-level" debug=DebugLevelAssignement | name="generate-operators" | name="optimize-insert"
	//	dbTables+=ValidID* | name="optional-features" dbStatement=ValidID optionalFeatures+=ValidID+ | name="active-filter"
	//	activeFilter=ValueType;
	public MetagenPropertyElements getMetagenPropertyAccess() {
		return pMetagenProperty;
	}
	
	public ParserRule getMetagenPropertyRule() {
		return getMetagenPropertyAccess().getRule();
	}

	//DaogenProperty:
	//	name="ignore-tables" dbTables+=ValidID+ | name="only-tables" dbTables+=ValidID* | name="implements-interfaces"
	//	toImplements=ImplementsAssignement | name="extends-class" toExtends=ExtendsAssignement |
	//	name="implements-interfaces-generics" toImplementsGenerics=ImplementsAssignementGenerics |
	//	name="extends-class-generics" toExtendsGenerics=ExtendsAssignementGenerics | name="make-it-final" |
	//	name="function-result" dbFunction=ValidID ":"? resultType=JvmParameterizedTypeReference | name="debug-level"
	//	debug=DebugLevelAssignement | name="active-filter" activeFilter=ValueType | name="package" pckg=QualifiedName;
	public DaogenPropertyElements getDaogenPropertyAccess() {
		return pDaogenProperty;
	}
	
	public ParserRule getDaogenPropertyRule() {
		return getDaogenPropertyAccess().getRule();
	}

	//PojoDefinition:
	//	"pojo" name=ValidID (class=QualifiedName | ":" classx=JvmParameterizedTypeReference) ";";
	public PojoDefinitionElements getPojoDefinitionAccess() {
		return pPojoDefinition;
	}
	
	public ParserRule getPojoDefinitionRule() {
		return getPojoDefinitionAccess().getRule();
	}

	//TableDefinition:
	//	"table" name=ValidID table=ValidID ";";
	public TableDefinitionElements getTableDefinitionAccess() {
		return pTableDefinition;
	}
	
	public ParserRule getTableDefinitionRule() {
		return getTableDefinitionAccess().getRule();
	}

	//ProcedureDefinition:
	//	"procedure" name=ValidID table=ValidID ";";
	public ProcedureDefinitionElements getProcedureDefinitionAccess() {
		return pProcedureDefinition;
	}
	
	public ParserRule getProcedureDefinitionRule() {
		return getProcedureDefinitionAccess().getRule();
	}

	//FunctionDefinition:
	//	"function" name=ValidID table=ValidID ";";
	public FunctionDefinitionElements getFunctionDefinitionAccess() {
		return pFunctionDefinition;
	}
	
	public ParserRule getFunctionDefinitionRule() {
		return getFunctionDefinitionAccess().getRule();
	}

	//Package:
	//	"package" name=QualifiedName "{" importSection=XImportSection? elements+=AbstractEntity* "}";
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	//AbstractEntity:
	//	Implements | Extends | AnnotatedEntity;
	public AbstractEntityElements getAbstractEntityAccess() {
		return pAbstractEntity;
	}
	
	public ParserRule getAbstractEntityRule() {
		return getAbstractEntityAccess().getRule();
	}

	//ImplementsExtendsDirective:
	//	{ImplementsExtendsDirectiveGenerics} "#Generics" | {ImplementsExtendsDirectiveOnlyPojos} "#OnlyPojos"
	//	onlyPojos+=[PojoEntity|ValidID]* | {ImplementsExtendsDirectiveOnlyDaos} "#OnlyDaos" onlyDaos+=[DaoEntity|ValidID]* |
	//	{ImplementsExtendsDirectiveExceptPojos} "#ExceptPojos" exceptPojos+=[PojoEntity|ValidID]* |
	//	{ImplementsExtendsDirectiveExceptDaos} "#ExceptDaos" exceptDaos+=[DaoEntity|ValidID]*;
	public ImplementsExtendsDirectiveElements getImplementsExtendsDirectiveAccess() {
		return pImplementsExtendsDirective;
	}
	
	public ParserRule getImplementsExtendsDirectiveRule() {
		return getImplementsExtendsDirectiveAccess().getRule();
	}

	//Implements:
	//	directives+=ImplementsExtendsDirective* "implements" implements=JvmParameterizedTypeReference;
	public ImplementsElements getImplementsAccess() {
		return pImplements;
	}
	
	public ParserRule getImplementsRule() {
		return getImplementsAccess().getRule();
	}

	//Extends:
	//	directives+=ImplementsExtendsDirective* "extends" extends=JvmParameterizedTypeReference;
	public ExtendsElements getExtendsAccess() {
		return pExtends;
	}
	
	public ParserRule getExtendsRule() {
		return getExtendsAccess().getRule();
	}

	//AnnotatedEntity:
	//	annotations+=Annotation* entity=Entity;
	public AnnotatedEntityElements getAnnotatedEntityAccess() {
		return pAnnotatedEntity;
	}
	
	public ParserRule getAnnotatedEntityRule() {
		return getAnnotatedEntityAccess().getRule();
	}

	//Entity:
	//	PojoEntity | EnumEntity | DaoEntity;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//DirectiveProperties:
	//	features+=[PojoAttribute|ValidID] ("," features+=[PojoAttribute|ValidID])*;
	public DirectivePropertiesElements getDirectivePropertiesAccess() {
		return pDirectiveProperties;
	}
	
	public ParserRule getDirectivePropertiesRule() {
		return getDirectivePropertiesAccess().getRule();
	}

	//PojoDirective:
	//	{PojoDirectiveToString} "#ToString" "(" proplist=DirectiveProperties ")" | {PojoDirectiveIndex} "#Index" "(" index=INT
	//	"," proplist=DirectiveProperties ")" | {PojoDirectiveOperators} "#Operators" ("(" operatorsSuffix=ValidID ")")? |
	//	{PojoDirectiveSerializable} "#Serializable" "(" sernum=INT ")" | {PojoDirectiveDiscriminator} "#InheritanceChild" "("
	//	discriminator=ValidID ")" | {PojoDirectiveEquals} "#Equals" "(" proplist=DirectiveProperties ")" |
	//	{PojoDirectiveHashCode} "#HashCode" "(" proplist=DirectiveProperties ")";
	public PojoDirectiveElements getPojoDirectiveAccess() {
		return pPojoDirective;
	}
	
	public ParserRule getPojoDirectiveRule() {
		return getPojoDirectiveAccess().getRule();
	}

	//PojoEntity:
	//	directives+=PojoDirective* final?="final"? abstract?="abstract"? "#Pojo" name=ValidID ("extends"
	//	superType=JvmParameterizedTypeReference)? "{" attributes+=PojoAttribute* procedures+=PojoProcedure* "}";
	public PojoEntityElements getPojoEntityAccess() {
		return pPojoEntity;
	}
	
	public ParserRule getPojoEntityRule() {
		return getPojoEntityAccess().getRule();
	}

	//PojoAttributeDirective:
	//	{PojoAttributeDirectiveRequired} "#Required" | {PojoAttributeDirectivePrimaryKey} "#PrimaryKey" |
	//	{PojoAttributeDirectiveDiscriminator} "#InheritanceDiscriminator" | {PojoAttributeDirectiveIndex} "#Index" "("
	//	index=INT ")" | {PojoAttributeDirectiveVersion} "#Version" | {PojoAttributeDirectiveUpdateCol} "#UpdateCol" "("
	//	updateColumn1=[PojoAttribute|ValidID] "," updateColumn2=[PojoAttribute|ValidID] ")" |
	//	{PojoAttributeDirectiveCreateCol} "#CreateCol" "(" createColumn1=[PojoAttribute|ValidID] ","
	//	createColumn2=[PojoAttribute|ValidID] ")" | {PojoAttributeDirectiveToInit} "#ToInit" |
	//	{PojoAttributeDirectiveEnumInit} "#EnumInit" | {PojoAttributeDirectiveIsDef} "#IsDef" |
	//	{PojoAttributeDirectiveEnumDef} "#EnumDef";
	public PojoAttributeDirectiveElements getPojoAttributeDirectiveAccess() {
		return pPojoAttributeDirective;
	}
	
	public ParserRule getPojoAttributeDirectiveRule() {
		return getPojoAttributeDirectiveAccess().getRule();
	}

	//PojoAttribute:
	//	annotations+=Annotation* directives+=PojoAttributeDirective* "#Attr" => static?="static"? => final?="final"? //modifiers+=Modifier* 
	//	type=JvmTypeReference? name=ValidID ("=" initExpr=XExpression)?;
	public PojoAttributeElements getPojoAttributeAccess() {
		return pPojoAttribute;
	}
	
	public ParserRule getPojoAttributeRule() {
		return getPojoAttributeAccess().getRule();
	}

	//PojoProcedure:
	//	annotations+=Annotation* "#Proc" => static?="static"? => final?="final"? //modifiers+=Modifier*
	//	type=JvmTypeReference? name=ValidID "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")"
	//	body=XBlockExpression;
	public PojoProcedureElements getPojoProcedureAccess() {
		return pPojoProcedure;
	}
	
	public ParserRule getPojoProcedureRule() {
		return getPojoProcedureAccess().getRule();
	}

	//EnumDirective:
	//	{EnumDirectiveSerializable} "#Serializable" "(" sernum=INT ")";
	public EnumDirectiveElements getEnumDirectiveAccess() {
		return pEnumDirective;
	}
	
	public ParserRule getEnumDirectiveRule() {
		return getEnumDirectiveAccess().getRule();
	}

	//EnumEntity:
	//	directives+=EnumDirective* final?="final"? "#Enum" name=ValidID "{" attribute=EnumAttribute "}";
	public EnumEntityElements getEnumEntityAccess() {
		return pEnumEntity;
	}
	
	public ParserRule getEnumEntityRule() {
		return getEnumEntityAccess().getRule();
	}

	//EnumAttributeValue:
	//	name=ValidID "=" value=XExpression;
	public EnumAttributeValueElements getEnumAttributeValueAccess() {
		return pEnumAttributeValue;
	}
	
	public ParserRule getEnumAttributeValueRule() {
		return getEnumAttributeValueAccess().getRule();
	}

	//EnumAttributeDirective:
	//	{EnumAttributeDirectiveValues} "#Values" "(" values+=EnumAttributeValue ("," values+=EnumAttributeValue)* ")";
	public EnumAttributeDirectiveElements getEnumAttributeDirectiveAccess() {
		return pEnumAttributeDirective;
	}
	
	public ParserRule getEnumAttributeDirectiveRule() {
		return getEnumAttributeDirectiveAccess().getRule();
	}

	//EnumAttribute:
	//	directives+=EnumAttributeDirective "#Attr" type=JvmTypeReference name=ValidID;
	public EnumAttributeElements getEnumAttributeAccess() {
		return pEnumAttribute;
	}
	
	public ParserRule getEnumAttributeRule() {
		return getEnumAttributeAccess().getRule();
	}

	//DaoDirectiveParameters:
	//	out=JvmParameterizedTypeReference ("," ins+=JvmParameterizedTypeReference)*;
	public DaoDirectiveParametersElements getDaoDirectiveParametersAccess() {
		return pDaoDirectiveParameters;
	}
	
	public ParserRule getDaoDirectiveParametersRule() {
		return getDaoDirectiveParametersAccess().getRule();
	}

	//DescendantAssignment:
	//	value=ValidID "=" descendant=JvmParameterizedTypeReference;
	public DescendantAssignmentElements getDescendantAssignmentAccess() {
		return pDescendantAssignment;
	}
	
	public ParserRule getDescendantAssignmentRule() {
		return getDescendantAssignmentAccess().getRule();
	}

	//FunProcType:
	//	{FunctionCallQuery} "#FunctionCallQuery" | {ProcedureCallQuery} "#ProcedureCallQuery" | {FunctionCall} "#FunctionCall"
	//	| {ProcedureUpdate} "#ProcedureUpdate" | {FunctionQuery} "#FunctionQuery";
	public FunProcTypeElements getFunProcTypeAccess() {
		return pFunProcType;
	}
	
	public ParserRule getFunProcTypeRule() {
		return getFunProcTypeAccess().getRule();
	}

	//DaoDirective:
	//	{DaoDirectiveSerializable} "#Serializable" "(" sernum=INT ")" | {DaoDirectiveDiscriminator} "#InheritanceHandler" "("
	//	ancestor=[PojoAttribute|ValidID] ("," descendants+=DescendantAssignment)+ ")" | {DaoDirectiveCrud} "#CRUD" ("("
	//	pojo=[PojoEntity|ValidID] ")")? | {DaoDirectiveQuery} "#Query" ("(" pojo=[PojoEntity|ValidID] ")")? |
	//	{DaoFunProcDirective} type=FunProcType ("(" paramlist=DaoDirectiveParameters ")")? | {DaoDirectivePojo} "#Pojo" ("("
	//	pojo=[PojoEntity|ValidID] ")");
	public DaoDirectiveElements getDaoDirectiveAccess() {
		return pDaoDirective;
	}
	
	public ParserRule getDaoDirectiveRule() {
		return getDaoDirectiveAccess().getRule();
	}

	//DaoEntity:
	//	directives+=DaoDirective* final?="final"? "#Dao" name=ValidID ("extends" superType=JvmParameterizedTypeReference)? "{"
	//	attributes+=PojoAttribute* procedures+=PojoProcedure* "}";
	public DaoEntityElements getDaoEntityAccess() {
		return pDaoEntity;
	}
	
	public ParserRule getDaoEntityRule() {
		return getDaoEntityAccess().getRule();
	}

	//Modifier:
	//	{Modifier} (abstract?="abstract"? & static?="static"? & final?="final"?);
	public ModifierElements getModifierAccess() {
		return pModifier;
	}
	
	public ParserRule getModifierRule() {
		return getModifierAccess().getRule();
	}

	//AnnotationDirective:
	//	{AnnotationDirectiveConflict} "#Conflict" | {AnnotationDirectiveStatic} "#Static" | {AnnotationDirectiveConstructor}
	//	"#Constructor" | {AnnotationDirectiveStandard} "#Standard" | {AnnotationDirectiveSetter} "#Setter" |
	//	{AnnotationDirectiveGetter} "#Getter" | {AnnotationDirectiveAttribute} "#Attribute";
	public AnnotationDirectiveElements getAnnotationDirectiveAccess() {
		return pAnnotationDirective;
	}
	
	public ParserRule getAnnotationDirectiveRule() {
		return getAnnotationDirectiveAccess().getRule();
	}

	//Annotation:
	//	directives+=AnnotationDirective* annotation=XAnnotation;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//XAnnotation:
	//	{XAnnotation} "@" annotationType=[types::JvmAnnotationType|QualifiedName] ("("
	//	(elementValuePairs+=XAnnotationElementValuePair ("," elementValuePairs+=XAnnotationElementValuePair)* |
	//	value=XAnnotationElementValueOrCommaList)? ")")?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElements getXAnnotationAccess() {
		return gaXbaseWithAnnotations.getXAnnotationAccess();
	}
	
	public ParserRule getXAnnotationRule() {
		return getXAnnotationAccess().getRule();
	}

	//XAnnotationElementValuePair:
	//	=> (element=[types::JvmOperation|ValidID] "=") value=XAnnotationElementValue;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValuePairElements getXAnnotationElementValuePairAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValuePairAccess();
	}
	
	public ParserRule getXAnnotationElementValuePairRule() {
		return getXAnnotationElementValuePairAccess().getRule();
	}

	//XAnnotationElementValueOrCommaList returns xbase::XExpression:
	//	=> ({xbase::XListLiteral} "#" "[") (elements+=XAnnotationOrExpression ("," elements+=XAnnotationOrExpression)*)? "]" |
	//	XAnnotationOrExpression ({xbase::XListLiteral.elements+=current} ("," elements+=XAnnotationOrExpression)+)?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueOrCommaListElements getXAnnotationElementValueOrCommaListAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueOrCommaListAccess();
	}
	
	public ParserRule getXAnnotationElementValueOrCommaListRule() {
		return getXAnnotationElementValueOrCommaListAccess().getRule();
	}

	//XAnnotationElementValue returns xbase::XExpression:
	//	=> ({xbase::XListLiteral} "#" "[") (elements+=XAnnotationOrExpression ("," elements+=XAnnotationOrExpression)*)? "]" |
	//	XAnnotationOrExpression;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueElements getXAnnotationElementValueAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueAccess();
	}
	
	public ParserRule getXAnnotationElementValueRule() {
		return getXAnnotationElementValueAccess().getRule();
	}

	//XAnnotationOrExpression returns xbase::XExpression:
	//	XAnnotation | XExpression;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationOrExpressionElements getXAnnotationOrExpressionAccess() {
		return gaXbaseWithAnnotations.getXAnnotationOrExpressionAccess();
	}
	
	public ParserRule getXAnnotationOrExpressionRule() {
		return getXAnnotationOrExpressionAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbaseWithAnnotations.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbaseWithAnnotations.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbaseWithAnnotations.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	"+=" | "-=" | "*=" | "/=" | "%=" | "<" "<" "=" | ">" ">"? ">=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbaseWithAnnotations.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbaseWithAnnotations.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbaseWithAnnotations.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbaseWithAnnotations.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbaseWithAnnotations.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbaseWithAnnotations.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbaseWithAnnotations.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbaseWithAnnotations.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	">=" | "<" "=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbaseWithAnnotations.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbaseWithAnnotations.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<" | "=>") | "<>" | "?:";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbaseWithAnnotations.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbaseWithAnnotations.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbaseWithAnnotations.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbaseWithAnnotations.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbaseWithAnnotations.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbaseWithAnnotations.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbaseWithAnnotations.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbaseWithAnnotations.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XPostfixOperation returns XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbaseWithAnnotations.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}

	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbaseWithAnnotations.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (memberCallArguments+=XShortClosure |
	//	memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbaseWithAnnotations.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbaseWithAnnotations.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbaseWithAnnotations.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbaseWithAnnotations.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbaseWithAnnotations.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbaseWithAnnotations.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbaseWithAnnotations.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbaseWithAnnotations.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbaseWithAnnotations.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbaseWithAnnotations.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbaseWithAnnotations.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//	{XSwitchExpression} "switch" (=> ("(" declaredParam=JvmFormalParameter ":") switch=XExpression ")" | =>
	//	(declaredParam=JvmFormalParameter ":")? switch=XExpression) "{" cases+=XCasePart* ("default" ":" default=XExpression)?
	//	"}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbaseWithAnnotations.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ("case" case=XExpression)? (":" then=XExpression | fallThrough?=",");
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbaseWithAnnotations.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//	=> ({XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":") forExpression=XExpression ")"
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbaseWithAnnotations.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XBasicForLoopExpression returns XExpression:
	//	{XBasicForLoopExpression} "for" "(" (initExpressions+=XExpressionOrVarDeclaration (","
	//	initExpressions+=XExpressionOrVarDeclaration)*)? ";" expression=XExpression? ";" (updateExpressions+=XExpression (","
	//	updateExpressions+=XExpression)*)? ")" eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbaseWithAnnotations.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbaseWithAnnotations.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbaseWithAnnotations.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//	{XBlockExpression} "{" (expressions+=XExpressionOrVarDeclaration ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbaseWithAnnotations.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionOrVarDeclaration returns XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbaseWithAnnotations.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbaseWithAnnotations.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbaseWithAnnotations.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbaseWithAnnotations.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//	{XFeatureCall} ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression ("," featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbaseWithAnnotations.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbaseWithAnnotations.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbaseWithAnnotations.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? (=>
	//	explicitConstructorCall?="(" (arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbaseWithAnnotations.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbaseWithAnnotations.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbaseWithAnnotations.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbaseWithAnnotations.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbaseWithAnnotations.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbaseWithAnnotations.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbaseWithAnnotations.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//	{XReturnExpression} "return" -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbaseWithAnnotations.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbaseWithAnnotations.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XSynchronizedExpression returns XExpression:
	//	=> ({XSynchronizedExpression} "synchronized" "(") param=XExpression ")" expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbaseWithAnnotations.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}

	//XCatchClause:
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbaseWithAnnotations.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbaseWithAnnotations.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbaseWithAnnotations.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	/// **
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// * / StaticQualifier:
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbaseWithAnnotations.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbaseWithAnnotations.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbaseWithAnnotations.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbaseWithAnnotations.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbaseWithAnnotations.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbaseWithAnnotations.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)* ">"
	//	(=> ({JvmInnerTypeReference.outer=current} ".") type=[JvmType|ValidID] ("<" arguments+=JvmArgumentTypeReference (","
	//	arguments+=JvmArgumentTypeReference)* ">")?)*)?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* |
	//	constraints+=JvmLowerBound constraints+=JvmLowerBoundAnded*)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbaseWithAnnotations.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbaseWithAnnotations.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbaseWithAnnotations.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmLowerBoundAnded returns JvmLowerBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundAndedElements getJvmLowerBoundAndedAccess() {
		return gaXbaseWithAnnotations.getJvmLowerBoundAndedAccess();
	}
	
	public ParserRule getJvmLowerBoundAndedRule() {
		return getJvmLowerBoundAndedAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbaseWithAnnotations.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXbaseWithAnnotations.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXbaseWithAnnotations.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbaseWithAnnotations.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?="*" | memberName=ValidID) | importedType=[JvmDeclaredType|QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbaseWithAnnotations.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//QualifiedNameInStaticImport:
	//	(ValidID ".")+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXbaseWithAnnotations.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbaseWithAnnotations.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') * / | !("\\" | "\""))* "\""? | "\'" ("\\" .
	//	/ * ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') * / | !("\\" | "\'"))* "\'"?;
	public TerminalRule getSTRINGRule() {
		return gaXbaseWithAnnotations.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbaseWithAnnotations.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbaseWithAnnotations.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbaseWithAnnotations.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbaseWithAnnotations.getANY_OTHERRule();
	} 
}
