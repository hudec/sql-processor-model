/*
* generated by Xtext
*/
package org.sqlproc.model.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class ProcessorModelGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ArtifactsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Artifacts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArtifactsAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cPropertiesAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_2_0_0_0 = (RuleCall)cPropertiesAssignment_2_0_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cPojosAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cPojosPojoDefinitionParserRuleCall_2_1_0_0 = (RuleCall)cPojosAssignment_2_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Assignment cTablesAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final RuleCall cTablesTableDefinitionParserRuleCall_2_2_0_0 = (RuleCall)cTablesAssignment_2_2_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_2_1 = (RuleCall)cGroup_2_2.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Assignment cProceduresAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final RuleCall cProceduresProcedureDefinitionParserRuleCall_2_3_0_0 = (RuleCall)cProceduresAssignment_2_3_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_3_1 = (RuleCall)cGroup_2_3.eContents().get(1);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Assignment cFunctionsAssignment_2_4_0 = (Assignment)cGroup_2_4.eContents().get(0);
		private final RuleCall cFunctionsFunctionDefinitionParserRuleCall_2_4_0_0 = (RuleCall)cFunctionsAssignment_2_4_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_4_1 = (RuleCall)cGroup_2_4.eContents().get(1);
		private final Group cGroup_2_5 = (Group)cAlternatives_2.eContents().get(5);
		private final Assignment cPojoPackagesAssignment_2_5_0 = (Assignment)cGroup_2_5.eContents().get(0);
		private final RuleCall cPojoPackagesPackageDeclarationParserRuleCall_2_5_0_0 = (RuleCall)cPojoPackagesAssignment_2_5_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_5_1 = (RuleCall)cGroup_2_5.eContents().get(1);
		
		//Artifacts:
		//	{Artifacts} WS* (properties+=Property WS* | pojos+=PojoDefinition WS* | tables+=TableDefinition WS* |
		//	procedures+=ProcedureDefinition WS* | functions+=FunctionDefinition WS* | pojoPackages+=PackageDeclaration WS*)*;
		public ParserRule getRule() { return rule; }

		//{Artifacts} WS* (properties+=Property WS* | pojos+=PojoDefinition WS* | tables+=TableDefinition WS* |
		//procedures+=ProcedureDefinition WS* | functions+=FunctionDefinition WS* | pojoPackages+=PackageDeclaration WS*)*
		public Group getGroup() { return cGroup; }

		//{Artifacts}
		public Action getArtifactsAction_0() { return cArtifactsAction_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//(properties+=Property WS* | pojos+=PojoDefinition WS* | tables+=TableDefinition WS* | procedures+=ProcedureDefinition
		//WS* | functions+=FunctionDefinition WS* | pojoPackages+=PackageDeclaration WS*)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//properties+=Property WS*
		public Group getGroup_2_0() { return cGroup_2_0; }

		//properties+=Property
		public Assignment getPropertiesAssignment_2_0_0() { return cPropertiesAssignment_2_0_0; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_2_0_0_0() { return cPropertiesPropertyParserRuleCall_2_0_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_0_1() { return cWSTerminalRuleCall_2_0_1; }

		//pojos+=PojoDefinition WS*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//pojos+=PojoDefinition
		public Assignment getPojosAssignment_2_1_0() { return cPojosAssignment_2_1_0; }

		//PojoDefinition
		public RuleCall getPojosPojoDefinitionParserRuleCall_2_1_0_0() { return cPojosPojoDefinitionParserRuleCall_2_1_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_1_1() { return cWSTerminalRuleCall_2_1_1; }

		//tables+=TableDefinition WS*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//tables+=TableDefinition
		public Assignment getTablesAssignment_2_2_0() { return cTablesAssignment_2_2_0; }

		//TableDefinition
		public RuleCall getTablesTableDefinitionParserRuleCall_2_2_0_0() { return cTablesTableDefinitionParserRuleCall_2_2_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_2_1() { return cWSTerminalRuleCall_2_2_1; }

		//procedures+=ProcedureDefinition WS*
		public Group getGroup_2_3() { return cGroup_2_3; }

		//procedures+=ProcedureDefinition
		public Assignment getProceduresAssignment_2_3_0() { return cProceduresAssignment_2_3_0; }

		//ProcedureDefinition
		public RuleCall getProceduresProcedureDefinitionParserRuleCall_2_3_0_0() { return cProceduresProcedureDefinitionParserRuleCall_2_3_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_3_1() { return cWSTerminalRuleCall_2_3_1; }

		//functions+=FunctionDefinition WS*
		public Group getGroup_2_4() { return cGroup_2_4; }

		//functions+=FunctionDefinition
		public Assignment getFunctionsAssignment_2_4_0() { return cFunctionsAssignment_2_4_0; }

		//FunctionDefinition
		public RuleCall getFunctionsFunctionDefinitionParserRuleCall_2_4_0_0() { return cFunctionsFunctionDefinitionParserRuleCall_2_4_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_4_1() { return cWSTerminalRuleCall_2_4_1; }

		//pojoPackages+=PackageDeclaration WS*
		public Group getGroup_2_5() { return cGroup_2_5; }

		//pojoPackages+=PackageDeclaration
		public Assignment getPojoPackagesAssignment_2_5_0() { return cPojoPackagesAssignment_2_5_0; }

		//PackageDeclaration
		public RuleCall getPojoPackagesPackageDeclarationParserRuleCall_2_5_0_0() { return cPojoPackagesPackageDeclarationParserRuleCall_2_5_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_5_1() { return cWSTerminalRuleCall_2_5_1; }
	}

	public class DatabaseCatalogAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseCatalogAssignement");
		private final Assignment cDbCatalogAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbCatalogPropertyValueParserRuleCall_0 = (RuleCall)cDbCatalogAssignment.eContents().get(0);
		
		//DatabaseCatalogAssignement:
		//	dbCatalog=PropertyValue;
		public ParserRule getRule() { return rule; }

		//dbCatalog=PropertyValue
		public Assignment getDbCatalogAssignment() { return cDbCatalogAssignment; }

		//PropertyValue
		public RuleCall getDbCatalogPropertyValueParserRuleCall_0() { return cDbCatalogPropertyValueParserRuleCall_0; }
	}

	public class DatabaseSchemaAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseSchemaAssignement");
		private final Assignment cDbSchemaAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbSchemaPropertyValueParserRuleCall_0 = (RuleCall)cDbSchemaAssignment.eContents().get(0);
		
		//DatabaseSchemaAssignement:
		//	dbSchema=PropertyValue;
		public ParserRule getRule() { return rule; }

		//dbSchema=PropertyValue
		public Assignment getDbSchemaAssignment() { return cDbSchemaAssignment; }

		//PropertyValue
		public RuleCall getDbSchemaPropertyValueParserRuleCall_0() { return cDbSchemaPropertyValueParserRuleCall_0; }
	}

	public class DatabaseTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseTypeAssignement");
		private final Assignment cDbTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbTypeIDENTTerminalRuleCall_0 = (RuleCall)cDbTypeAssignment.eContents().get(0);
		
		//DatabaseTypeAssignement:
		//	dbType=IDENT;
		public ParserRule getRule() { return rule; }

		//dbType=IDENT
		public Assignment getDbTypeAssignment() { return cDbTypeAssignment; }

		//IDENT
		public RuleCall getDbTypeIDENTTerminalRuleCall_0() { return cDbTypeIDENTTerminalRuleCall_0; }
	}

	public class DatabaseMetaInfoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseMetaInfoAssignement");
		private final Assignment cDbMetaInfoAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbMetaInfoPropertyValueParserRuleCall_0 = (RuleCall)cDbMetaInfoAssignment.eContents().get(0);
		
		//DatabaseMetaInfoAssignement:
		//	dbMetaInfo=PropertyValue;
		public ParserRule getRule() { return rule; }

		//dbMetaInfo=PropertyValue
		public Assignment getDbMetaInfoAssignment() { return cDbMetaInfoAssignment; }

		//PropertyValue
		public RuleCall getDbMetaInfoPropertyValueParserRuleCall_0() { return cDbMetaInfoPropertyValueParserRuleCall_0; }
	}

	public class DriverMetaInfoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DriverMetaInfoAssignement");
		private final Assignment cDbDriverInfoAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDbDriverInfoPropertyValueParserRuleCall_0 = (RuleCall)cDbDriverInfoAssignment.eContents().get(0);
		
		//DriverMetaInfoAssignement:
		//	dbDriverInfo=PropertyValue;
		public ParserRule getRule() { return rule; }

		//dbDriverInfo=PropertyValue
		public Assignment getDbDriverInfoAssignment() { return cDbDriverInfoAssignment; }

		//PropertyValue
		public RuleCall getDbDriverInfoPropertyValueParserRuleCall_0() { return cDbDriverInfoPropertyValueParserRuleCall_0; }
	}

	public class DriverMethodOutputAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DriverMethodOutputAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDriverMethodAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDriverMethodIDENTTerminalRuleCall_0_0 = (RuleCall)cDriverMethodAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCallOutputAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCallOutputPropertyValueParserRuleCall_2_0 = (RuleCall)cCallOutputAssignment_2.eContents().get(0);
		
		//DriverMethodOutputAssignement:
		//	driverMethod=IDENT "->" callOutput=PropertyValue;
		public ParserRule getRule() { return rule; }

		//driverMethod=IDENT "->" callOutput=PropertyValue
		public Group getGroup() { return cGroup; }

		//driverMethod=IDENT
		public Assignment getDriverMethodAssignment_0() { return cDriverMethodAssignment_0; }

		//IDENT
		public RuleCall getDriverMethodIDENTTerminalRuleCall_0_0() { return cDriverMethodIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//callOutput=PropertyValue
		public Assignment getCallOutputAssignment_2() { return cCallOutputAssignment_2; }

		//PropertyValue
		public RuleCall getCallOutputPropertyValueParserRuleCall_2_0() { return cCallOutputPropertyValueParserRuleCall_2_0; }
	}

	public class SqlTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SqlTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeNameIDENTTerminalRuleCall_0_0 = (RuleCall)cTypeNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cLPARENTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cSizeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSizeNUMBERTerminalRuleCall_1_1_0 = (RuleCall)cSizeAssignment_1_1.eContents().get(0);
		private final RuleCall cRPARENTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypePojoTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//SqlTypeAssignement:
		//	typeName=IDENT (LPAREN size=NUMBER RPAREN)? "->" type=PojoType;
		public ParserRule getRule() { return rule; }

		//typeName=IDENT (LPAREN size=NUMBER RPAREN)? "->" type=PojoType
		public Group getGroup() { return cGroup; }

		//typeName=IDENT
		public Assignment getTypeNameAssignment_0() { return cTypeNameAssignment_0; }

		//IDENT
		public RuleCall getTypeNameIDENTTerminalRuleCall_0_0() { return cTypeNameIDENTTerminalRuleCall_0_0; }

		//(LPAREN size=NUMBER RPAREN)?
		public Group getGroup_1() { return cGroup_1; }

		//LPAREN
		public RuleCall getLPARENTerminalRuleCall_1_0() { return cLPARENTerminalRuleCall_1_0; }

		//size=NUMBER
		public Assignment getSizeAssignment_1_1() { return cSizeAssignment_1_1; }

		//NUMBER
		public RuleCall getSizeNUMBERTerminalRuleCall_1_1_0() { return cSizeNUMBERTerminalRuleCall_1_1_0; }

		//RPAREN
		public RuleCall getRPARENTerminalRuleCall_1_2() { return cRPARENTerminalRuleCall_1_2; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//type=PojoType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//PojoType
		public RuleCall getTypePojoTypeParserRuleCall_3_0() { return cTypePojoTypeParserRuleCall_3_0; }
	}

	public class ColumnTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColumnTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypePojoTypeParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//ColumnTypeAssignement:
		//	dbColumn=IDENT "->" type=PojoType;
		public ParserRule getRule() { return rule; }

		//dbColumn=IDENT "->" type=PojoType
		public Group getGroup() { return cGroup; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_0_0() { return cDbColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//type=PojoType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//PojoType
		public RuleCall getTypePojoTypeParserRuleCall_2_0() { return cTypePojoTypeParserRuleCall_2_0; }
	}

	public class ShowColumnTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShowColumnTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypePropertyValueParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//ShowColumnTypeAssignement:
		//	dbColumn=IDENT "->" type=PropertyValue;
		public ParserRule getRule() { return rule; }

		//dbColumn=IDENT "->" type=PropertyValue
		public Group getGroup() { return cGroup; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_0_0() { return cDbColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//type=PropertyValue
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//PropertyValue
		public RuleCall getTypePropertyValueParserRuleCall_2_0() { return cTypePropertyValueParserRuleCall_2_0; }
	}

	public class TableAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbTableIDENTTerminalRuleCall_0_0 = (RuleCall)cDbTableAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewNameIDENTTerminalRuleCall_2_0 = (RuleCall)cNewNameAssignment_2.eContents().get(0);
		
		//TableAssignement:
		//	dbTable=IDENT "->" newName=IDENT;
		public ParserRule getRule() { return rule; }

		//dbTable=IDENT "->" newName=IDENT
		public Group getGroup() { return cGroup; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_0() { return cDbTableAssignment_0; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_0_0() { return cDbTableIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//newName=IDENT
		public Assignment getNewNameAssignment_2() { return cNewNameAssignment_2; }

		//IDENT
		public RuleCall getNewNameIDENTTerminalRuleCall_2_0() { return cNewNameIDENTTerminalRuleCall_2_0; }
	}

	public class JoinTableAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JoinTableAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbTableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbTableIDENTTerminalRuleCall_0_0 = (RuleCall)cDbTableAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_1_1_0 = (RuleCall)cDbTablesAssignment_1_1.eContents().get(0);
		
		//JoinTableAssignement:
		//	dbTable=IDENT ("->" dbTables+=IDENT)+;
		public ParserRule getRule() { return rule; }

		//dbTable=IDENT ("->" dbTables+=IDENT)+
		public Group getGroup() { return cGroup; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_0() { return cDbTableAssignment_0; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_0_0() { return cDbTableIDENTTerminalRuleCall_0_0; }

		//("->" dbTables+=IDENT)+
		public Group getGroup_1() { return cGroup_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_0() { return cHyphenMinusGreaterThanSignKeyword_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_1_1() { return cDbTablesAssignment_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_1_1_0() { return cDbTablesIDENTTerminalRuleCall_1_1_0; }
	}

	public class ColumnAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColumnAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewNameIDENTTerminalRuleCall_2_0 = (RuleCall)cNewNameAssignment_2.eContents().get(0);
		
		//ColumnAssignement:
		//	dbColumn=IDENT "->" newName=IDENT;
		public ParserRule getRule() { return rule; }

		//dbColumn=IDENT "->" newName=IDENT
		public Group getGroup() { return cGroup; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_0_0() { return cDbColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//newName=IDENT
		public Assignment getNewNameAssignment_2() { return cNewNameAssignment_2; }

		//IDENT
		public RuleCall getNewNameIDENTTerminalRuleCall_2_0() { return cNewNameIDENTTerminalRuleCall_2_0; }
	}

	public class ImportAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPkTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPkTableIDENTTerminalRuleCall_2_0 = (RuleCall)cPkTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPkColumnAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPkColumnIDENTTerminalRuleCall_3_1_0 = (RuleCall)cPkColumnAssignment_3_1.eContents().get(0);
		
		//ImportAssignement:
		//	dbColumn=IDENT "->" pkTable=IDENT ("->" pkColumn=IDENT)?;
		public ParserRule getRule() { return rule; }

		//dbColumn=IDENT "->" pkTable=IDENT ("->" pkColumn=IDENT)?
		public Group getGroup() { return cGroup; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_0_0() { return cDbColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//pkTable=IDENT
		public Assignment getPkTableAssignment_2() { return cPkTableAssignment_2; }

		//IDENT
		public RuleCall getPkTableIDENTTerminalRuleCall_2_0() { return cPkTableIDENTTerminalRuleCall_2_0; }

		//("->" pkColumn=IDENT)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//pkColumn=IDENT
		public Assignment getPkColumnAssignment_3_1() { return cPkColumnAssignment_3_1; }

		//IDENT
		public RuleCall getPkColumnIDENTTerminalRuleCall_3_1_0() { return cPkColumnIDENTTerminalRuleCall_3_1_0; }
	}

	public class ExportAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExportAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFkTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFkTableIDENTTerminalRuleCall_2_0 = (RuleCall)cFkTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFkColumnAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFkColumnIDENTTerminalRuleCall_3_1_0 = (RuleCall)cFkColumnAssignment_3_1.eContents().get(0);
		
		//ExportAssignement:
		//	dbColumn=IDENT "->" fkTable=IDENT ("->" fkColumn=IDENT)?;
		public ParserRule getRule() { return rule; }

		//dbColumn=IDENT "->" fkTable=IDENT ("->" fkColumn=IDENT)?
		public Group getGroup() { return cGroup; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_0_0() { return cDbColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//fkTable=IDENT
		public Assignment getFkTableAssignment_2() { return cFkTableAssignment_2; }

		//IDENT
		public RuleCall getFkTableIDENTTerminalRuleCall_2_0() { return cFkTableIDENTTerminalRuleCall_2_0; }

		//("->" fkColumn=IDENT)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//fkColumn=IDENT
		public Assignment getFkColumnAssignment_3_1() { return cFkColumnAssignment_3_1; }

		//IDENT
		public RuleCall getFkColumnIDENTTerminalRuleCall_3_1_0() { return cFkColumnIDENTTerminalRuleCall_3_1_0; }
	}

	public class InheritanceAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InheritanceAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDiscriminatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDiscriminatorIDENTTerminalRuleCall_0_0 = (RuleCall)cDiscriminatorAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDbTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_2_0 = (RuleCall)cDbTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDbColumnsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDbColumnsIDENTTerminalRuleCall_3_1_0 = (RuleCall)cDbColumnsAssignment_3_1.eContents().get(0);
		
		//InheritanceAssignement:
		//	discriminator=IDENT "->" dbTable=IDENT ("->" dbColumns+=IDENT)+;
		public ParserRule getRule() { return rule; }

		//discriminator=IDENT "->" dbTable=IDENT ("->" dbColumns+=IDENT)+
		public Group getGroup() { return cGroup; }

		//discriminator=IDENT
		public Assignment getDiscriminatorAssignment_0() { return cDiscriminatorAssignment_0; }

		//IDENT
		public RuleCall getDiscriminatorIDENTTerminalRuleCall_0_0() { return cDiscriminatorIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_2() { return cDbTableAssignment_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_2_0() { return cDbTableIDENTTerminalRuleCall_2_0; }

		//("->" dbColumns+=IDENT)+
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//dbColumns+=IDENT
		public Assignment getDbColumnsAssignment_3_1() { return cDbColumnsAssignment_3_1; }

		//IDENT
		public RuleCall getDbColumnsIDENTTerminalRuleCall_3_1_0() { return cDbColumnsIDENTTerminalRuleCall_3_1_0; }
	}

	public class ManyToManyAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ManyToManyAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPkColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPkColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cPkColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPkTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPkTableIDENTTerminalRuleCall_2_0 = (RuleCall)cPkTableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFkColumnAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFkColumnIDENTTerminalRuleCall_3_1_0 = (RuleCall)cFkColumnAssignment_3_1.eContents().get(0);
		
		//ManyToManyAssignement:
		//	pkColumn=IDENT "->" pkTable=IDENT ("->" fkColumn=IDENT)?;
		public ParserRule getRule() { return rule; }

		//pkColumn=IDENT "->" pkTable=IDENT ("->" fkColumn=IDENT)?
		public Group getGroup() { return cGroup; }

		//pkColumn=IDENT
		public Assignment getPkColumnAssignment_0() { return cPkColumnAssignment_0; }

		//IDENT
		public RuleCall getPkColumnIDENTTerminalRuleCall_0_0() { return cPkColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//pkTable=IDENT
		public Assignment getPkTableAssignment_2() { return cPkTableAssignment_2; }

		//IDENT
		public RuleCall getPkTableIDENTTerminalRuleCall_2_0() { return cPkTableIDENTTerminalRuleCall_2_0; }

		//("->" fkColumn=IDENT)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//fkColumn=IDENT
		public Assignment getFkColumnAssignment_3_1() { return cFkColumnAssignment_3_1; }

		//IDENT
		public RuleCall getFkColumnIDENTTerminalRuleCall_3_1_0() { return cFkColumnIDENTTerminalRuleCall_3_1_0; }
	}

	public class DebugLevelAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DebugLevelAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDebugAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDebugIDENTTerminalRuleCall_0_0 = (RuleCall)cDebugAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cScopeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cScopePropertyValueParserRuleCall_1_1_0 = (RuleCall)cScopeAssignment_1_1.eContents().get(0);
		
		//DebugLevelAssignement:
		//	debug=IDENT (WS+ scope=PropertyValue)?;
		public ParserRule getRule() { return rule; }

		//debug=IDENT (WS+ scope=PropertyValue)?
		public Group getGroup() { return cGroup; }

		//debug=IDENT
		public Assignment getDebugAssignment_0() { return cDebugAssignment_0; }

		//IDENT
		public RuleCall getDebugIDENTTerminalRuleCall_0_0() { return cDebugIDENTTerminalRuleCall_0_0; }

		//(WS+ scope=PropertyValue)?
		public Group getGroup_1() { return cGroup_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//scope=PropertyValue
		public Assignment getScopeAssignment_1_1() { return cScopeAssignment_1_1; }

		//PropertyValue
		public RuleCall getScopePropertyValueParserRuleCall_1_1_0() { return cScopePropertyValueParserRuleCall_1_1_0; }
	}

	public class ProcedurePojoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcedurePojoAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbProcedureAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbProcedureIDENTTerminalRuleCall_0_0 = (RuleCall)cDbProcedureAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPojoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPojoPojoTypeParserRuleCall_2_0 = (RuleCall)cPojoAssignment_2.eContents().get(0);
		
		//ProcedurePojoAssignement:
		//	dbProcedure=IDENT "->" pojo=PojoType;
		public ParserRule getRule() { return rule; }

		//dbProcedure=IDENT "->" pojo=PojoType
		public Group getGroup() { return cGroup; }

		//dbProcedure=IDENT
		public Assignment getDbProcedureAssignment_0() { return cDbProcedureAssignment_0; }

		//IDENT
		public RuleCall getDbProcedureIDENTTerminalRuleCall_0_0() { return cDbProcedureIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//pojo=PojoType
		public Assignment getPojoAssignment_2() { return cPojoAssignment_2; }

		//PojoType
		public RuleCall getPojoPojoTypeParserRuleCall_2_0() { return cPojoPojoTypeParserRuleCall_2_0; }
	}

	public class FunctionPojoAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunctionPojoAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbFunctionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbFunctionIDENTTerminalRuleCall_0_0 = (RuleCall)cDbFunctionAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPojoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPojoPojoTypeParserRuleCall_2_0 = (RuleCall)cPojoAssignment_2.eContents().get(0);
		
		//FunctionPojoAssignement:
		//	dbFunction=IDENT "->" pojo=PojoType;
		public ParserRule getRule() { return rule; }

		//dbFunction=IDENT "->" pojo=PojoType
		public Group getGroup() { return cGroup; }

		//dbFunction=IDENT
		public Assignment getDbFunctionAssignment_0() { return cDbFunctionAssignment_0; }

		//IDENT
		public RuleCall getDbFunctionIDENTTerminalRuleCall_0_0() { return cDbFunctionIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//pojo=PojoType
		public Assignment getPojoAssignment_2() { return cPojoAssignment_2; }

		//PojoType
		public RuleCall getPojoPojoTypeParserRuleCall_2_0() { return cPojoPojoTypeParserRuleCall_2_0; }
	}

	public class ImplementsAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplementsAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cToImplementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cToImplementJvmTypeCrossReference_0_0 = (CrossReference)cToImplementAssignment_0.eContents().get(0);
		private final RuleCall cToImplementJvmTypeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cToImplementJvmTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_1_2_1_0 = (RuleCall)cDbTablesAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_2_2_1_0 = (RuleCall)cDbNotTablesAssignment_2_2_1.eContents().get(0);
		
		//ImplementsAssignement:
		//	toImplement=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//	dbNotTables+=IDENT)+)?;
		public ParserRule getRule() { return rule; }

		//toImplement=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup() { return cGroup; }

		//toImplement=[jvmTypes::JvmType|QualifiedName]
		public Assignment getToImplementAssignment_0() { return cToImplementAssignment_0; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getToImplementJvmTypeCrossReference_0_0() { return cToImplementJvmTypeCrossReference_0_0; }

		//QualifiedName
		public RuleCall getToImplementJvmTypeQualifiedNameParserRuleCall_0_0_1() { return cToImplementJvmTypeQualifiedNameParserRuleCall_0_0_1; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_1() { return cGroup_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_1() { return cPLUSTerminalRuleCall_1_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_2_0() { return cWSTerminalRuleCall_1_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_1_2_1() { return cDbTablesAssignment_1_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_1_2_1_0() { return cDbTablesIDENTTerminalRuleCall_1_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_2() { return cGroup_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_0() { return cWSTerminalRuleCall_2_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_2_1() { return cMINUSTerminalRuleCall_2_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_2_2() { return cGroup_2_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_2_0() { return cWSTerminalRuleCall_2_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_2_2_1() { return cDbNotTablesAssignment_2_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_2_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_2_2_1_0; }
	}

	public class ExtendsAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtendsAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cToExtendsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cToExtendsJvmTypeCrossReference_0_0 = (CrossReference)cToExtendsAssignment_0.eContents().get(0);
		private final RuleCall cToExtendsJvmTypeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cToExtendsJvmTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_1_2_1_0 = (RuleCall)cDbTablesAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_2_2_1_0 = (RuleCall)cDbNotTablesAssignment_2_2_1.eContents().get(0);
		
		//ExtendsAssignement:
		//	toExtends=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?;
		public ParserRule getRule() { return rule; }

		//toExtends=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup() { return cGroup; }

		//toExtends=[jvmTypes::JvmType|QualifiedName]
		public Assignment getToExtendsAssignment_0() { return cToExtendsAssignment_0; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getToExtendsJvmTypeCrossReference_0_0() { return cToExtendsJvmTypeCrossReference_0_0; }

		//QualifiedName
		public RuleCall getToExtendsJvmTypeQualifiedNameParserRuleCall_0_0_1() { return cToExtendsJvmTypeQualifiedNameParserRuleCall_0_0_1; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_1() { return cGroup_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_1() { return cPLUSTerminalRuleCall_1_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_2_0() { return cWSTerminalRuleCall_1_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_1_2_1() { return cDbTablesAssignment_1_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_1_2_1_0() { return cDbTablesIDENTTerminalRuleCall_1_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_2() { return cGroup_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_0() { return cWSTerminalRuleCall_2_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_2_1() { return cMINUSTerminalRuleCall_2_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_2_2() { return cGroup_2_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_2_0() { return cWSTerminalRuleCall_2_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_2_2_1() { return cDbNotTablesAssignment_2_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_2_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_2_2_1_0; }
	}

	public class ImplementsAssignementGenericsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplementsAssignementGenerics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cToImplementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cToImplementJvmTypeCrossReference_0_0 = (CrossReference)cToImplementAssignment_0.eContents().get(0);
		private final RuleCall cToImplementJvmTypeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cToImplementJvmTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_1_2_1_0 = (RuleCall)cDbTablesAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_2_2_1_0 = (RuleCall)cDbNotTablesAssignment_2_2_1.eContents().get(0);
		
		//ImplementsAssignementGenerics:
		//	toImplement=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//	dbNotTables+=IDENT)+)?;
		public ParserRule getRule() { return rule; }

		//toImplement=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup() { return cGroup; }

		//toImplement=[jvmTypes::JvmType|QualifiedName]
		public Assignment getToImplementAssignment_0() { return cToImplementAssignment_0; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getToImplementJvmTypeCrossReference_0_0() { return cToImplementJvmTypeCrossReference_0_0; }

		//QualifiedName
		public RuleCall getToImplementJvmTypeQualifiedNameParserRuleCall_0_0_1() { return cToImplementJvmTypeQualifiedNameParserRuleCall_0_0_1; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_1() { return cGroup_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_1() { return cPLUSTerminalRuleCall_1_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_2_0() { return cWSTerminalRuleCall_1_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_1_2_1() { return cDbTablesAssignment_1_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_1_2_1_0() { return cDbTablesIDENTTerminalRuleCall_1_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_2() { return cGroup_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_0() { return cWSTerminalRuleCall_2_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_2_1() { return cMINUSTerminalRuleCall_2_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_2_2() { return cGroup_2_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_2_0() { return cWSTerminalRuleCall_2_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_2_2_1() { return cDbNotTablesAssignment_2_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_2_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_2_2_1_0; }
	}

	public class ExtendsAssignementGenericsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtendsAssignementGenerics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cToExtendsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cToExtendsJvmTypeCrossReference_0_0 = (CrossReference)cToExtendsAssignment_0.eContents().get(0);
		private final RuleCall cToExtendsJvmTypeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cToExtendsJvmTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_1_2_1_0 = (RuleCall)cDbTablesAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_2_2_1_0 = (RuleCall)cDbNotTablesAssignment_2_2_1.eContents().get(0);
		
		//ExtendsAssignementGenerics:
		//	toExtends=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?;
		public ParserRule getRule() { return rule; }

		//toExtends=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup() { return cGroup; }

		//toExtends=[jvmTypes::JvmType|QualifiedName]
		public Assignment getToExtendsAssignment_0() { return cToExtendsAssignment_0; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getToExtendsJvmTypeCrossReference_0_0() { return cToExtendsJvmTypeCrossReference_0_0; }

		//QualifiedName
		public RuleCall getToExtendsJvmTypeQualifiedNameParserRuleCall_0_0_1() { return cToExtendsJvmTypeQualifiedNameParserRuleCall_0_0_1; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_1() { return cGroup_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_1() { return cPLUSTerminalRuleCall_1_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_2_0() { return cWSTerminalRuleCall_1_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_1_2_1() { return cDbTablesAssignment_1_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_1_2_1_0() { return cDbTablesIDENTTerminalRuleCall_1_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_2() { return cGroup_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_0() { return cWSTerminalRuleCall_2_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_2_1() { return cMINUSTerminalRuleCall_2_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_2_2() { return cGroup_2_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_2_0() { return cWSTerminalRuleCall_2_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_2_2_1() { return cDbNotTablesAssignment_2_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_2_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_2_2_1_0; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cNameResolvePojoOnKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cNameResolvePojoOffKeyword_0_1_0 = (Keyword)cNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cAlternatives_0.eContents().get(2);
		private final Assignment cNameAssignment_0_2_0 = (Assignment)cGroup_0_2.eContents().get(0);
		private final Keyword cNameDatabaseKeyword_0_2_0_0 = (Keyword)cNameAssignment_0_2_0.eContents().get(0);
		private final Assignment cDatabaseAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cDatabaseDatabasePropertyParserRuleCall_0_2_1_0 = (RuleCall)cDatabaseAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cAlternatives_0.eContents().get(3);
		private final Assignment cNameAssignment_0_3_0 = (Assignment)cGroup_0_3.eContents().get(0);
		private final Keyword cNamePojogenKeyword_0_3_0_0 = (Keyword)cNameAssignment_0_3_0.eContents().get(0);
		private final Assignment cPojogenAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cPojogenPojogenPropertyParserRuleCall_0_3_1_0 = (RuleCall)cPojogenAssignment_0_3_1.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cAlternatives_0.eContents().get(4);
		private final Assignment cNameAssignment_0_4_0 = (Assignment)cGroup_0_4.eContents().get(0);
		private final Keyword cNameMetagenKeyword_0_4_0_0 = (Keyword)cNameAssignment_0_4_0.eContents().get(0);
		private final Assignment cMetagenAssignment_0_4_1 = (Assignment)cGroup_0_4.eContents().get(1);
		private final RuleCall cMetagenMetagenPropertyParserRuleCall_0_4_1_0 = (RuleCall)cMetagenAssignment_0_4_1.eContents().get(0);
		private final Group cGroup_0_5 = (Group)cAlternatives_0.eContents().get(5);
		private final Assignment cNameAssignment_0_5_0 = (Assignment)cGroup_0_5.eContents().get(0);
		private final Keyword cNameDaogenKeyword_0_5_0_0 = (Keyword)cNameAssignment_0_5_0.eContents().get(0);
		private final Assignment cDaogenAssignment_0_5_1 = (Assignment)cGroup_0_5.eContents().get(1);
		private final RuleCall cDaogenDaogenPropertyParserRuleCall_0_5_1_0 = (RuleCall)cDaogenAssignment_0_5_1.eContents().get(0);
		private final Group cGroup_0_6 = (Group)cAlternatives_0.eContents().get(6);
		private final Assignment cNameAssignment_0_6_0 = (Assignment)cGroup_0_6.eContents().get(0);
		private final Keyword cNameReplaceAllRegexKeyword_0_6_0_0 = (Keyword)cNameAssignment_0_6_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_6_1 = (RuleCall)cGroup_0_6.eContents().get(1);
		private final Assignment cReplaceIdAssignment_0_6_2 = (Assignment)cGroup_0_6.eContents().get(2);
		private final RuleCall cReplaceIdIDENTTerminalRuleCall_0_6_2_0 = (RuleCall)cReplaceIdAssignment_0_6_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_6_3 = (RuleCall)cGroup_0_6.eContents().get(3);
		private final Assignment cRegexAssignment_0_6_4 = (Assignment)cGroup_0_6.eContents().get(4);
		private final RuleCall cRegexPropertyValueParserRuleCall_0_6_4_0 = (RuleCall)cRegexAssignment_0_6_4.eContents().get(0);
		private final Group cGroup_0_7 = (Group)cAlternatives_0.eContents().get(7);
		private final Assignment cNameAssignment_0_7_0 = (Assignment)cGroup_0_7.eContents().get(0);
		private final Keyword cNameReplaceAllReplacementKeyword_0_7_0_0 = (Keyword)cNameAssignment_0_7_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_7_1 = (RuleCall)cGroup_0_7.eContents().get(1);
		private final Assignment cReplaceIdAssignment_0_7_2 = (Assignment)cGroup_0_7.eContents().get(2);
		private final RuleCall cReplaceIdIDENTTerminalRuleCall_0_7_2_0 = (RuleCall)cReplaceIdAssignment_0_7_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_7_3 = (RuleCall)cGroup_0_7.eContents().get(3);
		private final Assignment cReplacementAssignment_0_7_4 = (Assignment)cGroup_0_7.eContents().get(4);
		private final RuleCall cReplacementPropertyValueParserRuleCall_0_7_4_0 = (RuleCall)cReplacementAssignment_0_7_4.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Property:
		//	(name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-" database=DatabaseProperty | name="pojogen-"
		//	pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty | name="daogen-" daogen=DaogenProperty |
		//	name="replace-all-regex" WS+ replaceId=IDENT WS+ regex=PropertyValue | name="replace-all-replacement" WS+
		//	replaceId=IDENT WS+ replacement=PropertyValue) SEMICOLON;
		public ParserRule getRule() { return rule; }

		//(name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-" database=DatabaseProperty | name="pojogen-"
		//pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty | name="daogen-" daogen=DaogenProperty |
		//name="replace-all-regex" WS+ replaceId=IDENT WS+ regex=PropertyValue | name="replace-all-replacement" WS+
		//replaceId=IDENT WS+ replacement=PropertyValue) SEMICOLON
		public Group getGroup() { return cGroup; }

		//name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-" database=DatabaseProperty | name="pojogen-"
		//pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty | name="daogen-" daogen=DaogenProperty |
		//name="replace-all-regex" WS+ replaceId=IDENT WS+ regex=PropertyValue | name="replace-all-replacement" WS+
		//replaceId=IDENT WS+ replacement=PropertyValue
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//name="resolve-pojo-on"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"resolve-pojo-on"
		public Keyword getNameResolvePojoOnKeyword_0_0_0() { return cNameResolvePojoOnKeyword_0_0_0; }

		//name="resolve-pojo-off"
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//"resolve-pojo-off"
		public Keyword getNameResolvePojoOffKeyword_0_1_0() { return cNameResolvePojoOffKeyword_0_1_0; }

		//name="database-" database=DatabaseProperty
		public Group getGroup_0_2() { return cGroup_0_2; }

		//name="database-"
		public Assignment getNameAssignment_0_2_0() { return cNameAssignment_0_2_0; }

		//"database-"
		public Keyword getNameDatabaseKeyword_0_2_0_0() { return cNameDatabaseKeyword_0_2_0_0; }

		//database=DatabaseProperty
		public Assignment getDatabaseAssignment_0_2_1() { return cDatabaseAssignment_0_2_1; }

		//DatabaseProperty
		public RuleCall getDatabaseDatabasePropertyParserRuleCall_0_2_1_0() { return cDatabaseDatabasePropertyParserRuleCall_0_2_1_0; }

		//name="pojogen-" pojogen=PojogenProperty
		public Group getGroup_0_3() { return cGroup_0_3; }

		//name="pojogen-"
		public Assignment getNameAssignment_0_3_0() { return cNameAssignment_0_3_0; }

		//"pojogen-"
		public Keyword getNamePojogenKeyword_0_3_0_0() { return cNamePojogenKeyword_0_3_0_0; }

		//pojogen=PojogenProperty
		public Assignment getPojogenAssignment_0_3_1() { return cPojogenAssignment_0_3_1; }

		//PojogenProperty
		public RuleCall getPojogenPojogenPropertyParserRuleCall_0_3_1_0() { return cPojogenPojogenPropertyParserRuleCall_0_3_1_0; }

		//name="metagen-" metagen=MetagenProperty
		public Group getGroup_0_4() { return cGroup_0_4; }

		//name="metagen-"
		public Assignment getNameAssignment_0_4_0() { return cNameAssignment_0_4_0; }

		//"metagen-"
		public Keyword getNameMetagenKeyword_0_4_0_0() { return cNameMetagenKeyword_0_4_0_0; }

		//metagen=MetagenProperty
		public Assignment getMetagenAssignment_0_4_1() { return cMetagenAssignment_0_4_1; }

		//MetagenProperty
		public RuleCall getMetagenMetagenPropertyParserRuleCall_0_4_1_0() { return cMetagenMetagenPropertyParserRuleCall_0_4_1_0; }

		//name="daogen-" daogen=DaogenProperty
		public Group getGroup_0_5() { return cGroup_0_5; }

		//name="daogen-"
		public Assignment getNameAssignment_0_5_0() { return cNameAssignment_0_5_0; }

		//"daogen-"
		public Keyword getNameDaogenKeyword_0_5_0_0() { return cNameDaogenKeyword_0_5_0_0; }

		//daogen=DaogenProperty
		public Assignment getDaogenAssignment_0_5_1() { return cDaogenAssignment_0_5_1; }

		//DaogenProperty
		public RuleCall getDaogenDaogenPropertyParserRuleCall_0_5_1_0() { return cDaogenDaogenPropertyParserRuleCall_0_5_1_0; }

		//name="replace-all-regex" WS+ replaceId=IDENT WS+ regex=PropertyValue
		public Group getGroup_0_6() { return cGroup_0_6; }

		//name="replace-all-regex"
		public Assignment getNameAssignment_0_6_0() { return cNameAssignment_0_6_0; }

		//"replace-all-regex"
		public Keyword getNameReplaceAllRegexKeyword_0_6_0_0() { return cNameReplaceAllRegexKeyword_0_6_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_6_1() { return cWSTerminalRuleCall_0_6_1; }

		//replaceId=IDENT
		public Assignment getReplaceIdAssignment_0_6_2() { return cReplaceIdAssignment_0_6_2; }

		//IDENT
		public RuleCall getReplaceIdIDENTTerminalRuleCall_0_6_2_0() { return cReplaceIdIDENTTerminalRuleCall_0_6_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_6_3() { return cWSTerminalRuleCall_0_6_3; }

		//regex=PropertyValue
		public Assignment getRegexAssignment_0_6_4() { return cRegexAssignment_0_6_4; }

		//PropertyValue
		public RuleCall getRegexPropertyValueParserRuleCall_0_6_4_0() { return cRegexPropertyValueParserRuleCall_0_6_4_0; }

		//name="replace-all-replacement" WS+ replaceId=IDENT WS+ replacement=PropertyValue
		public Group getGroup_0_7() { return cGroup_0_7; }

		//name="replace-all-replacement"
		public Assignment getNameAssignment_0_7_0() { return cNameAssignment_0_7_0; }

		//"replace-all-replacement"
		public Keyword getNameReplaceAllReplacementKeyword_0_7_0_0() { return cNameReplaceAllReplacementKeyword_0_7_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_7_1() { return cWSTerminalRuleCall_0_7_1; }

		//replaceId=IDENT
		public Assignment getReplaceIdAssignment_0_7_2() { return cReplaceIdAssignment_0_7_2; }

		//IDENT
		public RuleCall getReplaceIdIDENTTerminalRuleCall_0_7_2_0() { return cReplaceIdIDENTTerminalRuleCall_0_7_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_7_3() { return cWSTerminalRuleCall_0_7_3; }

		//replacement=PropertyValue
		public Assignment getReplacementAssignment_0_7_4() { return cReplacementAssignment_0_7_4; }

		//PropertyValue
		public RuleCall getReplacementPropertyValueParserRuleCall_0_7_4_0() { return cReplacementPropertyValueParserRuleCall_0_7_4_0; }

		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_1() { return cSEMICOLONTerminalRuleCall_1; }
	}

	public class DatabasePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cNameIsOnlineKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cNameIsOfflineKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameHasUrlKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cDbUrlAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDbUrlPropertyValueParserRuleCall_2_2_0 = (RuleCall)cDbUrlAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameLoginUsernameKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cDbUsernameAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDbUsernamePropertyValueParserRuleCall_3_2_0 = (RuleCall)cDbUsernameAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameLoginPasswordKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cDbPasswordAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDbPasswordPropertyValueParserRuleCall_4_2_0 = (RuleCall)cDbPasswordAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameInCatalogKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cDbCatalogAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDbCatalogDatabaseCatalogAssignementParserRuleCall_5_2_0 = (RuleCall)cDbCatalogAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cNameAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cNameActiveSchemaKeyword_6_0_0 = (Keyword)cNameAssignment_6_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cDbSchemaAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDbSchemaDatabaseSchemaAssignementParserRuleCall_6_2_0 = (RuleCall)cDbSchemaAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameJdbcDriverKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Alternatives cAlternatives_7_2 = (Alternatives)cGroup_7.eContents().get(2);
		private final Group cGroup_7_2_0 = (Group)cAlternatives_7_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_7_2_0_0 = (RuleCall)cGroup_7_2_0.eContents().get(0);
		private final Assignment cDbDriverxAssignment_7_2_0_1 = (Assignment)cGroup_7_2_0.eContents().get(1);
		private final CrossReference cDbDriverxJvmTypeCrossReference_7_2_0_1_0 = (CrossReference)cDbDriverxAssignment_7_2_0_1.eContents().get(0);
		private final RuleCall cDbDriverxJvmTypeQualifiedNameParserRuleCall_7_2_0_1_0_1 = (RuleCall)cDbDriverxJvmTypeCrossReference_7_2_0_1_0.eContents().get(1);
		private final Assignment cDbDriverAssignment_7_2_1 = (Assignment)cAlternatives_7_2.eContents().get(1);
		private final RuleCall cDbDriverPropertyValueParserRuleCall_7_2_1_0 = (RuleCall)cDbDriverAssignment_7_2_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameDdlCreateKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Assignment cDbExecuteBeforeAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cDbExecuteBeforePropertyValueParserRuleCall_8_2_0 = (RuleCall)cDbExecuteBeforeAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cNameAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cNameDdlDropKeyword_9_0_0 = (Keyword)cNameAssignment_9_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		private final Assignment cDbExecuteAfterAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDbExecuteAfterPropertyValueParserRuleCall_9_2_0 = (RuleCall)cDbExecuteAfterAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cNameAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cNameIndexTypesKeyword_10_0_0 = (Keyword)cNameAssignment_10_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final Assignment cDbIndexTypesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cDbIndexTypesPropertyValueParserRuleCall_10_2_0 = (RuleCall)cDbIndexTypesAssignment_10_2.eContents().get(0);
		private final Assignment cNameAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cNameSkipIndexesKeyword_11_0 = (Keyword)cNameAssignment_11.eContents().get(0);
		private final Assignment cNameAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cNameSkipFunctionsProceduresKeyword_12_0 = (Keyword)cNameAssignment_12.eContents().get(0);
		private final Assignment cNameAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final Keyword cNameSkipCheckConstraintsKeyword_13_0 = (Keyword)cNameAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cNameAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cNameIsOfTypeKeyword_14_0_0 = (Keyword)cNameAssignment_14_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_14_1 = (RuleCall)cGroup_14.eContents().get(1);
		private final Assignment cDbTypeAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cDbTypeDatabaseTypeAssignementParserRuleCall_14_2_0 = (RuleCall)cDbTypeAssignment_14_2.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cNameAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cNameShowDatabaseInfoKeyword_15_0_0 = (Keyword)cNameAssignment_15_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_15_1 = (RuleCall)cGroup_15.eContents().get(1);
		private final Assignment cDbMetaInfoAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_2_0 = (RuleCall)cDbMetaInfoAssignment_15_2.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cNameAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cNameShowDriverInfoKeyword_16_0_0 = (Keyword)cNameAssignment_16_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_16_1 = (RuleCall)cGroup_16.eContents().get(1);
		private final Assignment cDbDriverInfoAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_2_0 = (RuleCall)cDbDriverInfoAssignment_16_2.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Assignment cNameAssignment_17_0 = (Assignment)cGroup_17.eContents().get(0);
		private final Keyword cNameShowDriverOutputKeyword_17_0_0 = (Keyword)cNameAssignment_17_0.eContents().get(0);
		private final Group cGroup_17_1 = (Group)cGroup_17.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_17_1_0 = (RuleCall)cGroup_17_1.eContents().get(0);
		private final Assignment cDbMethodsCallsAssignment_17_1_1 = (Assignment)cGroup_17_1.eContents().get(1);
		private final RuleCall cDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_1_0 = (RuleCall)cDbMethodsCallsAssignment_17_1_1.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cNameAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_18_0_0 = (Keyword)cNameAssignment_18_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_18_1 = (RuleCall)cGroup_18.eContents().get(1);
		private final Assignment cDebugAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_18_2_0 = (RuleCall)cDebugAssignment_18_2.eContents().get(0);
		private final Assignment cNameAssignment_19 = (Assignment)cAlternatives.eContents().get(19);
		private final Keyword cNameTakeCommentsKeyword_19_0 = (Keyword)cNameAssignment_19.eContents().get(0);
		private final Assignment cNameAssignment_20 = (Assignment)cAlternatives.eContents().get(20);
		private final Keyword cNameLowercaseNamesKeyword_20_0 = (Keyword)cNameAssignment_20.eContents().get(0);
		private final Assignment cNameAssignment_21 = (Assignment)cAlternatives.eContents().get(21);
		private final Keyword cNameUppercaseNamesKeyword_21_0 = (Keyword)cNameAssignment_21.eContents().get(0);
		
		//DatabaseProperty:
		//	name="is-online" | name="is-offline" | name="has-url" WS+ dbUrl=PropertyValue | name="login-username" WS+
		//	dbUsername=PropertyValue | name="login-password" WS+ dbPassword=PropertyValue | name="in-catalog" WS+
		//	dbCatalog=DatabaseCatalogAssignement | name="active-schema" WS+ dbSchema=DatabaseSchemaAssignement |
		//	name="jdbc-driver" WS+ (COLON dbDriverx=[jvmTypes::JvmType|QualifiedName] | dbDriver=PropertyValue) |
		//	name="ddl-create" WS+ dbExecuteBefore=PropertyValue | name="ddl-drop" WS+ dbExecuteAfter=PropertyValue |
		//	name="index-types" WS+ dbIndexTypes=PropertyValue | name="skip-indexes" | name="skip-functions-procedures" |
		//	name="skip-check-constraints" | name="is-of-type" WS+ dbType=DatabaseTypeAssignement | name="show-database-info" WS+
		//	dbMetaInfo=DatabaseMetaInfoAssignement | name="show-driver-info" WS+ dbDriverInfo=DriverMetaInfoAssignement |
		//	name="show-driver-output" (WS+ dbMethodsCalls+=DriverMethodOutputAssignement)+ | name="debug-level" WS+
		//	debug=DebugLevelAssignement | name="take-comments" | name="lowercase-names" | name="uppercase-names";
		public ParserRule getRule() { return rule; }

		//name="is-online" | name="is-offline" | name="has-url" WS+ dbUrl=PropertyValue | name="login-username" WS+
		//dbUsername=PropertyValue | name="login-password" WS+ dbPassword=PropertyValue | name="in-catalog" WS+
		//dbCatalog=DatabaseCatalogAssignement | name="active-schema" WS+ dbSchema=DatabaseSchemaAssignement | name="jdbc-driver"
		//WS+ (COLON dbDriverx=[jvmTypes::JvmType|QualifiedName] | dbDriver=PropertyValue) | name="ddl-create" WS+
		//dbExecuteBefore=PropertyValue | name="ddl-drop" WS+ dbExecuteAfter=PropertyValue | name="index-types" WS+
		//dbIndexTypes=PropertyValue | name="skip-indexes" | name="skip-functions-procedures" | name="skip-check-constraints" |
		//name="is-of-type" WS+ dbType=DatabaseTypeAssignement | name="show-database-info" WS+
		//dbMetaInfo=DatabaseMetaInfoAssignement | name="show-driver-info" WS+ dbDriverInfo=DriverMetaInfoAssignement |
		//name="show-driver-output" (WS+ dbMethodsCalls+=DriverMethodOutputAssignement)+ | name="debug-level" WS+
		//debug=DebugLevelAssignement | name="take-comments" | name="lowercase-names" | name="uppercase-names"
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="is-online"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"is-online"
		public Keyword getNameIsOnlineKeyword_0_0() { return cNameIsOnlineKeyword_0_0; }

		//name="is-offline"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"is-offline"
		public Keyword getNameIsOfflineKeyword_1_0() { return cNameIsOfflineKeyword_1_0; }

		//name="has-url" WS+ dbUrl=PropertyValue
		public Group getGroup_2() { return cGroup_2; }

		//name="has-url"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"has-url"
		public Keyword getNameHasUrlKeyword_2_0_0() { return cNameHasUrlKeyword_2_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_1() { return cWSTerminalRuleCall_2_1; }

		//dbUrl=PropertyValue
		public Assignment getDbUrlAssignment_2_2() { return cDbUrlAssignment_2_2; }

		//PropertyValue
		public RuleCall getDbUrlPropertyValueParserRuleCall_2_2_0() { return cDbUrlPropertyValueParserRuleCall_2_2_0; }

		//name="login-username" WS+ dbUsername=PropertyValue
		public Group getGroup_3() { return cGroup_3; }

		//name="login-username"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"login-username"
		public Keyword getNameLoginUsernameKeyword_3_0_0() { return cNameLoginUsernameKeyword_3_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_1() { return cWSTerminalRuleCall_3_1; }

		//dbUsername=PropertyValue
		public Assignment getDbUsernameAssignment_3_2() { return cDbUsernameAssignment_3_2; }

		//PropertyValue
		public RuleCall getDbUsernamePropertyValueParserRuleCall_3_2_0() { return cDbUsernamePropertyValueParserRuleCall_3_2_0; }

		//name="login-password" WS+ dbPassword=PropertyValue
		public Group getGroup_4() { return cGroup_4; }

		//name="login-password"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"login-password"
		public Keyword getNameLoginPasswordKeyword_4_0_0() { return cNameLoginPasswordKeyword_4_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//dbPassword=PropertyValue
		public Assignment getDbPasswordAssignment_4_2() { return cDbPasswordAssignment_4_2; }

		//PropertyValue
		public RuleCall getDbPasswordPropertyValueParserRuleCall_4_2_0() { return cDbPasswordPropertyValueParserRuleCall_4_2_0; }

		//name="in-catalog" WS+ dbCatalog=DatabaseCatalogAssignement
		public Group getGroup_5() { return cGroup_5; }

		//name="in-catalog"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"in-catalog"
		public Keyword getNameInCatalogKeyword_5_0_0() { return cNameInCatalogKeyword_5_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_5_1() { return cWSTerminalRuleCall_5_1; }

		//dbCatalog=DatabaseCatalogAssignement
		public Assignment getDbCatalogAssignment_5_2() { return cDbCatalogAssignment_5_2; }

		//DatabaseCatalogAssignement
		public RuleCall getDbCatalogDatabaseCatalogAssignementParserRuleCall_5_2_0() { return cDbCatalogDatabaseCatalogAssignementParserRuleCall_5_2_0; }

		//name="active-schema" WS+ dbSchema=DatabaseSchemaAssignement
		public Group getGroup_6() { return cGroup_6; }

		//name="active-schema"
		public Assignment getNameAssignment_6_0() { return cNameAssignment_6_0; }

		//"active-schema"
		public Keyword getNameActiveSchemaKeyword_6_0_0() { return cNameActiveSchemaKeyword_6_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_6_1() { return cWSTerminalRuleCall_6_1; }

		//dbSchema=DatabaseSchemaAssignement
		public Assignment getDbSchemaAssignment_6_2() { return cDbSchemaAssignment_6_2; }

		//DatabaseSchemaAssignement
		public RuleCall getDbSchemaDatabaseSchemaAssignementParserRuleCall_6_2_0() { return cDbSchemaDatabaseSchemaAssignementParserRuleCall_6_2_0; }

		//name="jdbc-driver" WS+ (COLON dbDriverx=[jvmTypes::JvmType|QualifiedName] | dbDriver=PropertyValue)
		public Group getGroup_7() { return cGroup_7; }

		//name="jdbc-driver"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"jdbc-driver"
		public Keyword getNameJdbcDriverKeyword_7_0_0() { return cNameJdbcDriverKeyword_7_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_7_1() { return cWSTerminalRuleCall_7_1; }

		//=> COLON dbDriverx=[jvmTypes::JvmType|QualifiedName] | dbDriver=PropertyValue
		public Alternatives getAlternatives_7_2() { return cAlternatives_7_2; }

		//=> COLON dbDriverx=[jvmTypes::JvmType|QualifiedName]
		public Group getGroup_7_2_0() { return cGroup_7_2_0; }

		//=> COLON
		public RuleCall getCOLONTerminalRuleCall_7_2_0_0() { return cCOLONTerminalRuleCall_7_2_0_0; }

		//dbDriverx=[jvmTypes::JvmType|QualifiedName]
		public Assignment getDbDriverxAssignment_7_2_0_1() { return cDbDriverxAssignment_7_2_0_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getDbDriverxJvmTypeCrossReference_7_2_0_1_0() { return cDbDriverxJvmTypeCrossReference_7_2_0_1_0; }

		//QualifiedName
		public RuleCall getDbDriverxJvmTypeQualifiedNameParserRuleCall_7_2_0_1_0_1() { return cDbDriverxJvmTypeQualifiedNameParserRuleCall_7_2_0_1_0_1; }

		//dbDriver=PropertyValue
		public Assignment getDbDriverAssignment_7_2_1() { return cDbDriverAssignment_7_2_1; }

		//PropertyValue
		public RuleCall getDbDriverPropertyValueParserRuleCall_7_2_1_0() { return cDbDriverPropertyValueParserRuleCall_7_2_1_0; }

		//name="ddl-create" WS+ dbExecuteBefore=PropertyValue
		public Group getGroup_8() { return cGroup_8; }

		//name="ddl-create"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"ddl-create"
		public Keyword getNameDdlCreateKeyword_8_0_0() { return cNameDdlCreateKeyword_8_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_1() { return cWSTerminalRuleCall_8_1; }

		//dbExecuteBefore=PropertyValue
		public Assignment getDbExecuteBeforeAssignment_8_2() { return cDbExecuteBeforeAssignment_8_2; }

		//PropertyValue
		public RuleCall getDbExecuteBeforePropertyValueParserRuleCall_8_2_0() { return cDbExecuteBeforePropertyValueParserRuleCall_8_2_0; }

		//name="ddl-drop" WS+ dbExecuteAfter=PropertyValue
		public Group getGroup_9() { return cGroup_9; }

		//name="ddl-drop"
		public Assignment getNameAssignment_9_0() { return cNameAssignment_9_0; }

		//"ddl-drop"
		public Keyword getNameDdlDropKeyword_9_0_0() { return cNameDdlDropKeyword_9_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_9_1() { return cWSTerminalRuleCall_9_1; }

		//dbExecuteAfter=PropertyValue
		public Assignment getDbExecuteAfterAssignment_9_2() { return cDbExecuteAfterAssignment_9_2; }

		//PropertyValue
		public RuleCall getDbExecuteAfterPropertyValueParserRuleCall_9_2_0() { return cDbExecuteAfterPropertyValueParserRuleCall_9_2_0; }

		//name="index-types" WS+ dbIndexTypes=PropertyValue
		public Group getGroup_10() { return cGroup_10; }

		//name="index-types"
		public Assignment getNameAssignment_10_0() { return cNameAssignment_10_0; }

		//"index-types"
		public Keyword getNameIndexTypesKeyword_10_0_0() { return cNameIndexTypesKeyword_10_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_10_1() { return cWSTerminalRuleCall_10_1; }

		//dbIndexTypes=PropertyValue
		public Assignment getDbIndexTypesAssignment_10_2() { return cDbIndexTypesAssignment_10_2; }

		//PropertyValue
		public RuleCall getDbIndexTypesPropertyValueParserRuleCall_10_2_0() { return cDbIndexTypesPropertyValueParserRuleCall_10_2_0; }

		//name="skip-indexes"
		public Assignment getNameAssignment_11() { return cNameAssignment_11; }

		//"skip-indexes"
		public Keyword getNameSkipIndexesKeyword_11_0() { return cNameSkipIndexesKeyword_11_0; }

		//name="skip-functions-procedures"
		public Assignment getNameAssignment_12() { return cNameAssignment_12; }

		//"skip-functions-procedures"
		public Keyword getNameSkipFunctionsProceduresKeyword_12_0() { return cNameSkipFunctionsProceduresKeyword_12_0; }

		//name="skip-check-constraints"
		public Assignment getNameAssignment_13() { return cNameAssignment_13; }

		//"skip-check-constraints"
		public Keyword getNameSkipCheckConstraintsKeyword_13_0() { return cNameSkipCheckConstraintsKeyword_13_0; }

		//name="is-of-type" WS+ dbType=DatabaseTypeAssignement
		public Group getGroup_14() { return cGroup_14; }

		//name="is-of-type"
		public Assignment getNameAssignment_14_0() { return cNameAssignment_14_0; }

		//"is-of-type"
		public Keyword getNameIsOfTypeKeyword_14_0_0() { return cNameIsOfTypeKeyword_14_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_14_1() { return cWSTerminalRuleCall_14_1; }

		//dbType=DatabaseTypeAssignement
		public Assignment getDbTypeAssignment_14_2() { return cDbTypeAssignment_14_2; }

		//DatabaseTypeAssignement
		public RuleCall getDbTypeDatabaseTypeAssignementParserRuleCall_14_2_0() { return cDbTypeDatabaseTypeAssignementParserRuleCall_14_2_0; }

		//name="show-database-info" WS+ dbMetaInfo=DatabaseMetaInfoAssignement
		public Group getGroup_15() { return cGroup_15; }

		//name="show-database-info"
		public Assignment getNameAssignment_15_0() { return cNameAssignment_15_0; }

		//"show-database-info"
		public Keyword getNameShowDatabaseInfoKeyword_15_0_0() { return cNameShowDatabaseInfoKeyword_15_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_15_1() { return cWSTerminalRuleCall_15_1; }

		//dbMetaInfo=DatabaseMetaInfoAssignement
		public Assignment getDbMetaInfoAssignment_15_2() { return cDbMetaInfoAssignment_15_2; }

		//DatabaseMetaInfoAssignement
		public RuleCall getDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_2_0() { return cDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_2_0; }

		//name="show-driver-info" WS+ dbDriverInfo=DriverMetaInfoAssignement
		public Group getGroup_16() { return cGroup_16; }

		//name="show-driver-info"
		public Assignment getNameAssignment_16_0() { return cNameAssignment_16_0; }

		//"show-driver-info"
		public Keyword getNameShowDriverInfoKeyword_16_0_0() { return cNameShowDriverInfoKeyword_16_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_16_1() { return cWSTerminalRuleCall_16_1; }

		//dbDriverInfo=DriverMetaInfoAssignement
		public Assignment getDbDriverInfoAssignment_16_2() { return cDbDriverInfoAssignment_16_2; }

		//DriverMetaInfoAssignement
		public RuleCall getDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_2_0() { return cDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_2_0; }

		//name="show-driver-output" (WS+ dbMethodsCalls+=DriverMethodOutputAssignement)+
		public Group getGroup_17() { return cGroup_17; }

		//name="show-driver-output"
		public Assignment getNameAssignment_17_0() { return cNameAssignment_17_0; }

		//"show-driver-output"
		public Keyword getNameShowDriverOutputKeyword_17_0_0() { return cNameShowDriverOutputKeyword_17_0_0; }

		//(WS+ dbMethodsCalls+=DriverMethodOutputAssignement)+
		public Group getGroup_17_1() { return cGroup_17_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_17_1_0() { return cWSTerminalRuleCall_17_1_0; }

		//dbMethodsCalls+=DriverMethodOutputAssignement
		public Assignment getDbMethodsCallsAssignment_17_1_1() { return cDbMethodsCallsAssignment_17_1_1; }

		//DriverMethodOutputAssignement
		public RuleCall getDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_1_0() { return cDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_1_0; }

		//name="debug-level" WS+ debug=DebugLevelAssignement
		public Group getGroup_18() { return cGroup_18; }

		//name="debug-level"
		public Assignment getNameAssignment_18_0() { return cNameAssignment_18_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_18_0_0() { return cNameDebugLevelKeyword_18_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_18_1() { return cWSTerminalRuleCall_18_1; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_18_2() { return cDebugAssignment_18_2; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_18_2_0() { return cDebugDebugLevelAssignementParserRuleCall_18_2_0; }

		//name="take-comments"
		public Assignment getNameAssignment_19() { return cNameAssignment_19; }

		//"take-comments"
		public Keyword getNameTakeCommentsKeyword_19_0() { return cNameTakeCommentsKeyword_19_0; }

		//name="lowercase-names"
		public Assignment getNameAssignment_20() { return cNameAssignment_20; }

		//"lowercase-names"
		public Keyword getNameLowercaseNamesKeyword_20_0() { return cNameLowercaseNamesKeyword_20_0; }

		//name="uppercase-names"
		public Assignment getNameAssignment_21() { return cNameAssignment_21; }

		//"uppercase-names"
		public Keyword getNameUppercaseNamesKeyword_21_0() { return cNameUppercaseNamesKeyword_21_0; }
	}

	public class PojogenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojogenProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameTypesSqltypesKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final Assignment cSqlTypesAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cSqlTypesSqlTypeAssignementParserRuleCall_0_1_1_0 = (RuleCall)cSqlTypesAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameTypesInTableKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cDbTableAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_1_2_0 = (RuleCall)cDbTableAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_1_3_0 = (RuleCall)cGroup_1_3.eContents().get(0);
		private final Assignment cSqlTypesAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cSqlTypesSqlTypeAssignementParserRuleCall_1_3_1_0 = (RuleCall)cSqlTypesAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameTypesForColumnsKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cDbTableAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_2_2_0 = (RuleCall)cDbTableAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_2_3_0 = (RuleCall)cGroup_2_3.eContents().get(0);
		private final Assignment cColumnTypesAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_2_3_1_0 = (RuleCall)cColumnTypesAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameTypesForProcedureKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cDbProcedureAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDbProcedureIDENTTerminalRuleCall_3_2_0 = (RuleCall)cDbProcedureAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_3_3_0 = (RuleCall)cGroup_3_3.eContents().get(0);
		private final Assignment cColumnTypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_3_3_1_0 = (RuleCall)cColumnTypesAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameTypesForFunctionKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cDbFunctionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDbFunctionIDENTTerminalRuleCall_4_2_0 = (RuleCall)cDbFunctionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_4_3_0 = (RuleCall)cGroup_4_3.eContents().get(0);
		private final Assignment cColumnTypesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_4_3_1_0 = (RuleCall)cColumnTypesAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameShowTypeForColumnKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cDbTableAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_5_2_0 = (RuleCall)cDbTableAssignment_5_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		private final Assignment cColumnTypeAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cColumnTypeShowColumnTypeAssignementParserRuleCall_5_4_0 = (RuleCall)cColumnTypeAssignment_5_4.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cNameAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cNameShowTypeForProcedureKeyword_6_0_0 = (Keyword)cNameAssignment_6_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cDbProcedureAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDbProcedureIDENTTerminalRuleCall_6_2_0 = (RuleCall)cDbProcedureAssignment_6_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
		private final Assignment cColumnTypeAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final RuleCall cColumnTypeShowColumnTypeAssignementParserRuleCall_6_4_0 = (RuleCall)cColumnTypeAssignment_6_4.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameShowTypeForFunctionKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Assignment cDbFunctionAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cDbFunctionIDENTTerminalRuleCall_7_2_0 = (RuleCall)cDbFunctionAssignment_7_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
		private final Assignment cColumnTypeAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cColumnTypeShowColumnTypeAssignementParserRuleCall_7_4_0 = (RuleCall)cColumnTypeAssignment_7_4.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameIgnoreTablesKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_8_1_0 = (RuleCall)cGroup_8_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_8_1_1_0 = (RuleCall)cDbTablesAssignment_8_1_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cNameAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cNameOnlyTablesKeyword_9_0_0 = (Keyword)cNameAssignment_9_0.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_9_1_0 = (RuleCall)cGroup_9_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_9_1_1_0 = (RuleCall)cDbTablesAssignment_9_1_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cNameAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cNameNotAbstractTablesKeyword_10_0_0 = (Keyword)cNameAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_10_1_0 = (RuleCall)cGroup_10_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_10_1_1_0 = (RuleCall)cDbTablesAssignment_10_1_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cNameAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final Keyword cNameJoinTablesKeyword_11_0_0 = (Keyword)cNameAssignment_11_0.eContents().get(0);
		private final Group cGroup_11_1 = (Group)cGroup_11.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_11_1_0 = (RuleCall)cGroup_11_1.eContents().get(0);
		private final Assignment cJoinTablesAssignment_11_1_1 = (Assignment)cGroup_11_1.eContents().get(1);
		private final RuleCall cJoinTablesJoinTableAssignementParserRuleCall_11_1_1_0 = (RuleCall)cJoinTablesAssignment_11_1_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Assignment cNameAssignment_12_0 = (Assignment)cGroup_12.eContents().get(0);
		private final Keyword cNameIgnoreColumnsKeyword_12_0_0 = (Keyword)cNameAssignment_12_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final Assignment cDbTableAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_12_2_0 = (RuleCall)cDbTableAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_12_3_0 = (RuleCall)cGroup_12_3.eContents().get(0);
		private final Assignment cDbColumnsAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cDbColumnsIDENTTerminalRuleCall_12_3_1_0 = (RuleCall)cDbColumnsAssignment_12_3_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Assignment cNameAssignment_13_0 = (Assignment)cGroup_13.eContents().get(0);
		private final Keyword cNameRequiredColumnsKeyword_13_0_0 = (Keyword)cNameAssignment_13_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Assignment cDbTableAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_13_2_0 = (RuleCall)cDbTableAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_13_3_0 = (RuleCall)cGroup_13_3.eContents().get(0);
		private final Assignment cDbColumnsAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cDbColumnsIDENTTerminalRuleCall_13_3_1_0 = (RuleCall)cDbColumnsAssignment_13_3_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cNameAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cNameNotRequiredColumnsKeyword_14_0_0 = (Keyword)cNameAssignment_14_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_14_1 = (RuleCall)cGroup_14.eContents().get(1);
		private final Assignment cDbTableAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_14_2_0 = (RuleCall)cDbTableAssignment_14_2.eContents().get(0);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_14_3_0 = (RuleCall)cGroup_14_3.eContents().get(0);
		private final Assignment cDbColumnsAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final RuleCall cDbColumnsIDENTTerminalRuleCall_14_3_1_0 = (RuleCall)cDbColumnsAssignment_14_3_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cNameAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cNameCreateColumnsKeyword_15_0_0 = (Keyword)cNameAssignment_15_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_15_1 = (RuleCall)cGroup_15.eContents().get(1);
		private final Assignment cDbTableAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_15_2_0 = (RuleCall)cDbTableAssignment_15_2.eContents().get(0);
		private final Group cGroup_15_3 = (Group)cGroup_15.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_15_3_0 = (RuleCall)cGroup_15_3.eContents().get(0);
		private final Assignment cColumnTypesAssignment_15_3_1 = (Assignment)cGroup_15_3.eContents().get(1);
		private final RuleCall cColumnTypesColumnTypeAssignementParserRuleCall_15_3_1_0 = (RuleCall)cColumnTypesAssignment_15_3_1.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cNameAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cNameRenameTablesKeyword_16_0_0 = (Keyword)cNameAssignment_16_0.eContents().get(0);
		private final Group cGroup_16_1 = (Group)cGroup_16.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_16_1_0 = (RuleCall)cGroup_16_1.eContents().get(0);
		private final Assignment cTablesAssignment_16_1_1 = (Assignment)cGroup_16_1.eContents().get(1);
		private final RuleCall cTablesTableAssignementParserRuleCall_16_1_1_0 = (RuleCall)cTablesAssignment_16_1_1.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Assignment cNameAssignment_17_0 = (Assignment)cGroup_17.eContents().get(0);
		private final Keyword cNameRenameColumnsKeyword_17_0_0 = (Keyword)cNameAssignment_17_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_17_1 = (RuleCall)cGroup_17.eContents().get(1);
		private final Assignment cDbTableAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_17_2_0 = (RuleCall)cDbTableAssignment_17_2.eContents().get(0);
		private final Group cGroup_17_3 = (Group)cGroup_17.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_17_3_0 = (RuleCall)cGroup_17_3.eContents().get(0);
		private final Assignment cColumnsAssignment_17_3_1 = (Assignment)cGroup_17_3.eContents().get(1);
		private final RuleCall cColumnsColumnAssignementParserRuleCall_17_3_1_0 = (RuleCall)cColumnsAssignment_17_3_1.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cNameAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cNameIgnoreOneToManyKeyword_18_0_0 = (Keyword)cNameAssignment_18_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_18_1 = (RuleCall)cGroup_18.eContents().get(1);
		private final Assignment cDbTableAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_18_2_0 = (RuleCall)cDbTableAssignment_18_2.eContents().get(0);
		private final Group cGroup_18_3 = (Group)cGroup_18.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_18_3_0 = (RuleCall)cGroup_18_3.eContents().get(0);
		private final Assignment cExportsAssignment_18_3_1 = (Assignment)cGroup_18_3.eContents().get(1);
		private final RuleCall cExportsExportAssignementParserRuleCall_18_3_1_0 = (RuleCall)cExportsAssignment_18_3_1.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Assignment cNameAssignment_19_0 = (Assignment)cGroup_19.eContents().get(0);
		private final Keyword cNameIgnoreManyToOneKeyword_19_0_0 = (Keyword)cNameAssignment_19_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_19_1 = (RuleCall)cGroup_19.eContents().get(1);
		private final Assignment cDbTableAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_19_2_0 = (RuleCall)cDbTableAssignment_19_2.eContents().get(0);
		private final Group cGroup_19_3 = (Group)cGroup_19.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_19_3_0 = (RuleCall)cGroup_19_3.eContents().get(0);
		private final Assignment cImportsAssignment_19_3_1 = (Assignment)cGroup_19_3.eContents().get(1);
		private final RuleCall cImportsImportAssignementParserRuleCall_19_3_1_0 = (RuleCall)cImportsAssignment_19_3_1.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Assignment cNameAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final Keyword cNameInheritManyToOneKeyword_20_0_0 = (Keyword)cNameAssignment_20_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_20_1 = (RuleCall)cGroup_20.eContents().get(1);
		private final Assignment cDbTableAssignment_20_2 = (Assignment)cGroup_20.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_20_2_0 = (RuleCall)cDbTableAssignment_20_2.eContents().get(0);
		private final Group cGroup_20_3 = (Group)cGroup_20.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_20_3_0 = (RuleCall)cGroup_20_3.eContents().get(0);
		private final Assignment cImportsAssignment_20_3_1 = (Assignment)cGroup_20_3.eContents().get(1);
		private final RuleCall cImportsImportAssignementParserRuleCall_20_3_1_0 = (RuleCall)cImportsAssignment_20_3_1.eContents().get(0);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Assignment cNameAssignment_21_0 = (Assignment)cGroup_21.eContents().get(0);
		private final Keyword cNameCreateOneToManyKeyword_21_0_0 = (Keyword)cNameAssignment_21_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_21_1 = (RuleCall)cGroup_21.eContents().get(1);
		private final Assignment cDbTableAssignment_21_2 = (Assignment)cGroup_21.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_21_2_0 = (RuleCall)cDbTableAssignment_21_2.eContents().get(0);
		private final Group cGroup_21_3 = (Group)cGroup_21.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_21_3_0 = (RuleCall)cGroup_21_3.eContents().get(0);
		private final Assignment cExportsAssignment_21_3_1 = (Assignment)cGroup_21_3.eContents().get(1);
		private final RuleCall cExportsExportAssignementParserRuleCall_21_3_1_0 = (RuleCall)cExportsAssignment_21_3_1.eContents().get(0);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Assignment cNameAssignment_22_0 = (Assignment)cGroup_22.eContents().get(0);
		private final Keyword cNameCreateManyToOneKeyword_22_0_0 = (Keyword)cNameAssignment_22_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_22_1 = (RuleCall)cGroup_22.eContents().get(1);
		private final Assignment cDbTableAssignment_22_2 = (Assignment)cGroup_22.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_22_2_0 = (RuleCall)cDbTableAssignment_22_2.eContents().get(0);
		private final Group cGroup_22_3 = (Group)cGroup_22.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_22_3_0 = (RuleCall)cGroup_22_3.eContents().get(0);
		private final Assignment cImportsAssignment_22_3_1 = (Assignment)cGroup_22_3.eContents().get(1);
		private final RuleCall cImportsImportAssignementParserRuleCall_22_3_1_0 = (RuleCall)cImportsAssignment_22_3_1.eContents().get(0);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Assignment cNameAssignment_23_0 = (Assignment)cGroup_23.eContents().get(0);
		private final Keyword cNameTableManyToManyKeyword_23_0_0 = (Keyword)cNameAssignment_23_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_23_1 = (RuleCall)cGroup_23.eContents().get(1);
		private final Assignment cDbTableAssignment_23_2 = (Assignment)cGroup_23.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_23_2_0 = (RuleCall)cDbTableAssignment_23_2.eContents().get(0);
		private final Group cGroup_23_3 = (Group)cGroup_23.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_23_3_0 = (RuleCall)cGroup_23_3.eContents().get(0);
		private final Assignment cMany2sAssignment_23_3_1 = (Assignment)cGroup_23_3.eContents().get(1);
		private final RuleCall cMany2sManyToManyAssignementParserRuleCall_23_3_1_0 = (RuleCall)cMany2sAssignment_23_3_1.eContents().get(0);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Assignment cNameAssignment_24_0 = (Assignment)cGroup_24.eContents().get(0);
		private final Keyword cNameInheritDiscriminatorKeyword_24_0_0 = (Keyword)cNameAssignment_24_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_24_1 = (RuleCall)cGroup_24.eContents().get(1);
		private final Assignment cDbTableAssignment_24_2 = (Assignment)cGroup_24.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_24_2_0 = (RuleCall)cDbTableAssignment_24_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_24_3 = (RuleCall)cGroup_24.eContents().get(3);
		private final Assignment cDbColumnAssignment_24_4 = (Assignment)cGroup_24.eContents().get(4);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_24_4_0 = (RuleCall)cDbColumnAssignment_24_4.eContents().get(0);
		private final Group cGroup_24_5 = (Group)cGroup_24.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_24_5_0 = (RuleCall)cGroup_24_5.eContents().get(0);
		private final Assignment cInheritanceAssignment_24_5_1 = (Assignment)cGroup_24_5.eContents().get(1);
		private final RuleCall cInheritanceInheritanceAssignementParserRuleCall_24_5_1_0 = (RuleCall)cInheritanceAssignment_24_5_1.eContents().get(0);
		private final Group cGroup_25 = (Group)cAlternatives.eContents().get(25);
		private final Assignment cNameAssignment_25_0 = (Assignment)cGroup_25.eContents().get(0);
		private final Keyword cNameGenerateMethodsKeyword_25_0_0 = (Keyword)cNameAssignment_25_0.eContents().get(0);
		private final Group cGroup_25_1 = (Group)cGroup_25.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_25_1_0 = (RuleCall)cGroup_25_1.eContents().get(0);
		private final Assignment cMethodsAssignment_25_1_1 = (Assignment)cGroup_25_1.eContents().get(1);
		private final RuleCall cMethodsIDENTTerminalRuleCall_25_1_1_0 = (RuleCall)cMethodsAssignment_25_1_1.eContents().get(0);
		private final Group cGroup_26 = (Group)cAlternatives.eContents().get(26);
		private final Assignment cNameAssignment_26_0 = (Assignment)cGroup_26.eContents().get(0);
		private final Keyword cNameGenerateOperatorsKeyword_26_0_0 = (Keyword)cNameAssignment_26_0.eContents().get(0);
		private final Group cGroup_26_1 = (Group)cGroup_26.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_26_1_0 = (RuleCall)cGroup_26_1.eContents().get(0);
		private final Assignment cOperatorsSuffixAssignment_26_1_1 = (Assignment)cGroup_26_1.eContents().get(1);
		private final RuleCall cOperatorsSuffixIDENTTerminalRuleCall_26_1_1_0 = (RuleCall)cOperatorsSuffixAssignment_26_1_1.eContents().get(0);
		private final Group cGroup_27 = (Group)cAlternatives.eContents().get(27);
		private final Assignment cNameAssignment_27_0 = (Assignment)cGroup_27.eContents().get(0);
		private final Keyword cNameImplementsInterfacesKeyword_27_0_0 = (Keyword)cNameAssignment_27_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_27_1 = (RuleCall)cGroup_27.eContents().get(1);
		private final Assignment cToImplementsAssignment_27_2 = (Assignment)cGroup_27.eContents().get(2);
		private final RuleCall cToImplementsImplementsAssignementParserRuleCall_27_2_0 = (RuleCall)cToImplementsAssignment_27_2.eContents().get(0);
		private final Group cGroup_28 = (Group)cAlternatives.eContents().get(28);
		private final Assignment cNameAssignment_28_0 = (Assignment)cGroup_28.eContents().get(0);
		private final Keyword cNameExtendsClassKeyword_28_0_0 = (Keyword)cNameAssignment_28_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_28_1 = (RuleCall)cGroup_28.eContents().get(1);
		private final Assignment cToExtendsAssignment_28_2 = (Assignment)cGroup_28.eContents().get(2);
		private final RuleCall cToExtendsExtendsAssignementParserRuleCall_28_2_0 = (RuleCall)cToExtendsAssignment_28_2.eContents().get(0);
		private final Group cGroup_29 = (Group)cAlternatives.eContents().get(29);
		private final Assignment cNameAssignment_29_0 = (Assignment)cGroup_29.eContents().get(0);
		private final Keyword cNameImplementsInterfacesGenericsKeyword_29_0_0 = (Keyword)cNameAssignment_29_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_29_1 = (RuleCall)cGroup_29.eContents().get(1);
		private final Assignment cToImplementsGenericsAssignment_29_2 = (Assignment)cGroup_29.eContents().get(2);
		private final RuleCall cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_2_0 = (RuleCall)cToImplementsGenericsAssignment_29_2.eContents().get(0);
		private final Group cGroup_30 = (Group)cAlternatives.eContents().get(30);
		private final Assignment cNameAssignment_30_0 = (Assignment)cGroup_30.eContents().get(0);
		private final Keyword cNameExtendsClassGenericsKeyword_30_0_0 = (Keyword)cNameAssignment_30_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_30_1 = (RuleCall)cGroup_30.eContents().get(1);
		private final Assignment cToExtendsGenericsAssignment_30_2 = (Assignment)cGroup_30.eContents().get(2);
		private final RuleCall cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_2_0 = (RuleCall)cToExtendsGenericsAssignment_30_2.eContents().get(0);
		private final Assignment cNameAssignment_31 = (Assignment)cAlternatives.eContents().get(31);
		private final Keyword cNameGenerateWrappersKeyword_31_0 = (Keyword)cNameAssignment_31.eContents().get(0);
		private final Assignment cNameAssignment_32 = (Assignment)cAlternatives.eContents().get(32);
		private final Keyword cNameGenerateValidationAnnotationsKeyword_32_0 = (Keyword)cNameAssignment_32.eContents().get(0);
		private final Group cGroup_33 = (Group)cAlternatives.eContents().get(33);
		private final Assignment cNameAssignment_33_0 = (Assignment)cGroup_33.eContents().get(0);
		private final Keyword cNamePreserveForeignKeysKeyword_33_0_0 = (Keyword)cNameAssignment_33_0.eContents().get(0);
		private final Group cGroup_33_1 = (Group)cGroup_33.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_33_1_0 = (RuleCall)cGroup_33_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_33_1_1 = (Assignment)cGroup_33_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_33_1_1_0 = (RuleCall)cDbTablesAssignment_33_1_1.eContents().get(0);
		private final Group cGroup_34 = (Group)cAlternatives.eContents().get(34);
		private final Assignment cNameAssignment_34_0 = (Assignment)cGroup_34.eContents().get(0);
		private final Keyword cNameImplementationPackageKeyword_34_0_0 = (Keyword)cNameAssignment_34_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_34_1 = (RuleCall)cGroup_34.eContents().get(1);
		private final Assignment cImplPackageAssignment_34_2 = (Assignment)cGroup_34.eContents().get(2);
		private final RuleCall cImplPackageIDENTTerminalRuleCall_34_2_0 = (RuleCall)cImplPackageAssignment_34_2.eContents().get(0);
		private final Assignment cNameAssignment_35 = (Assignment)cAlternatives.eContents().get(35);
		private final Keyword cNameMakeItFinalKeyword_35_0 = (Keyword)cNameAssignment_35.eContents().get(0);
		private final Group cGroup_36 = (Group)cAlternatives.eContents().get(36);
		private final Assignment cNameAssignment_36_0 = (Assignment)cGroup_36.eContents().get(0);
		private final Keyword cNameVersionColumnKeyword_36_0_0 = (Keyword)cNameAssignment_36_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_36_1 = (RuleCall)cGroup_36.eContents().get(1);
		private final Assignment cVersionAssignment_36_2 = (Assignment)cGroup_36.eContents().get(2);
		private final RuleCall cVersionIDENTTerminalRuleCall_36_2_0 = (RuleCall)cVersionAssignment_36_2.eContents().get(0);
		private final Group cGroup_36_3 = (Group)cGroup_36.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_36_3_0 = (RuleCall)cGroup_36_3.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_36_3_1 = (RuleCall)cGroup_36_3.eContents().get(1);
		private final Group cGroup_36_3_2 = (Group)cGroup_36_3.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_36_3_2_0 = (RuleCall)cGroup_36_3_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_36_3_2_1 = (Assignment)cGroup_36_3_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_36_3_2_1_0 = (RuleCall)cDbTablesAssignment_36_3_2_1.eContents().get(0);
		private final Group cGroup_36_4 = (Group)cGroup_36.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_36_4_0 = (RuleCall)cGroup_36_4.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_36_4_1 = (RuleCall)cGroup_36_4.eContents().get(1);
		private final Group cGroup_36_4_2 = (Group)cGroup_36_4.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_36_4_2_0 = (RuleCall)cGroup_36_4_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_36_4_2_1 = (Assignment)cGroup_36_4_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_36_4_2_1_0 = (RuleCall)cDbNotTablesAssignment_36_4_2_1.eContents().get(0);
		private final Group cGroup_37 = (Group)cAlternatives.eContents().get(37);
		private final Assignment cNameAssignment_37_0 = (Assignment)cGroup_37.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_37_0_0 = (Keyword)cNameAssignment_37_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_37_1 = (RuleCall)cGroup_37.eContents().get(1);
		private final Assignment cDebugAssignment_37_2 = (Assignment)cGroup_37.eContents().get(2);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_37_2_0 = (RuleCall)cDebugAssignment_37_2.eContents().get(0);
		private final Group cGroup_38 = (Group)cAlternatives.eContents().get(38);
		private final Assignment cNameAssignment_38_0 = (Assignment)cGroup_38.eContents().get(0);
		private final Keyword cNamePojosForProceduresKeyword_38_0_0 = (Keyword)cNameAssignment_38_0.eContents().get(0);
		private final Group cGroup_38_1 = (Group)cGroup_38.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_38_1_0 = (RuleCall)cGroup_38_1.eContents().get(0);
		private final Assignment cProcPojosAssignment_38_1_1 = (Assignment)cGroup_38_1.eContents().get(1);
		private final RuleCall cProcPojosProcedurePojoAssignementParserRuleCall_38_1_1_0 = (RuleCall)cProcPojosAssignment_38_1_1.eContents().get(0);
		private final Group cGroup_39 = (Group)cAlternatives.eContents().get(39);
		private final Assignment cNameAssignment_39_0 = (Assignment)cGroup_39.eContents().get(0);
		private final Keyword cNamePojosForFunctionsKeyword_39_0_0 = (Keyword)cNameAssignment_39_0.eContents().get(0);
		private final Group cGroup_39_1 = (Group)cGroup_39.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_39_1_0 = (RuleCall)cGroup_39_1.eContents().get(0);
		private final Assignment cFunPojosAssignment_39_1_1 = (Assignment)cGroup_39_1.eContents().get(1);
		private final RuleCall cFunPojosFunctionPojoAssignementParserRuleCall_39_1_1_0 = (RuleCall)cFunPojosAssignment_39_1_1.eContents().get(0);
		private final Group cGroup_40 = (Group)cAlternatives.eContents().get(40);
		private final Assignment cNameAssignment_40_0 = (Assignment)cGroup_40.eContents().get(0);
		private final Keyword cNameActiveFilterKeyword_40_0_0 = (Keyword)cNameAssignment_40_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_40_1 = (RuleCall)cGroup_40.eContents().get(1);
		private final Assignment cActiveFilterAssignment_40_2 = (Assignment)cGroup_40.eContents().get(2);
		private final RuleCall cActiveFilterPropertyValueParserRuleCall_40_2_0 = (RuleCall)cActiveFilterAssignment_40_2.eContents().get(0);
		private final Group cGroup_41 = (Group)cAlternatives.eContents().get(41);
		private final Assignment cNameAssignment_41_0 = (Assignment)cGroup_41.eContents().get(0);
		private final Keyword cNamePackageKeyword_41_0_0 = (Keyword)cNameAssignment_41_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_41_1 = (RuleCall)cGroup_41.eContents().get(1);
		private final Assignment cPckgAssignment_41_2 = (Assignment)cGroup_41.eContents().get(2);
		private final RuleCall cPckgPropertyValueParserRuleCall_41_2_0 = (RuleCall)cPckgAssignment_41_2.eContents().get(0);
		private final Group cGroup_42 = (Group)cAlternatives.eContents().get(42);
		private final Assignment cNameAssignment_42_0 = (Assignment)cGroup_42.eContents().get(0);
		private final Keyword cNameEnumForCheckConstraintsKeyword_42_0_0 = (Keyword)cNameAssignment_42_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_42_1 = (RuleCall)cGroup_42.eContents().get(1);
		private final Assignment cEnumNameAssignment_42_2 = (Assignment)cGroup_42.eContents().get(2);
		private final RuleCall cEnumNameIDENTTerminalRuleCall_42_2_0 = (RuleCall)cEnumNameAssignment_42_2.eContents().get(0);
		private final Group cGroup_42_3 = (Group)cGroup_42.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_42_3_0 = (RuleCall)cGroup_42_3.eContents().get(0);
		private final Assignment cDbCheckConstraintsAssignment_42_3_1 = (Assignment)cGroup_42_3.eContents().get(1);
		private final RuleCall cDbCheckConstraintsIDENTTerminalRuleCall_42_3_1_0 = (RuleCall)cDbCheckConstraintsAssignment_42_3_1.eContents().get(0);
		
		//PojogenProperty:
		//	name="types-sqltypes" (WS+ sqlTypes+=SqlTypeAssignement)+ | name="types-in-table" WS+ dbTable=IDENT (WS+
		//	sqlTypes+=SqlTypeAssignement)+ | name="types-for-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+
		//	| name="types-for-procedure" WS+ dbProcedure=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ |
		//	name="types-for-function" WS+ dbFunction=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ | name="show-type-for-column"
		//	WS+ dbTable=IDENT WS+ columnType=ShowColumnTypeAssignement | name="show-type-for-procedure" WS+ dbProcedure=IDENT WS+
		//	columnType=ShowColumnTypeAssignement | name="show-type-for-function" WS+ dbFunction=IDENT WS+
		//	columnType=ShowColumnTypeAssignement | name="ignore-tables" (WS+ dbTables+=IDENT)+ | name="only-tables" (WS+
		//	dbTables+=IDENT)+ | name="not-abstract-tables" (WS+ dbTables+=IDENT)+ | name="join-tables" (WS+
		//	joinTables+=JoinTableAssignement)+ | name="ignore-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+ |
		//	name="required-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+ | name="not-required-columns" WS+ dbTable=IDENT (WS+
		//	dbColumns+=IDENT)+ | name="create-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ |
		//	name="rename-tables" (WS+ tables+=TableAssignement)+ | name="rename-columns" WS+ dbTable=IDENT (WS+
		//	columns+=ColumnAssignement)+ | name="ignore-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
		//	| name="ignore-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		//	| name="inherit-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		//	| name="create-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
		//	| name="create-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		//	| name="table-many-to-many" WS+ dbTable=IDENT (WS+ many2s+=ManyToManyAssignement)+ | name="inherit-discriminator" WS+
		//	dbTable=IDENT WS+ dbColumn=IDENT (WS+ inheritance+=InheritanceAssignement)+ | name="generate-methods" (WS+
		//	methods+=IDENT)+ | name="generate-operators" (WS+ operatorsSuffix=IDENT)? | name="implements-interfaces" WS+
		//	toImplements=ImplementsAssignement | name="extends-class" WS+ toExtends=ExtendsAssignement |
		//	name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics |
		//	name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics | name="generate-wrappers" |
		//	name="generate-validation-annotations" | name="preserve-foreign-keys" (WS+ dbTables+=IDENT)* |
		//	name="implementation-package" WS+ implPackage=IDENT | name="make-it-final" | name="version-column" WS+ version=IDENT
		//	(WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)? | name="debug-level" WS+
		//	debug=DebugLevelAssignement | name="pojos-for-procedures" (WS+ procPojos+=ProcedurePojoAssignement)+ |
		//	name="pojos-for-functions" (WS+ funPojos+=FunctionPojoAssignement)+ | name="active-filter" WS+
		//	activeFilter=PropertyValue | name="package" WS+ pckg=PropertyValue | name="enum-for-check-constraints" WS+
		//	enumName=IDENT (WS+ dbCheckConstraints+=IDENT)+;
		public ParserRule getRule() { return rule; }

		//name="types-sqltypes" (WS+ sqlTypes+=SqlTypeAssignement)+ | name="types-in-table" WS+ dbTable=IDENT (WS+
		//sqlTypes+=SqlTypeAssignement)+ | name="types-for-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ |
		//name="types-for-procedure" WS+ dbProcedure=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ | name="types-for-function"
		//WS+ dbFunction=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ | name="show-type-for-column" WS+ dbTable=IDENT WS+
		//columnType=ShowColumnTypeAssignement | name="show-type-for-procedure" WS+ dbProcedure=IDENT WS+
		//columnType=ShowColumnTypeAssignement | name="show-type-for-function" WS+ dbFunction=IDENT WS+
		//columnType=ShowColumnTypeAssignement | name="ignore-tables" (WS+ dbTables+=IDENT)+ | name="only-tables" (WS+
		//dbTables+=IDENT)+ | name="not-abstract-tables" (WS+ dbTables+=IDENT)+ | name="join-tables" (WS+
		//joinTables+=JoinTableAssignement)+ | name="ignore-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+ |
		//name="required-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+ | name="not-required-columns" WS+ dbTable=IDENT (WS+
		//dbColumns+=IDENT)+ | name="create-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ |
		//name="rename-tables" (WS+ tables+=TableAssignement)+ | name="rename-columns" WS+ dbTable=IDENT (WS+
		//columns+=ColumnAssignement)+ | name="ignore-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
		//| name="ignore-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		//| name="inherit-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		//| name="create-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
		//| name="create-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		//| name="table-many-to-many" WS+ dbTable=IDENT (WS+ many2s+=ManyToManyAssignement)+ | name="inherit-discriminator" WS+
		//dbTable=IDENT WS+ dbColumn=IDENT (WS+ inheritance+=InheritanceAssignement)+ | name="generate-methods" (WS+
		//methods+=IDENT)+ | name="generate-operators" (WS+ operatorsSuffix=IDENT)? | name="implements-interfaces" WS+
		//toImplements=ImplementsAssignement | name="extends-class" WS+ toExtends=ExtendsAssignement |
		//name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics |
		//name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics | name="generate-wrappers" |
		//name="generate-validation-annotations" | name="preserve-foreign-keys" (WS+ dbTables+=IDENT)* |
		//name="implementation-package" WS+ implPackage=IDENT | name="make-it-final" | name="version-column" WS+ version=IDENT
		//(WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)? | name="debug-level" WS+
		//debug=DebugLevelAssignement | name="pojos-for-procedures" (WS+ procPojos+=ProcedurePojoAssignement)+ |
		//name="pojos-for-functions" (WS+ funPojos+=FunctionPojoAssignement)+ | name="active-filter" WS+
		//activeFilter=PropertyValue | name="package" WS+ pckg=PropertyValue | name="enum-for-check-constraints" WS+
		//enumName=IDENT (WS+ dbCheckConstraints+=IDENT)+
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="types-sqltypes" (WS+ sqlTypes+=SqlTypeAssignement)+
		public Group getGroup_0() { return cGroup_0; }

		//name="types-sqltypes"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"types-sqltypes"
		public Keyword getNameTypesSqltypesKeyword_0_0_0() { return cNameTypesSqltypesKeyword_0_0_0; }

		//(WS+ sqlTypes+=SqlTypeAssignement)+
		public Group getGroup_0_1() { return cGroup_0_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_1_0() { return cWSTerminalRuleCall_0_1_0; }

		//sqlTypes+=SqlTypeAssignement
		public Assignment getSqlTypesAssignment_0_1_1() { return cSqlTypesAssignment_0_1_1; }

		//SqlTypeAssignement
		public RuleCall getSqlTypesSqlTypeAssignementParserRuleCall_0_1_1_0() { return cSqlTypesSqlTypeAssignementParserRuleCall_0_1_1_0; }

		//name="types-in-table" WS+ dbTable=IDENT (WS+ sqlTypes+=SqlTypeAssignement)+
		public Group getGroup_1() { return cGroup_1; }

		//name="types-in-table"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"types-in-table"
		public Keyword getNameTypesInTableKeyword_1_0_0() { return cNameTypesInTableKeyword_1_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_1_2() { return cDbTableAssignment_1_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_1_2_0() { return cDbTableIDENTTerminalRuleCall_1_2_0; }

		//(WS+ sqlTypes+=SqlTypeAssignement)+
		public Group getGroup_1_3() { return cGroup_1_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_3_0() { return cWSTerminalRuleCall_1_3_0; }

		//sqlTypes+=SqlTypeAssignement
		public Assignment getSqlTypesAssignment_1_3_1() { return cSqlTypesAssignment_1_3_1; }

		//SqlTypeAssignement
		public RuleCall getSqlTypesSqlTypeAssignementParserRuleCall_1_3_1_0() { return cSqlTypesSqlTypeAssignementParserRuleCall_1_3_1_0; }

		//name="types-for-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_2() { return cGroup_2; }

		//name="types-for-columns"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"types-for-columns"
		public Keyword getNameTypesForColumnsKeyword_2_0_0() { return cNameTypesForColumnsKeyword_2_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_1() { return cWSTerminalRuleCall_2_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_2_2() { return cDbTableAssignment_2_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_2_2_0() { return cDbTableIDENTTerminalRuleCall_2_2_0; }

		//(WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_2_3() { return cGroup_2_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_3_0() { return cWSTerminalRuleCall_2_3_0; }

		//columnTypes+=ColumnTypeAssignement
		public Assignment getColumnTypesAssignment_2_3_1() { return cColumnTypesAssignment_2_3_1; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_2_3_1_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_2_3_1_0; }

		//name="types-for-procedure" WS+ dbProcedure=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_3() { return cGroup_3; }

		//name="types-for-procedure"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"types-for-procedure"
		public Keyword getNameTypesForProcedureKeyword_3_0_0() { return cNameTypesForProcedureKeyword_3_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_1() { return cWSTerminalRuleCall_3_1; }

		//dbProcedure=IDENT
		public Assignment getDbProcedureAssignment_3_2() { return cDbProcedureAssignment_3_2; }

		//IDENT
		public RuleCall getDbProcedureIDENTTerminalRuleCall_3_2_0() { return cDbProcedureIDENTTerminalRuleCall_3_2_0; }

		//(WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_3_3() { return cGroup_3_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_3_0() { return cWSTerminalRuleCall_3_3_0; }

		//columnTypes+=ColumnTypeAssignement
		public Assignment getColumnTypesAssignment_3_3_1() { return cColumnTypesAssignment_3_3_1; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_3_3_1_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_3_3_1_0; }

		//name="types-for-function" WS+ dbFunction=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_4() { return cGroup_4; }

		//name="types-for-function"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"types-for-function"
		public Keyword getNameTypesForFunctionKeyword_4_0_0() { return cNameTypesForFunctionKeyword_4_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//dbFunction=IDENT
		public Assignment getDbFunctionAssignment_4_2() { return cDbFunctionAssignment_4_2; }

		//IDENT
		public RuleCall getDbFunctionIDENTTerminalRuleCall_4_2_0() { return cDbFunctionIDENTTerminalRuleCall_4_2_0; }

		//(WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_4_3() { return cGroup_4_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_4_3_0() { return cWSTerminalRuleCall_4_3_0; }

		//columnTypes+=ColumnTypeAssignement
		public Assignment getColumnTypesAssignment_4_3_1() { return cColumnTypesAssignment_4_3_1; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_4_3_1_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_4_3_1_0; }

		//name="show-type-for-column" WS+ dbTable=IDENT WS+ columnType=ShowColumnTypeAssignement
		public Group getGroup_5() { return cGroup_5; }

		//name="show-type-for-column"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"show-type-for-column"
		public Keyword getNameShowTypeForColumnKeyword_5_0_0() { return cNameShowTypeForColumnKeyword_5_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_5_1() { return cWSTerminalRuleCall_5_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_5_2() { return cDbTableAssignment_5_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_5_2_0() { return cDbTableIDENTTerminalRuleCall_5_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_5_3() { return cWSTerminalRuleCall_5_3; }

		//columnType=ShowColumnTypeAssignement
		public Assignment getColumnTypeAssignment_5_4() { return cColumnTypeAssignment_5_4; }

		//ShowColumnTypeAssignement
		public RuleCall getColumnTypeShowColumnTypeAssignementParserRuleCall_5_4_0() { return cColumnTypeShowColumnTypeAssignementParserRuleCall_5_4_0; }

		//name="show-type-for-procedure" WS+ dbProcedure=IDENT WS+ columnType=ShowColumnTypeAssignement
		public Group getGroup_6() { return cGroup_6; }

		//name="show-type-for-procedure"
		public Assignment getNameAssignment_6_0() { return cNameAssignment_6_0; }

		//"show-type-for-procedure"
		public Keyword getNameShowTypeForProcedureKeyword_6_0_0() { return cNameShowTypeForProcedureKeyword_6_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_6_1() { return cWSTerminalRuleCall_6_1; }

		//dbProcedure=IDENT
		public Assignment getDbProcedureAssignment_6_2() { return cDbProcedureAssignment_6_2; }

		//IDENT
		public RuleCall getDbProcedureIDENTTerminalRuleCall_6_2_0() { return cDbProcedureIDENTTerminalRuleCall_6_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_6_3() { return cWSTerminalRuleCall_6_3; }

		//columnType=ShowColumnTypeAssignement
		public Assignment getColumnTypeAssignment_6_4() { return cColumnTypeAssignment_6_4; }

		//ShowColumnTypeAssignement
		public RuleCall getColumnTypeShowColumnTypeAssignementParserRuleCall_6_4_0() { return cColumnTypeShowColumnTypeAssignementParserRuleCall_6_4_0; }

		//name="show-type-for-function" WS+ dbFunction=IDENT WS+ columnType=ShowColumnTypeAssignement
		public Group getGroup_7() { return cGroup_7; }

		//name="show-type-for-function"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"show-type-for-function"
		public Keyword getNameShowTypeForFunctionKeyword_7_0_0() { return cNameShowTypeForFunctionKeyword_7_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_7_1() { return cWSTerminalRuleCall_7_1; }

		//dbFunction=IDENT
		public Assignment getDbFunctionAssignment_7_2() { return cDbFunctionAssignment_7_2; }

		//IDENT
		public RuleCall getDbFunctionIDENTTerminalRuleCall_7_2_0() { return cDbFunctionIDENTTerminalRuleCall_7_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_7_3() { return cWSTerminalRuleCall_7_3; }

		//columnType=ShowColumnTypeAssignement
		public Assignment getColumnTypeAssignment_7_4() { return cColumnTypeAssignment_7_4; }

		//ShowColumnTypeAssignement
		public RuleCall getColumnTypeShowColumnTypeAssignementParserRuleCall_7_4_0() { return cColumnTypeShowColumnTypeAssignementParserRuleCall_7_4_0; }

		//name="ignore-tables" (WS+ dbTables+=IDENT)+
		public Group getGroup_8() { return cGroup_8; }

		//name="ignore-tables"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"ignore-tables"
		public Keyword getNameIgnoreTablesKeyword_8_0_0() { return cNameIgnoreTablesKeyword_8_0_0; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_8_1() { return cGroup_8_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_1_0() { return cWSTerminalRuleCall_8_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_8_1_1() { return cDbTablesAssignment_8_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_8_1_1_0() { return cDbTablesIDENTTerminalRuleCall_8_1_1_0; }

		//name="only-tables" (WS+ dbTables+=IDENT)+
		public Group getGroup_9() { return cGroup_9; }

		//name="only-tables"
		public Assignment getNameAssignment_9_0() { return cNameAssignment_9_0; }

		//"only-tables"
		public Keyword getNameOnlyTablesKeyword_9_0_0() { return cNameOnlyTablesKeyword_9_0_0; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_9_1() { return cGroup_9_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_9_1_0() { return cWSTerminalRuleCall_9_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_9_1_1() { return cDbTablesAssignment_9_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_9_1_1_0() { return cDbTablesIDENTTerminalRuleCall_9_1_1_0; }

		//name="not-abstract-tables" (WS+ dbTables+=IDENT)+
		public Group getGroup_10() { return cGroup_10; }

		//name="not-abstract-tables"
		public Assignment getNameAssignment_10_0() { return cNameAssignment_10_0; }

		//"not-abstract-tables"
		public Keyword getNameNotAbstractTablesKeyword_10_0_0() { return cNameNotAbstractTablesKeyword_10_0_0; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_10_1() { return cGroup_10_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_10_1_0() { return cWSTerminalRuleCall_10_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_10_1_1() { return cDbTablesAssignment_10_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_10_1_1_0() { return cDbTablesIDENTTerminalRuleCall_10_1_1_0; }

		//name="join-tables" (WS+ joinTables+=JoinTableAssignement)+
		public Group getGroup_11() { return cGroup_11; }

		//name="join-tables"
		public Assignment getNameAssignment_11_0() { return cNameAssignment_11_0; }

		//"join-tables"
		public Keyword getNameJoinTablesKeyword_11_0_0() { return cNameJoinTablesKeyword_11_0_0; }

		//(WS+ joinTables+=JoinTableAssignement)+
		public Group getGroup_11_1() { return cGroup_11_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_11_1_0() { return cWSTerminalRuleCall_11_1_0; }

		//joinTables+=JoinTableAssignement
		public Assignment getJoinTablesAssignment_11_1_1() { return cJoinTablesAssignment_11_1_1; }

		//JoinTableAssignement
		public RuleCall getJoinTablesJoinTableAssignementParserRuleCall_11_1_1_0() { return cJoinTablesJoinTableAssignementParserRuleCall_11_1_1_0; }

		//name="ignore-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+
		public Group getGroup_12() { return cGroup_12; }

		//name="ignore-columns"
		public Assignment getNameAssignment_12_0() { return cNameAssignment_12_0; }

		//"ignore-columns"
		public Keyword getNameIgnoreColumnsKeyword_12_0_0() { return cNameIgnoreColumnsKeyword_12_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_12_1() { return cWSTerminalRuleCall_12_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_12_2() { return cDbTableAssignment_12_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_12_2_0() { return cDbTableIDENTTerminalRuleCall_12_2_0; }

		//(WS+ dbColumns+=IDENT)+
		public Group getGroup_12_3() { return cGroup_12_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_12_3_0() { return cWSTerminalRuleCall_12_3_0; }

		//dbColumns+=IDENT
		public Assignment getDbColumnsAssignment_12_3_1() { return cDbColumnsAssignment_12_3_1; }

		//IDENT
		public RuleCall getDbColumnsIDENTTerminalRuleCall_12_3_1_0() { return cDbColumnsIDENTTerminalRuleCall_12_3_1_0; }

		//name="required-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+
		public Group getGroup_13() { return cGroup_13; }

		//name="required-columns"
		public Assignment getNameAssignment_13_0() { return cNameAssignment_13_0; }

		//"required-columns"
		public Keyword getNameRequiredColumnsKeyword_13_0_0() { return cNameRequiredColumnsKeyword_13_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_13_1() { return cWSTerminalRuleCall_13_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_13_2() { return cDbTableAssignment_13_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_13_2_0() { return cDbTableIDENTTerminalRuleCall_13_2_0; }

		//(WS+ dbColumns+=IDENT)+
		public Group getGroup_13_3() { return cGroup_13_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_13_3_0() { return cWSTerminalRuleCall_13_3_0; }

		//dbColumns+=IDENT
		public Assignment getDbColumnsAssignment_13_3_1() { return cDbColumnsAssignment_13_3_1; }

		//IDENT
		public RuleCall getDbColumnsIDENTTerminalRuleCall_13_3_1_0() { return cDbColumnsIDENTTerminalRuleCall_13_3_1_0; }

		//name="not-required-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+
		public Group getGroup_14() { return cGroup_14; }

		//name="not-required-columns"
		public Assignment getNameAssignment_14_0() { return cNameAssignment_14_0; }

		//"not-required-columns"
		public Keyword getNameNotRequiredColumnsKeyword_14_0_0() { return cNameNotRequiredColumnsKeyword_14_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_14_1() { return cWSTerminalRuleCall_14_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_14_2() { return cDbTableAssignment_14_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_14_2_0() { return cDbTableIDENTTerminalRuleCall_14_2_0; }

		//(WS+ dbColumns+=IDENT)+
		public Group getGroup_14_3() { return cGroup_14_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_14_3_0() { return cWSTerminalRuleCall_14_3_0; }

		//dbColumns+=IDENT
		public Assignment getDbColumnsAssignment_14_3_1() { return cDbColumnsAssignment_14_3_1; }

		//IDENT
		public RuleCall getDbColumnsIDENTTerminalRuleCall_14_3_1_0() { return cDbColumnsIDENTTerminalRuleCall_14_3_1_0; }

		//name="create-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_15() { return cGroup_15; }

		//name="create-columns"
		public Assignment getNameAssignment_15_0() { return cNameAssignment_15_0; }

		//"create-columns"
		public Keyword getNameCreateColumnsKeyword_15_0_0() { return cNameCreateColumnsKeyword_15_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_15_1() { return cWSTerminalRuleCall_15_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_15_2() { return cDbTableAssignment_15_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_15_2_0() { return cDbTableIDENTTerminalRuleCall_15_2_0; }

		//(WS+ columnTypes+=ColumnTypeAssignement)+
		public Group getGroup_15_3() { return cGroup_15_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_15_3_0() { return cWSTerminalRuleCall_15_3_0; }

		//columnTypes+=ColumnTypeAssignement
		public Assignment getColumnTypesAssignment_15_3_1() { return cColumnTypesAssignment_15_3_1; }

		//ColumnTypeAssignement
		public RuleCall getColumnTypesColumnTypeAssignementParserRuleCall_15_3_1_0() { return cColumnTypesColumnTypeAssignementParserRuleCall_15_3_1_0; }

		//name="rename-tables" (WS+ tables+=TableAssignement)+
		public Group getGroup_16() { return cGroup_16; }

		//name="rename-tables"
		public Assignment getNameAssignment_16_0() { return cNameAssignment_16_0; }

		//"rename-tables"
		public Keyword getNameRenameTablesKeyword_16_0_0() { return cNameRenameTablesKeyword_16_0_0; }

		//(WS+ tables+=TableAssignement)+
		public Group getGroup_16_1() { return cGroup_16_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_16_1_0() { return cWSTerminalRuleCall_16_1_0; }

		//tables+=TableAssignement
		public Assignment getTablesAssignment_16_1_1() { return cTablesAssignment_16_1_1; }

		//TableAssignement
		public RuleCall getTablesTableAssignementParserRuleCall_16_1_1_0() { return cTablesTableAssignementParserRuleCall_16_1_1_0; }

		//name="rename-columns" WS+ dbTable=IDENT (WS+ columns+=ColumnAssignement)+
		public Group getGroup_17() { return cGroup_17; }

		//name="rename-columns"
		public Assignment getNameAssignment_17_0() { return cNameAssignment_17_0; }

		//"rename-columns"
		public Keyword getNameRenameColumnsKeyword_17_0_0() { return cNameRenameColumnsKeyword_17_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_17_1() { return cWSTerminalRuleCall_17_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_17_2() { return cDbTableAssignment_17_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_17_2_0() { return cDbTableIDENTTerminalRuleCall_17_2_0; }

		//(WS+ columns+=ColumnAssignement)+
		public Group getGroup_17_3() { return cGroup_17_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_17_3_0() { return cWSTerminalRuleCall_17_3_0; }

		//columns+=ColumnAssignement
		public Assignment getColumnsAssignment_17_3_1() { return cColumnsAssignment_17_3_1; }

		//ColumnAssignement
		public RuleCall getColumnsColumnAssignementParserRuleCall_17_3_1_0() { return cColumnsColumnAssignementParserRuleCall_17_3_1_0; }

		//name="ignore-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
		public Group getGroup_18() { return cGroup_18; }

		//name="ignore-one-to-many"
		public Assignment getNameAssignment_18_0() { return cNameAssignment_18_0; }

		//"ignore-one-to-many"
		public Keyword getNameIgnoreOneToManyKeyword_18_0_0() { return cNameIgnoreOneToManyKeyword_18_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_18_1() { return cWSTerminalRuleCall_18_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_18_2() { return cDbTableAssignment_18_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_18_2_0() { return cDbTableIDENTTerminalRuleCall_18_2_0; }

		//(WS+ exports+=ExportAssignement)+
		public Group getGroup_18_3() { return cGroup_18_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_18_3_0() { return cWSTerminalRuleCall_18_3_0; }

		//exports+=ExportAssignement
		public Assignment getExportsAssignment_18_3_1() { return cExportsAssignment_18_3_1; }

		//ExportAssignement
		public RuleCall getExportsExportAssignementParserRuleCall_18_3_1_0() { return cExportsExportAssignementParserRuleCall_18_3_1_0; }

		//name="ignore-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		public Group getGroup_19() { return cGroup_19; }

		//name="ignore-many-to-one"
		public Assignment getNameAssignment_19_0() { return cNameAssignment_19_0; }

		//"ignore-many-to-one"
		public Keyword getNameIgnoreManyToOneKeyword_19_0_0() { return cNameIgnoreManyToOneKeyword_19_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_19_1() { return cWSTerminalRuleCall_19_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_19_2() { return cDbTableAssignment_19_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_19_2_0() { return cDbTableIDENTTerminalRuleCall_19_2_0; }

		//(WS+ imports+=ImportAssignement)+
		public Group getGroup_19_3() { return cGroup_19_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_19_3_0() { return cWSTerminalRuleCall_19_3_0; }

		//imports+=ImportAssignement
		public Assignment getImportsAssignment_19_3_1() { return cImportsAssignment_19_3_1; }

		//ImportAssignement
		public RuleCall getImportsImportAssignementParserRuleCall_19_3_1_0() { return cImportsImportAssignementParserRuleCall_19_3_1_0; }

		//name="inherit-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		public Group getGroup_20() { return cGroup_20; }

		//name="inherit-many-to-one"
		public Assignment getNameAssignment_20_0() { return cNameAssignment_20_0; }

		//"inherit-many-to-one"
		public Keyword getNameInheritManyToOneKeyword_20_0_0() { return cNameInheritManyToOneKeyword_20_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_20_1() { return cWSTerminalRuleCall_20_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_20_2() { return cDbTableAssignment_20_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_20_2_0() { return cDbTableIDENTTerminalRuleCall_20_2_0; }

		//(WS+ imports+=ImportAssignement)+
		public Group getGroup_20_3() { return cGroup_20_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_20_3_0() { return cWSTerminalRuleCall_20_3_0; }

		//imports+=ImportAssignement
		public Assignment getImportsAssignment_20_3_1() { return cImportsAssignment_20_3_1; }

		//ImportAssignement
		public RuleCall getImportsImportAssignementParserRuleCall_20_3_1_0() { return cImportsImportAssignementParserRuleCall_20_3_1_0; }

		//name="create-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
		public Group getGroup_21() { return cGroup_21; }

		//name="create-one-to-many"
		public Assignment getNameAssignment_21_0() { return cNameAssignment_21_0; }

		//"create-one-to-many"
		public Keyword getNameCreateOneToManyKeyword_21_0_0() { return cNameCreateOneToManyKeyword_21_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_21_1() { return cWSTerminalRuleCall_21_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_21_2() { return cDbTableAssignment_21_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_21_2_0() { return cDbTableIDENTTerminalRuleCall_21_2_0; }

		//(WS+ exports+=ExportAssignement)+
		public Group getGroup_21_3() { return cGroup_21_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_21_3_0() { return cWSTerminalRuleCall_21_3_0; }

		//exports+=ExportAssignement
		public Assignment getExportsAssignment_21_3_1() { return cExportsAssignment_21_3_1; }

		//ExportAssignement
		public RuleCall getExportsExportAssignementParserRuleCall_21_3_1_0() { return cExportsExportAssignementParserRuleCall_21_3_1_0; }

		//name="create-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
		public Group getGroup_22() { return cGroup_22; }

		//name="create-many-to-one"
		public Assignment getNameAssignment_22_0() { return cNameAssignment_22_0; }

		//"create-many-to-one"
		public Keyword getNameCreateManyToOneKeyword_22_0_0() { return cNameCreateManyToOneKeyword_22_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_22_1() { return cWSTerminalRuleCall_22_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_22_2() { return cDbTableAssignment_22_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_22_2_0() { return cDbTableIDENTTerminalRuleCall_22_2_0; }

		//(WS+ imports+=ImportAssignement)+
		public Group getGroup_22_3() { return cGroup_22_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_22_3_0() { return cWSTerminalRuleCall_22_3_0; }

		//imports+=ImportAssignement
		public Assignment getImportsAssignment_22_3_1() { return cImportsAssignment_22_3_1; }

		//ImportAssignement
		public RuleCall getImportsImportAssignementParserRuleCall_22_3_1_0() { return cImportsImportAssignementParserRuleCall_22_3_1_0; }

		//name="table-many-to-many" WS+ dbTable=IDENT (WS+ many2s+=ManyToManyAssignement)+
		public Group getGroup_23() { return cGroup_23; }

		//name="table-many-to-many"
		public Assignment getNameAssignment_23_0() { return cNameAssignment_23_0; }

		//"table-many-to-many"
		public Keyword getNameTableManyToManyKeyword_23_0_0() { return cNameTableManyToManyKeyword_23_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_23_1() { return cWSTerminalRuleCall_23_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_23_2() { return cDbTableAssignment_23_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_23_2_0() { return cDbTableIDENTTerminalRuleCall_23_2_0; }

		//(WS+ many2s+=ManyToManyAssignement)+
		public Group getGroup_23_3() { return cGroup_23_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_23_3_0() { return cWSTerminalRuleCall_23_3_0; }

		//many2s+=ManyToManyAssignement
		public Assignment getMany2sAssignment_23_3_1() { return cMany2sAssignment_23_3_1; }

		//ManyToManyAssignement
		public RuleCall getMany2sManyToManyAssignementParserRuleCall_23_3_1_0() { return cMany2sManyToManyAssignementParserRuleCall_23_3_1_0; }

		//name="inherit-discriminator" WS+ dbTable=IDENT WS+ dbColumn=IDENT (WS+ inheritance+=InheritanceAssignement)+
		public Group getGroup_24() { return cGroup_24; }

		//name="inherit-discriminator"
		public Assignment getNameAssignment_24_0() { return cNameAssignment_24_0; }

		//"inherit-discriminator"
		public Keyword getNameInheritDiscriminatorKeyword_24_0_0() { return cNameInheritDiscriminatorKeyword_24_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_24_1() { return cWSTerminalRuleCall_24_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_24_2() { return cDbTableAssignment_24_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_24_2_0() { return cDbTableIDENTTerminalRuleCall_24_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_24_3() { return cWSTerminalRuleCall_24_3; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_24_4() { return cDbColumnAssignment_24_4; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_24_4_0() { return cDbColumnIDENTTerminalRuleCall_24_4_0; }

		//(WS+ inheritance+=InheritanceAssignement)+
		public Group getGroup_24_5() { return cGroup_24_5; }

		//WS+
		public RuleCall getWSTerminalRuleCall_24_5_0() { return cWSTerminalRuleCall_24_5_0; }

		//inheritance+=InheritanceAssignement
		public Assignment getInheritanceAssignment_24_5_1() { return cInheritanceAssignment_24_5_1; }

		//InheritanceAssignement
		public RuleCall getInheritanceInheritanceAssignementParserRuleCall_24_5_1_0() { return cInheritanceInheritanceAssignementParserRuleCall_24_5_1_0; }

		//name="generate-methods" (WS+ methods+=IDENT)+
		public Group getGroup_25() { return cGroup_25; }

		//name="generate-methods"
		public Assignment getNameAssignment_25_0() { return cNameAssignment_25_0; }

		//"generate-methods"
		public Keyword getNameGenerateMethodsKeyword_25_0_0() { return cNameGenerateMethodsKeyword_25_0_0; }

		//(WS+ methods+=IDENT)+
		public Group getGroup_25_1() { return cGroup_25_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_25_1_0() { return cWSTerminalRuleCall_25_1_0; }

		//methods+=IDENT
		public Assignment getMethodsAssignment_25_1_1() { return cMethodsAssignment_25_1_1; }

		//IDENT
		public RuleCall getMethodsIDENTTerminalRuleCall_25_1_1_0() { return cMethodsIDENTTerminalRuleCall_25_1_1_0; }

		//name="generate-operators" (WS+ operatorsSuffix=IDENT)?
		public Group getGroup_26() { return cGroup_26; }

		//name="generate-operators"
		public Assignment getNameAssignment_26_0() { return cNameAssignment_26_0; }

		//"generate-operators"
		public Keyword getNameGenerateOperatorsKeyword_26_0_0() { return cNameGenerateOperatorsKeyword_26_0_0; }

		//(WS+ operatorsSuffix=IDENT)?
		public Group getGroup_26_1() { return cGroup_26_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_26_1_0() { return cWSTerminalRuleCall_26_1_0; }

		//operatorsSuffix=IDENT
		public Assignment getOperatorsSuffixAssignment_26_1_1() { return cOperatorsSuffixAssignment_26_1_1; }

		//IDENT
		public RuleCall getOperatorsSuffixIDENTTerminalRuleCall_26_1_1_0() { return cOperatorsSuffixIDENTTerminalRuleCall_26_1_1_0; }

		//name="implements-interfaces" WS+ toImplements=ImplementsAssignement
		public Group getGroup_27() { return cGroup_27; }

		//name="implements-interfaces"
		public Assignment getNameAssignment_27_0() { return cNameAssignment_27_0; }

		//"implements-interfaces"
		public Keyword getNameImplementsInterfacesKeyword_27_0_0() { return cNameImplementsInterfacesKeyword_27_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_27_1() { return cWSTerminalRuleCall_27_1; }

		//toImplements=ImplementsAssignement
		public Assignment getToImplementsAssignment_27_2() { return cToImplementsAssignment_27_2; }

		//ImplementsAssignement
		public RuleCall getToImplementsImplementsAssignementParserRuleCall_27_2_0() { return cToImplementsImplementsAssignementParserRuleCall_27_2_0; }

		//name="extends-class" WS+ toExtends=ExtendsAssignement
		public Group getGroup_28() { return cGroup_28; }

		//name="extends-class"
		public Assignment getNameAssignment_28_0() { return cNameAssignment_28_0; }

		//"extends-class"
		public Keyword getNameExtendsClassKeyword_28_0_0() { return cNameExtendsClassKeyword_28_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_28_1() { return cWSTerminalRuleCall_28_1; }

		//toExtends=ExtendsAssignement
		public Assignment getToExtendsAssignment_28_2() { return cToExtendsAssignment_28_2; }

		//ExtendsAssignement
		public RuleCall getToExtendsExtendsAssignementParserRuleCall_28_2_0() { return cToExtendsExtendsAssignementParserRuleCall_28_2_0; }

		//name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics
		public Group getGroup_29() { return cGroup_29; }

		//name="implements-interfaces-generics"
		public Assignment getNameAssignment_29_0() { return cNameAssignment_29_0; }

		//"implements-interfaces-generics"
		public Keyword getNameImplementsInterfacesGenericsKeyword_29_0_0() { return cNameImplementsInterfacesGenericsKeyword_29_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_29_1() { return cWSTerminalRuleCall_29_1; }

		//toImplementsGenerics=ImplementsAssignementGenerics
		public Assignment getToImplementsGenericsAssignment_29_2() { return cToImplementsGenericsAssignment_29_2; }

		//ImplementsAssignementGenerics
		public RuleCall getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_2_0() { return cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_2_0; }

		//name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics
		public Group getGroup_30() { return cGroup_30; }

		//name="extends-class-generics"
		public Assignment getNameAssignment_30_0() { return cNameAssignment_30_0; }

		//"extends-class-generics"
		public Keyword getNameExtendsClassGenericsKeyword_30_0_0() { return cNameExtendsClassGenericsKeyword_30_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_30_1() { return cWSTerminalRuleCall_30_1; }

		//toExtendsGenerics=ExtendsAssignementGenerics
		public Assignment getToExtendsGenericsAssignment_30_2() { return cToExtendsGenericsAssignment_30_2; }

		//ExtendsAssignementGenerics
		public RuleCall getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_2_0() { return cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_2_0; }

		//name="generate-wrappers"
		public Assignment getNameAssignment_31() { return cNameAssignment_31; }

		//"generate-wrappers"
		public Keyword getNameGenerateWrappersKeyword_31_0() { return cNameGenerateWrappersKeyword_31_0; }

		//name="generate-validation-annotations"
		public Assignment getNameAssignment_32() { return cNameAssignment_32; }

		//"generate-validation-annotations"
		public Keyword getNameGenerateValidationAnnotationsKeyword_32_0() { return cNameGenerateValidationAnnotationsKeyword_32_0; }

		//name="preserve-foreign-keys" (WS+ dbTables+=IDENT)*
		public Group getGroup_33() { return cGroup_33; }

		//name="preserve-foreign-keys"
		public Assignment getNameAssignment_33_0() { return cNameAssignment_33_0; }

		//"preserve-foreign-keys"
		public Keyword getNamePreserveForeignKeysKeyword_33_0_0() { return cNamePreserveForeignKeysKeyword_33_0_0; }

		//(WS+ dbTables+=IDENT)*
		public Group getGroup_33_1() { return cGroup_33_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_33_1_0() { return cWSTerminalRuleCall_33_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_33_1_1() { return cDbTablesAssignment_33_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_33_1_1_0() { return cDbTablesIDENTTerminalRuleCall_33_1_1_0; }

		//name="implementation-package" WS+ implPackage=IDENT
		public Group getGroup_34() { return cGroup_34; }

		//name="implementation-package"
		public Assignment getNameAssignment_34_0() { return cNameAssignment_34_0; }

		//"implementation-package"
		public Keyword getNameImplementationPackageKeyword_34_0_0() { return cNameImplementationPackageKeyword_34_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_34_1() { return cWSTerminalRuleCall_34_1; }

		//implPackage=IDENT
		public Assignment getImplPackageAssignment_34_2() { return cImplPackageAssignment_34_2; }

		//IDENT
		public RuleCall getImplPackageIDENTTerminalRuleCall_34_2_0() { return cImplPackageIDENTTerminalRuleCall_34_2_0; }

		//name="make-it-final"
		public Assignment getNameAssignment_35() { return cNameAssignment_35; }

		//"make-it-final"
		public Keyword getNameMakeItFinalKeyword_35_0() { return cNameMakeItFinalKeyword_35_0; }

		//name="version-column" WS+ version=IDENT (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_36() { return cGroup_36; }

		//name="version-column"
		public Assignment getNameAssignment_36_0() { return cNameAssignment_36_0; }

		//"version-column"
		public Keyword getNameVersionColumnKeyword_36_0_0() { return cNameVersionColumnKeyword_36_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_36_1() { return cWSTerminalRuleCall_36_1; }

		//version=IDENT
		public Assignment getVersionAssignment_36_2() { return cVersionAssignment_36_2; }

		//IDENT
		public RuleCall getVersionIDENTTerminalRuleCall_36_2_0() { return cVersionIDENTTerminalRuleCall_36_2_0; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_36_3() { return cGroup_36_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_36_3_0() { return cWSTerminalRuleCall_36_3_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_36_3_1() { return cPLUSTerminalRuleCall_36_3_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_36_3_2() { return cGroup_36_3_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_36_3_2_0() { return cWSTerminalRuleCall_36_3_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_36_3_2_1() { return cDbTablesAssignment_36_3_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_36_3_2_1_0() { return cDbTablesIDENTTerminalRuleCall_36_3_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_36_4() { return cGroup_36_4; }

		//WS+
		public RuleCall getWSTerminalRuleCall_36_4_0() { return cWSTerminalRuleCall_36_4_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_36_4_1() { return cMINUSTerminalRuleCall_36_4_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_36_4_2() { return cGroup_36_4_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_36_4_2_0() { return cWSTerminalRuleCall_36_4_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_36_4_2_1() { return cDbNotTablesAssignment_36_4_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_36_4_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_36_4_2_1_0; }

		//name="debug-level" WS+ debug=DebugLevelAssignement
		public Group getGroup_37() { return cGroup_37; }

		//name="debug-level"
		public Assignment getNameAssignment_37_0() { return cNameAssignment_37_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_37_0_0() { return cNameDebugLevelKeyword_37_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_37_1() { return cWSTerminalRuleCall_37_1; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_37_2() { return cDebugAssignment_37_2; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_37_2_0() { return cDebugDebugLevelAssignementParserRuleCall_37_2_0; }

		//name="pojos-for-procedures" (WS+ procPojos+=ProcedurePojoAssignement)+
		public Group getGroup_38() { return cGroup_38; }

		//name="pojos-for-procedures"
		public Assignment getNameAssignment_38_0() { return cNameAssignment_38_0; }

		//"pojos-for-procedures"
		public Keyword getNamePojosForProceduresKeyword_38_0_0() { return cNamePojosForProceduresKeyword_38_0_0; }

		//(WS+ procPojos+=ProcedurePojoAssignement)+
		public Group getGroup_38_1() { return cGroup_38_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_38_1_0() { return cWSTerminalRuleCall_38_1_0; }

		//procPojos+=ProcedurePojoAssignement
		public Assignment getProcPojosAssignment_38_1_1() { return cProcPojosAssignment_38_1_1; }

		//ProcedurePojoAssignement
		public RuleCall getProcPojosProcedurePojoAssignementParserRuleCall_38_1_1_0() { return cProcPojosProcedurePojoAssignementParserRuleCall_38_1_1_0; }

		//name="pojos-for-functions" (WS+ funPojos+=FunctionPojoAssignement)+
		public Group getGroup_39() { return cGroup_39; }

		//name="pojos-for-functions"
		public Assignment getNameAssignment_39_0() { return cNameAssignment_39_0; }

		//"pojos-for-functions"
		public Keyword getNamePojosForFunctionsKeyword_39_0_0() { return cNamePojosForFunctionsKeyword_39_0_0; }

		//(WS+ funPojos+=FunctionPojoAssignement)+
		public Group getGroup_39_1() { return cGroup_39_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_39_1_0() { return cWSTerminalRuleCall_39_1_0; }

		//funPojos+=FunctionPojoAssignement
		public Assignment getFunPojosAssignment_39_1_1() { return cFunPojosAssignment_39_1_1; }

		//FunctionPojoAssignement
		public RuleCall getFunPojosFunctionPojoAssignementParserRuleCall_39_1_1_0() { return cFunPojosFunctionPojoAssignementParserRuleCall_39_1_1_0; }

		//name="active-filter" WS+ activeFilter=PropertyValue
		public Group getGroup_40() { return cGroup_40; }

		//name="active-filter"
		public Assignment getNameAssignment_40_0() { return cNameAssignment_40_0; }

		//"active-filter"
		public Keyword getNameActiveFilterKeyword_40_0_0() { return cNameActiveFilterKeyword_40_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_40_1() { return cWSTerminalRuleCall_40_1; }

		//activeFilter=PropertyValue
		public Assignment getActiveFilterAssignment_40_2() { return cActiveFilterAssignment_40_2; }

		//PropertyValue
		public RuleCall getActiveFilterPropertyValueParserRuleCall_40_2_0() { return cActiveFilterPropertyValueParserRuleCall_40_2_0; }

		//name="package" WS+ pckg=PropertyValue
		public Group getGroup_41() { return cGroup_41; }

		//name="package"
		public Assignment getNameAssignment_41_0() { return cNameAssignment_41_0; }

		//"package"
		public Keyword getNamePackageKeyword_41_0_0() { return cNamePackageKeyword_41_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_41_1() { return cWSTerminalRuleCall_41_1; }

		//pckg=PropertyValue
		public Assignment getPckgAssignment_41_2() { return cPckgAssignment_41_2; }

		//PropertyValue
		public RuleCall getPckgPropertyValueParserRuleCall_41_2_0() { return cPckgPropertyValueParserRuleCall_41_2_0; }

		//name="enum-for-check-constraints" WS+ enumName=IDENT (WS+ dbCheckConstraints+=IDENT)+
		public Group getGroup_42() { return cGroup_42; }

		//name="enum-for-check-constraints"
		public Assignment getNameAssignment_42_0() { return cNameAssignment_42_0; }

		//"enum-for-check-constraints"
		public Keyword getNameEnumForCheckConstraintsKeyword_42_0_0() { return cNameEnumForCheckConstraintsKeyword_42_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_42_1() { return cWSTerminalRuleCall_42_1; }

		//enumName=IDENT
		public Assignment getEnumNameAssignment_42_2() { return cEnumNameAssignment_42_2; }

		//IDENT
		public RuleCall getEnumNameIDENTTerminalRuleCall_42_2_0() { return cEnumNameIDENTTerminalRuleCall_42_2_0; }

		//(WS+ dbCheckConstraints+=IDENT)+
		public Group getGroup_42_3() { return cGroup_42_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_42_3_0() { return cWSTerminalRuleCall_42_3_0; }

		//dbCheckConstraints+=IDENT
		public Assignment getDbCheckConstraintsAssignment_42_3_1() { return cDbCheckConstraintsAssignment_42_3_1; }

		//IDENT
		public RuleCall getDbCheckConstraintsIDENTTerminalRuleCall_42_3_1_0() { return cDbCheckConstraintsIDENTTerminalRuleCall_42_3_1_0; }
	}

	public class MetaTypeAssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaTypeAssignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDbColumnAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDbColumnIDENTTerminalRuleCall_0_0 = (RuleCall)cDbColumnAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeIDENTTerminalRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExtensionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cExtensionIDENTTerminalRuleCall_3_1_0 = (RuleCall)cExtensionAssignment_3_1.eContents().get(0);
		
		//MetaTypeAssignement:
		//	dbColumn=IDENT "->" type=IDENT ("->" extension=IDENT)?;
		public ParserRule getRule() { return rule; }

		//dbColumn=IDENT "->" type=IDENT ("->" extension=IDENT)?
		public Group getGroup() { return cGroup; }

		//dbColumn=IDENT
		public Assignment getDbColumnAssignment_0() { return cDbColumnAssignment_0; }

		//IDENT
		public RuleCall getDbColumnIDENTTerminalRuleCall_0_0() { return cDbColumnIDENTTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//type=IDENT
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//IDENT
		public RuleCall getTypeIDENTTerminalRuleCall_2_0() { return cTypeIDENTTerminalRuleCall_2_0; }

		//("->" extension=IDENT)?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//extension=IDENT
		public Assignment getExtensionAssignment_3_1() { return cExtensionAssignment_3_1; }

		//IDENT
		public RuleCall getExtensionIDENTTerminalRuleCall_3_1_0() { return cExtensionIDENTTerminalRuleCall_3_1_0; }
	}

	public class MetagenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetagenProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameGlobalSequenceKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cSequenceAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cSequenceIDENTTerminalRuleCall_0_2_0 = (RuleCall)cSequenceAssignment_0_2.eContents().get(0);
		private final Assignment cTypeAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cTypeIDENTTerminalRuleCall_0_3_0 = (RuleCall)cTypeAssignment_0_3.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cGroup_0.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_0_4_0 = (RuleCall)cGroup_0_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_0_4_1 = (RuleCall)cGroup_0_4.eContents().get(1);
		private final Group cGroup_0_4_2 = (Group)cGroup_0_4.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_0_4_2_0 = (RuleCall)cGroup_0_4_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_0_4_2_1 = (Assignment)cGroup_0_4_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_0_4_2_1_0 = (RuleCall)cDbTablesAssignment_0_4_2_1.eContents().get(0);
		private final Group cGroup_0_5 = (Group)cGroup_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_0_5_0 = (RuleCall)cGroup_0_5.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_0_5_1 = (RuleCall)cGroup_0_5.eContents().get(1);
		private final Group cGroup_0_5_2 = (Group)cGroup_0_5.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_0_5_2_0 = (RuleCall)cGroup_0_5_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_0_5_2_1 = (Assignment)cGroup_0_5_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_0_5_2_1_0 = (RuleCall)cDbNotTablesAssignment_0_5_2_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameTableSequenceKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cDbTableAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_1_2_0 = (RuleCall)cDbTableAssignment_1_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cSequenceAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cSequenceIDENTTerminalRuleCall_1_4_0 = (RuleCall)cSequenceAssignment_1_4.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1_5_0 = (RuleCall)cGroup_1_5.eContents().get(0);
		private final Assignment cTypeAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cTypeIDENTTerminalRuleCall_1_5_1_0 = (RuleCall)cTypeAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameGlobalIdentityKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final Assignment cIdentityAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cIdentityIDENTTerminalRuleCall_2_1_1_0 = (RuleCall)cIdentityAssignment_2_1_1.eContents().get(0);
		private final Assignment cTypeAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cTypeIDENTTerminalRuleCall_2_1_2_0 = (RuleCall)cTypeAssignment_2_1_2.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_2_2_1 = (RuleCall)cGroup_2_2.eContents().get(1);
		private final Group cGroup_2_2_2 = (Group)cGroup_2_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_2_2_0 = (RuleCall)cGroup_2_2_2.eContents().get(0);
		private final Assignment cDbTablesAssignment_2_2_2_1 = (Assignment)cGroup_2_2_2.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_2_2_2_1_0 = (RuleCall)cDbTablesAssignment_2_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_2_3_0 = (RuleCall)cGroup_2_3.eContents().get(0);
		private final RuleCall cMINUSTerminalRuleCall_2_3_1 = (RuleCall)cGroup_2_3.eContents().get(1);
		private final Group cGroup_2_3_2 = (Group)cGroup_2_3.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_3_2_0 = (RuleCall)cGroup_2_3_2.eContents().get(0);
		private final Assignment cDbNotTablesAssignment_2_3_2_1 = (Assignment)cGroup_2_3_2.eContents().get(1);
		private final RuleCall cDbNotTablesIDENTTerminalRuleCall_2_3_2_1_0 = (RuleCall)cDbNotTablesAssignment_2_3_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameTableIdentityKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cDbTableAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_3_2_0 = (RuleCall)cDbTableAssignment_3_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Assignment cIdentityAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cIdentityIDENTTerminalRuleCall_3_4_0 = (RuleCall)cIdentityAssignment_3_4.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cGroup_3.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_3_5_0 = (RuleCall)cGroup_3_5.eContents().get(0);
		private final Assignment cTypeAssignment_3_5_1 = (Assignment)cGroup_3_5.eContents().get(1);
		private final RuleCall cTypeIDENTTerminalRuleCall_3_5_1_0 = (RuleCall)cTypeAssignment_3_5_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameColumnMetaTypeKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cDbTableAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDbTableIDENTTerminalRuleCall_4_2_0 = (RuleCall)cDbTableAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_4_3_0 = (RuleCall)cGroup_4_3.eContents().get(0);
		private final Assignment cMetaTypesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cMetaTypesMetaTypeAssignementParserRuleCall_4_3_1_0 = (RuleCall)cMetaTypesAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameStatementMetaTypeKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cDbStatementAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDbStatementIDENTTerminalRuleCall_5_2_0 = (RuleCall)cDbStatementAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_5_3_0 = (RuleCall)cGroup_5_3.eContents().get(0);
		private final Assignment cMetaTypesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cMetaTypesMetaTypeAssignementParserRuleCall_5_3_1_0 = (RuleCall)cMetaTypesAssignment_5_3_1.eContents().get(0);
		private final Assignment cNameAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cNameMakeItFinalKeyword_6_0 = (Keyword)cNameAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cNameAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cNameLikeColumnsKeyword_7_0_0 = (Keyword)cNameAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_7_1_0 = (RuleCall)cGroup_7_1.eContents().get(0);
		private final Assignment cDbTableAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cDbTableIDENTTerminalRuleCall_7_1_1_0 = (RuleCall)cDbTableAssignment_7_1_1.eContents().get(0);
		private final Group cGroup_7_1_2 = (Group)cGroup_7_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_7_1_2_0 = (RuleCall)cGroup_7_1_2.eContents().get(0);
		private final Assignment cDbColumnsAssignment_7_1_2_1 = (Assignment)cGroup_7_1_2.eContents().get(1);
		private final RuleCall cDbColumnsIDENTTerminalRuleCall_7_1_2_1_0 = (RuleCall)cDbColumnsAssignment_7_1_2_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameNotLikeColumnsKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_8_1_0 = (RuleCall)cGroup_8_1.eContents().get(0);
		private final Assignment cDbTableAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cDbTableIDENTTerminalRuleCall_8_1_1_0 = (RuleCall)cDbTableAssignment_8_1_1.eContents().get(0);
		private final Group cGroup_8_1_2 = (Group)cGroup_8_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_8_1_2_0 = (RuleCall)cGroup_8_1_2.eContents().get(0);
		private final Assignment cDbColumnsAssignment_8_1_2_1 = (Assignment)cGroup_8_1_2.eContents().get(1);
		private final RuleCall cDbColumnsIDENTTerminalRuleCall_8_1_2_1_0 = (RuleCall)cDbColumnsAssignment_8_1_2_1.eContents().get(0);
		private final Assignment cNameAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final Keyword cNameGenerateSequencesKeyword_9_0 = (Keyword)cNameAssignment_9.eContents().get(0);
		private final Assignment cNameAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final Keyword cNameGenerateIdentitiesKeyword_10_0 = (Keyword)cNameAssignment_10.eContents().get(0);
		private final Assignment cNameAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cNameGenerateIdgeneratorsKeyword_11_0 = (Keyword)cNameAssignment_11.eContents().get(0);
		private final Assignment cNameAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cNameGenerateDefaultIdgeneratorsKeyword_12_0 = (Keyword)cNameAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Assignment cNameAssignment_13_0 = (Assignment)cGroup_13.eContents().get(0);
		private final Keyword cNameFunctionResultKeyword_13_0_0 = (Keyword)cNameAssignment_13_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Assignment cDbFunctionAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cDbFunctionIDENTTerminalRuleCall_13_2_0 = (RuleCall)cDbFunctionAssignment_13_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_13_3 = (RuleCall)cGroup_13.eContents().get(3);
		private final Assignment cTypeAssignment_13_4 = (Assignment)cGroup_13.eContents().get(4);
		private final RuleCall cTypeIDENTTerminalRuleCall_13_4_0 = (RuleCall)cTypeAssignment_13_4.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cNameAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cNameFunctionResultSetKeyword_14_0_0 = (Keyword)cNameAssignment_14_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_14_1 = (RuleCall)cGroup_14.eContents().get(1);
		private final Assignment cDbFunctionAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cDbFunctionIDENTTerminalRuleCall_14_2_0 = (RuleCall)cDbFunctionAssignment_14_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_14_3 = (RuleCall)cGroup_14.eContents().get(3);
		private final Assignment cDbTableAssignment_14_4 = (Assignment)cGroup_14.eContents().get(4);
		private final RuleCall cDbTableIDENTTerminalRuleCall_14_4_0 = (RuleCall)cDbTableAssignment_14_4.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cNameAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cNameProcedureResultSetKeyword_15_0_0 = (Keyword)cNameAssignment_15_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_15_1 = (RuleCall)cGroup_15.eContents().get(1);
		private final Assignment cDbProcedureAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cDbProcedureIDENTTerminalRuleCall_15_2_0 = (RuleCall)cDbProcedureAssignment_15_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_15_3 = (RuleCall)cGroup_15.eContents().get(3);
		private final Assignment cDbTableAssignment_15_4 = (Assignment)cGroup_15.eContents().get(4);
		private final RuleCall cDbTableIDENTTerminalRuleCall_15_4_0 = (RuleCall)cDbTableAssignment_15_4.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cNameAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_16_0_0 = (Keyword)cNameAssignment_16_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_16_1 = (RuleCall)cGroup_16.eContents().get(1);
		private final Assignment cDebugAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_16_2_0 = (RuleCall)cDebugAssignment_16_2.eContents().get(0);
		private final Assignment cNameAssignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final Keyword cNameGenerateOperatorsKeyword_17_0 = (Keyword)cNameAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cNameAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cNameOptimizeInsertKeyword_18_0_0 = (Keyword)cNameAssignment_18_0.eContents().get(0);
		private final Group cGroup_18_1 = (Group)cGroup_18.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_18_1_0 = (RuleCall)cGroup_18_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_18_1_1 = (Assignment)cGroup_18_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_18_1_1_0 = (RuleCall)cDbTablesAssignment_18_1_1.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Assignment cNameAssignment_19_0 = (Assignment)cGroup_19.eContents().get(0);
		private final Keyword cNameOptionalFeaturesKeyword_19_0_0 = (Keyword)cNameAssignment_19_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_19_1 = (RuleCall)cGroup_19.eContents().get(1);
		private final Assignment cDbStatementAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cDbStatementIDENTTerminalRuleCall_19_2_0 = (RuleCall)cDbStatementAssignment_19_2.eContents().get(0);
		private final Group cGroup_19_3 = (Group)cGroup_19.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_19_3_0 = (RuleCall)cGroup_19_3.eContents().get(0);
		private final Assignment cOptionalFeaturesAssignment_19_3_1 = (Assignment)cGroup_19_3.eContents().get(1);
		private final RuleCall cOptionalFeaturesIDENTTerminalRuleCall_19_3_1_0 = (RuleCall)cOptionalFeaturesAssignment_19_3_1.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Assignment cNameAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final Keyword cNameActiveFilterKeyword_20_0_0 = (Keyword)cNameAssignment_20_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_20_1 = (RuleCall)cGroup_20.eContents().get(1);
		private final Assignment cActiveFilterAssignment_20_2 = (Assignment)cGroup_20.eContents().get(2);
		private final RuleCall cActiveFilterPropertyValueParserRuleCall_20_2_0 = (RuleCall)cActiveFilterAssignment_20_2.eContents().get(0);
		
		//MetagenProperty:
		//	name="global-sequence" WS+ sequence=IDENT type=IDENT? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//	dbNotTables+=IDENT)+)? | name="table-sequence" WS+ dbTable=IDENT WS+ sequence=IDENT (WS+ type=IDENT)? |
		//	name="global-identity" (WS+ identity=IDENT type=IDENT?)? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//	dbNotTables+=IDENT)+)? | name="table-identity" WS+ dbTable=IDENT WS+ identity=IDENT (WS+ type=IDENT)? |
		//	name="column-meta-type" WS+ dbTable=IDENT (WS+ metaTypes+=MetaTypeAssignement)+ | name="statement-meta-type" WS+
		//	dbStatement=IDENT (WS+ metaTypes+=MetaTypeAssignement)+ | name="make-it-final" | name="like-columns" (WS+
		//	dbTable=IDENT (WS+ dbColumns+=IDENT)+)? | name="not-like-columns" (WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)? |
		//	name="generate-sequences" | name="generate-identities" | name="generate-idgenerators" |
		//	name="generate-default-idgenerators" | name="function-result" WS+ dbFunction=IDENT WS+ type=IDENT |
		//	name="function-result-set" WS+ dbFunction=IDENT WS+ dbTable=IDENT | name="procedure-result-set" WS+ dbProcedure=IDENT
		//	WS+ dbTable=IDENT | name="debug-level" WS+ debug=DebugLevelAssignement | name="generate-operators" |
		//	name="optimize-insert" (WS+ dbTables+=IDENT)* | name="optional-features" WS+ dbStatement=IDENT (WS+
		//	optionalFeatures+=IDENT)+ | name="active-filter" WS+ activeFilter=PropertyValue;
		public ParserRule getRule() { return rule; }

		//name="global-sequence" WS+ sequence=IDENT type=IDENT? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//dbNotTables+=IDENT)+)? | name="table-sequence" WS+ dbTable=IDENT WS+ sequence=IDENT (WS+ type=IDENT)? |
		//name="global-identity" (WS+ identity=IDENT type=IDENT?)? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//dbNotTables+=IDENT)+)? | name="table-identity" WS+ dbTable=IDENT WS+ identity=IDENT (WS+ type=IDENT)? |
		//name="column-meta-type" WS+ dbTable=IDENT (WS+ metaTypes+=MetaTypeAssignement)+ | name="statement-meta-type" WS+
		//dbStatement=IDENT (WS+ metaTypes+=MetaTypeAssignement)+ | name="make-it-final" | name="like-columns" (WS+ dbTable=IDENT
		//(WS+ dbColumns+=IDENT)+)? | name="not-like-columns" (WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)? |
		//name="generate-sequences" | name="generate-identities" | name="generate-idgenerators" |
		//name="generate-default-idgenerators" | name="function-result" WS+ dbFunction=IDENT WS+ type=IDENT |
		//name="function-result-set" WS+ dbFunction=IDENT WS+ dbTable=IDENT | name="procedure-result-set" WS+ dbProcedure=IDENT
		//WS+ dbTable=IDENT | name="debug-level" WS+ debug=DebugLevelAssignement | name="generate-operators" |
		//name="optimize-insert" (WS+ dbTables+=IDENT)* | name="optional-features" WS+ dbStatement=IDENT (WS+
		//optionalFeatures+=IDENT)+ | name="active-filter" WS+ activeFilter=PropertyValue
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="global-sequence" WS+ sequence=IDENT type=IDENT? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//dbNotTables+=IDENT)+)?
		public Group getGroup_0() { return cGroup_0; }

		//name="global-sequence"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"global-sequence"
		public Keyword getNameGlobalSequenceKeyword_0_0_0() { return cNameGlobalSequenceKeyword_0_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//sequence=IDENT
		public Assignment getSequenceAssignment_0_2() { return cSequenceAssignment_0_2; }

		//IDENT
		public RuleCall getSequenceIDENTTerminalRuleCall_0_2_0() { return cSequenceIDENTTerminalRuleCall_0_2_0; }

		//type=IDENT?
		public Assignment getTypeAssignment_0_3() { return cTypeAssignment_0_3; }

		//IDENT
		public RuleCall getTypeIDENTTerminalRuleCall_0_3_0() { return cTypeIDENTTerminalRuleCall_0_3_0; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_0_4() { return cGroup_0_4; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_4_0() { return cWSTerminalRuleCall_0_4_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_0_4_1() { return cPLUSTerminalRuleCall_0_4_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_0_4_2() { return cGroup_0_4_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_4_2_0() { return cWSTerminalRuleCall_0_4_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_0_4_2_1() { return cDbTablesAssignment_0_4_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_0_4_2_1_0() { return cDbTablesIDENTTerminalRuleCall_0_4_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_0_5() { return cGroup_0_5; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_5_0() { return cWSTerminalRuleCall_0_5_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_0_5_1() { return cMINUSTerminalRuleCall_0_5_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_0_5_2() { return cGroup_0_5_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_5_2_0() { return cWSTerminalRuleCall_0_5_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_0_5_2_1() { return cDbNotTablesAssignment_0_5_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_0_5_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_0_5_2_1_0; }

		//name="table-sequence" WS+ dbTable=IDENT WS+ sequence=IDENT (WS+ type=IDENT)?
		public Group getGroup_1() { return cGroup_1; }

		//name="table-sequence"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"table-sequence"
		public Keyword getNameTableSequenceKeyword_1_0_0() { return cNameTableSequenceKeyword_1_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_1_2() { return cDbTableAssignment_1_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_1_2_0() { return cDbTableIDENTTerminalRuleCall_1_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//sequence=IDENT
		public Assignment getSequenceAssignment_1_4() { return cSequenceAssignment_1_4; }

		//IDENT
		public RuleCall getSequenceIDENTTerminalRuleCall_1_4_0() { return cSequenceIDENTTerminalRuleCall_1_4_0; }

		//(WS+ type=IDENT)?
		public Group getGroup_1_5() { return cGroup_1_5; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_5_0() { return cWSTerminalRuleCall_1_5_0; }

		//type=IDENT
		public Assignment getTypeAssignment_1_5_1() { return cTypeAssignment_1_5_1; }

		//IDENT
		public RuleCall getTypeIDENTTerminalRuleCall_1_5_1_0() { return cTypeIDENTTerminalRuleCall_1_5_1_0; }

		//name="global-identity" (WS+ identity=IDENT type=IDENT?)? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
		//dbNotTables+=IDENT)+)?
		public Group getGroup_2() { return cGroup_2; }

		//name="global-identity"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"global-identity"
		public Keyword getNameGlobalIdentityKeyword_2_0_0() { return cNameGlobalIdentityKeyword_2_0_0; }

		//(WS+ identity=IDENT type=IDENT?)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_1_0() { return cWSTerminalRuleCall_2_1_0; }

		//identity=IDENT
		public Assignment getIdentityAssignment_2_1_1() { return cIdentityAssignment_2_1_1; }

		//IDENT
		public RuleCall getIdentityIDENTTerminalRuleCall_2_1_1_0() { return cIdentityIDENTTerminalRuleCall_2_1_1_0; }

		//type=IDENT?
		public Assignment getTypeAssignment_2_1_2() { return cTypeAssignment_2_1_2; }

		//IDENT
		public RuleCall getTypeIDENTTerminalRuleCall_2_1_2_0() { return cTypeIDENTTerminalRuleCall_2_1_2_0; }

		//(WS+ PLUS (WS+ dbTables+=IDENT)+)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_2_0() { return cWSTerminalRuleCall_2_2_0; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_2_2_1() { return cPLUSTerminalRuleCall_2_2_1; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_2_2_2() { return cGroup_2_2_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_2_2_0() { return cWSTerminalRuleCall_2_2_2_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_2_2_2_1() { return cDbTablesAssignment_2_2_2_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_2_2_2_1_0() { return cDbTablesIDENTTerminalRuleCall_2_2_2_1_0; }

		//(WS+ MINUS (WS+ dbNotTables+=IDENT)+)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_3_0() { return cWSTerminalRuleCall_2_3_0; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_2_3_1() { return cMINUSTerminalRuleCall_2_3_1; }

		//(WS+ dbNotTables+=IDENT)+
		public Group getGroup_2_3_2() { return cGroup_2_3_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_3_2_0() { return cWSTerminalRuleCall_2_3_2_0; }

		//dbNotTables+=IDENT
		public Assignment getDbNotTablesAssignment_2_3_2_1() { return cDbNotTablesAssignment_2_3_2_1; }

		//IDENT
		public RuleCall getDbNotTablesIDENTTerminalRuleCall_2_3_2_1_0() { return cDbNotTablesIDENTTerminalRuleCall_2_3_2_1_0; }

		//name="table-identity" WS+ dbTable=IDENT WS+ identity=IDENT (WS+ type=IDENT)?
		public Group getGroup_3() { return cGroup_3; }

		//name="table-identity"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"table-identity"
		public Keyword getNameTableIdentityKeyword_3_0_0() { return cNameTableIdentityKeyword_3_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_1() { return cWSTerminalRuleCall_3_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_3_2() { return cDbTableAssignment_3_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_3_2_0() { return cDbTableIDENTTerminalRuleCall_3_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_3() { return cWSTerminalRuleCall_3_3; }

		//identity=IDENT
		public Assignment getIdentityAssignment_3_4() { return cIdentityAssignment_3_4; }

		//IDENT
		public RuleCall getIdentityIDENTTerminalRuleCall_3_4_0() { return cIdentityIDENTTerminalRuleCall_3_4_0; }

		//(WS+ type=IDENT)?
		public Group getGroup_3_5() { return cGroup_3_5; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_5_0() { return cWSTerminalRuleCall_3_5_0; }

		//type=IDENT
		public Assignment getTypeAssignment_3_5_1() { return cTypeAssignment_3_5_1; }

		//IDENT
		public RuleCall getTypeIDENTTerminalRuleCall_3_5_1_0() { return cTypeIDENTTerminalRuleCall_3_5_1_0; }

		//name="column-meta-type" WS+ dbTable=IDENT (WS+ metaTypes+=MetaTypeAssignement)+
		public Group getGroup_4() { return cGroup_4; }

		//name="column-meta-type"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"column-meta-type"
		public Keyword getNameColumnMetaTypeKeyword_4_0_0() { return cNameColumnMetaTypeKeyword_4_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_4_2() { return cDbTableAssignment_4_2; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_4_2_0() { return cDbTableIDENTTerminalRuleCall_4_2_0; }

		//(WS+ metaTypes+=MetaTypeAssignement)+
		public Group getGroup_4_3() { return cGroup_4_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_4_3_0() { return cWSTerminalRuleCall_4_3_0; }

		//metaTypes+=MetaTypeAssignement
		public Assignment getMetaTypesAssignment_4_3_1() { return cMetaTypesAssignment_4_3_1; }

		//MetaTypeAssignement
		public RuleCall getMetaTypesMetaTypeAssignementParserRuleCall_4_3_1_0() { return cMetaTypesMetaTypeAssignementParserRuleCall_4_3_1_0; }

		//name="statement-meta-type" WS+ dbStatement=IDENT (WS+ metaTypes+=MetaTypeAssignement)+
		public Group getGroup_5() { return cGroup_5; }

		//name="statement-meta-type"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"statement-meta-type"
		public Keyword getNameStatementMetaTypeKeyword_5_0_0() { return cNameStatementMetaTypeKeyword_5_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_5_1() { return cWSTerminalRuleCall_5_1; }

		//dbStatement=IDENT
		public Assignment getDbStatementAssignment_5_2() { return cDbStatementAssignment_5_2; }

		//IDENT
		public RuleCall getDbStatementIDENTTerminalRuleCall_5_2_0() { return cDbStatementIDENTTerminalRuleCall_5_2_0; }

		//(WS+ metaTypes+=MetaTypeAssignement)+
		public Group getGroup_5_3() { return cGroup_5_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_5_3_0() { return cWSTerminalRuleCall_5_3_0; }

		//metaTypes+=MetaTypeAssignement
		public Assignment getMetaTypesAssignment_5_3_1() { return cMetaTypesAssignment_5_3_1; }

		//MetaTypeAssignement
		public RuleCall getMetaTypesMetaTypeAssignementParserRuleCall_5_3_1_0() { return cMetaTypesMetaTypeAssignementParserRuleCall_5_3_1_0; }

		//name="make-it-final"
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//"make-it-final"
		public Keyword getNameMakeItFinalKeyword_6_0() { return cNameMakeItFinalKeyword_6_0; }

		//name="like-columns" (WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)?
		public Group getGroup_7() { return cGroup_7; }

		//name="like-columns"
		public Assignment getNameAssignment_7_0() { return cNameAssignment_7_0; }

		//"like-columns"
		public Keyword getNameLikeColumnsKeyword_7_0_0() { return cNameLikeColumnsKeyword_7_0_0; }

		//(WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)?
		public Group getGroup_7_1() { return cGroup_7_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_7_1_0() { return cWSTerminalRuleCall_7_1_0; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_7_1_1() { return cDbTableAssignment_7_1_1; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_7_1_1_0() { return cDbTableIDENTTerminalRuleCall_7_1_1_0; }

		//(WS+ dbColumns+=IDENT)+
		public Group getGroup_7_1_2() { return cGroup_7_1_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_7_1_2_0() { return cWSTerminalRuleCall_7_1_2_0; }

		//dbColumns+=IDENT
		public Assignment getDbColumnsAssignment_7_1_2_1() { return cDbColumnsAssignment_7_1_2_1; }

		//IDENT
		public RuleCall getDbColumnsIDENTTerminalRuleCall_7_1_2_1_0() { return cDbColumnsIDENTTerminalRuleCall_7_1_2_1_0; }

		//name="not-like-columns" (WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)?
		public Group getGroup_8() { return cGroup_8; }

		//name="not-like-columns"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"not-like-columns"
		public Keyword getNameNotLikeColumnsKeyword_8_0_0() { return cNameNotLikeColumnsKeyword_8_0_0; }

		//(WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)?
		public Group getGroup_8_1() { return cGroup_8_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_1_0() { return cWSTerminalRuleCall_8_1_0; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_8_1_1() { return cDbTableAssignment_8_1_1; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_8_1_1_0() { return cDbTableIDENTTerminalRuleCall_8_1_1_0; }

		//(WS+ dbColumns+=IDENT)+
		public Group getGroup_8_1_2() { return cGroup_8_1_2; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_1_2_0() { return cWSTerminalRuleCall_8_1_2_0; }

		//dbColumns+=IDENT
		public Assignment getDbColumnsAssignment_8_1_2_1() { return cDbColumnsAssignment_8_1_2_1; }

		//IDENT
		public RuleCall getDbColumnsIDENTTerminalRuleCall_8_1_2_1_0() { return cDbColumnsIDENTTerminalRuleCall_8_1_2_1_0; }

		//name="generate-sequences"
		public Assignment getNameAssignment_9() { return cNameAssignment_9; }

		//"generate-sequences"
		public Keyword getNameGenerateSequencesKeyword_9_0() { return cNameGenerateSequencesKeyword_9_0; }

		//name="generate-identities"
		public Assignment getNameAssignment_10() { return cNameAssignment_10; }

		//"generate-identities"
		public Keyword getNameGenerateIdentitiesKeyword_10_0() { return cNameGenerateIdentitiesKeyword_10_0; }

		//name="generate-idgenerators"
		public Assignment getNameAssignment_11() { return cNameAssignment_11; }

		//"generate-idgenerators"
		public Keyword getNameGenerateIdgeneratorsKeyword_11_0() { return cNameGenerateIdgeneratorsKeyword_11_0; }

		//name="generate-default-idgenerators"
		public Assignment getNameAssignment_12() { return cNameAssignment_12; }

		//"generate-default-idgenerators"
		public Keyword getNameGenerateDefaultIdgeneratorsKeyword_12_0() { return cNameGenerateDefaultIdgeneratorsKeyword_12_0; }

		//name="function-result" WS+ dbFunction=IDENT WS+ type=IDENT
		public Group getGroup_13() { return cGroup_13; }

		//name="function-result"
		public Assignment getNameAssignment_13_0() { return cNameAssignment_13_0; }

		//"function-result"
		public Keyword getNameFunctionResultKeyword_13_0_0() { return cNameFunctionResultKeyword_13_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_13_1() { return cWSTerminalRuleCall_13_1; }

		//dbFunction=IDENT
		public Assignment getDbFunctionAssignment_13_2() { return cDbFunctionAssignment_13_2; }

		//IDENT
		public RuleCall getDbFunctionIDENTTerminalRuleCall_13_2_0() { return cDbFunctionIDENTTerminalRuleCall_13_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_13_3() { return cWSTerminalRuleCall_13_3; }

		//type=IDENT
		public Assignment getTypeAssignment_13_4() { return cTypeAssignment_13_4; }

		//IDENT
		public RuleCall getTypeIDENTTerminalRuleCall_13_4_0() { return cTypeIDENTTerminalRuleCall_13_4_0; }

		//name="function-result-set" WS+ dbFunction=IDENT WS+ dbTable=IDENT
		public Group getGroup_14() { return cGroup_14; }

		//name="function-result-set"
		public Assignment getNameAssignment_14_0() { return cNameAssignment_14_0; }

		//"function-result-set"
		public Keyword getNameFunctionResultSetKeyword_14_0_0() { return cNameFunctionResultSetKeyword_14_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_14_1() { return cWSTerminalRuleCall_14_1; }

		//dbFunction=IDENT
		public Assignment getDbFunctionAssignment_14_2() { return cDbFunctionAssignment_14_2; }

		//IDENT
		public RuleCall getDbFunctionIDENTTerminalRuleCall_14_2_0() { return cDbFunctionIDENTTerminalRuleCall_14_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_14_3() { return cWSTerminalRuleCall_14_3; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_14_4() { return cDbTableAssignment_14_4; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_14_4_0() { return cDbTableIDENTTerminalRuleCall_14_4_0; }

		//name="procedure-result-set" WS+ dbProcedure=IDENT WS+ dbTable=IDENT
		public Group getGroup_15() { return cGroup_15; }

		//name="procedure-result-set"
		public Assignment getNameAssignment_15_0() { return cNameAssignment_15_0; }

		//"procedure-result-set"
		public Keyword getNameProcedureResultSetKeyword_15_0_0() { return cNameProcedureResultSetKeyword_15_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_15_1() { return cWSTerminalRuleCall_15_1; }

		//dbProcedure=IDENT
		public Assignment getDbProcedureAssignment_15_2() { return cDbProcedureAssignment_15_2; }

		//IDENT
		public RuleCall getDbProcedureIDENTTerminalRuleCall_15_2_0() { return cDbProcedureIDENTTerminalRuleCall_15_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_15_3() { return cWSTerminalRuleCall_15_3; }

		//dbTable=IDENT
		public Assignment getDbTableAssignment_15_4() { return cDbTableAssignment_15_4; }

		//IDENT
		public RuleCall getDbTableIDENTTerminalRuleCall_15_4_0() { return cDbTableIDENTTerminalRuleCall_15_4_0; }

		//name="debug-level" WS+ debug=DebugLevelAssignement
		public Group getGroup_16() { return cGroup_16; }

		//name="debug-level"
		public Assignment getNameAssignment_16_0() { return cNameAssignment_16_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_16_0_0() { return cNameDebugLevelKeyword_16_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_16_1() { return cWSTerminalRuleCall_16_1; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_16_2() { return cDebugAssignment_16_2; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_16_2_0() { return cDebugDebugLevelAssignementParserRuleCall_16_2_0; }

		//name="generate-operators"
		public Assignment getNameAssignment_17() { return cNameAssignment_17; }

		//"generate-operators"
		public Keyword getNameGenerateOperatorsKeyword_17_0() { return cNameGenerateOperatorsKeyword_17_0; }

		//name="optimize-insert" (WS+ dbTables+=IDENT)*
		public Group getGroup_18() { return cGroup_18; }

		//name="optimize-insert"
		public Assignment getNameAssignment_18_0() { return cNameAssignment_18_0; }

		//"optimize-insert"
		public Keyword getNameOptimizeInsertKeyword_18_0_0() { return cNameOptimizeInsertKeyword_18_0_0; }

		//(WS+ dbTables+=IDENT)*
		public Group getGroup_18_1() { return cGroup_18_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_18_1_0() { return cWSTerminalRuleCall_18_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_18_1_1() { return cDbTablesAssignment_18_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_18_1_1_0() { return cDbTablesIDENTTerminalRuleCall_18_1_1_0; }

		//name="optional-features" WS+ dbStatement=IDENT (WS+ optionalFeatures+=IDENT)+
		public Group getGroup_19() { return cGroup_19; }

		//name="optional-features"
		public Assignment getNameAssignment_19_0() { return cNameAssignment_19_0; }

		//"optional-features"
		public Keyword getNameOptionalFeaturesKeyword_19_0_0() { return cNameOptionalFeaturesKeyword_19_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_19_1() { return cWSTerminalRuleCall_19_1; }

		//dbStatement=IDENT
		public Assignment getDbStatementAssignment_19_2() { return cDbStatementAssignment_19_2; }

		//IDENT
		public RuleCall getDbStatementIDENTTerminalRuleCall_19_2_0() { return cDbStatementIDENTTerminalRuleCall_19_2_0; }

		//(WS+ optionalFeatures+=IDENT)+
		public Group getGroup_19_3() { return cGroup_19_3; }

		//WS+
		public RuleCall getWSTerminalRuleCall_19_3_0() { return cWSTerminalRuleCall_19_3_0; }

		//optionalFeatures+=IDENT
		public Assignment getOptionalFeaturesAssignment_19_3_1() { return cOptionalFeaturesAssignment_19_3_1; }

		//IDENT
		public RuleCall getOptionalFeaturesIDENTTerminalRuleCall_19_3_1_0() { return cOptionalFeaturesIDENTTerminalRuleCall_19_3_1_0; }

		//name="active-filter" WS+ activeFilter=PropertyValue
		public Group getGroup_20() { return cGroup_20; }

		//name="active-filter"
		public Assignment getNameAssignment_20_0() { return cNameAssignment_20_0; }

		//"active-filter"
		public Keyword getNameActiveFilterKeyword_20_0_0() { return cNameActiveFilterKeyword_20_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_20_1() { return cWSTerminalRuleCall_20_1; }

		//activeFilter=PropertyValue
		public Assignment getActiveFilterAssignment_20_2() { return cActiveFilterAssignment_20_2; }

		//PropertyValue
		public RuleCall getActiveFilterPropertyValueParserRuleCall_20_2_0() { return cActiveFilterPropertyValueParserRuleCall_20_2_0; }
	}

	public class DaogenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DaogenProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameIgnoreTablesKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_0_1_1_0 = (RuleCall)cDbTablesAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameOnlyTablesKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cDbTablesAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDbTablesIDENTTerminalRuleCall_1_1_1_0 = (RuleCall)cDbTablesAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameImplementationPackageKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cImplPackageAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cImplPackageIDENTTerminalRuleCall_2_2_0 = (RuleCall)cImplPackageAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameImplementsInterfacesKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cToImplementsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cToImplementsImplementsAssignementParserRuleCall_3_2_0 = (RuleCall)cToImplementsAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cNameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cNameExtendsClassKeyword_4_0_0 = (Keyword)cNameAssignment_4_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cToExtendsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cToExtendsExtendsAssignementParserRuleCall_4_2_0 = (RuleCall)cToExtendsAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cNameAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cNameImplementsInterfacesGenericsKeyword_5_0_0 = (Keyword)cNameAssignment_5_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cToImplementsGenericsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_5_2_0 = (RuleCall)cToImplementsGenericsAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cNameAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cNameExtendsClassGenericsKeyword_6_0_0 = (Keyword)cNameAssignment_6_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cToExtendsGenericsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_6_2_0 = (RuleCall)cToExtendsGenericsAssignment_6_2.eContents().get(0);
		private final Assignment cNameAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final Keyword cNameMakeItFinalKeyword_7_0 = (Keyword)cNameAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cNameAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cNameFunctionResultKeyword_8_0_0 = (Keyword)cNameAssignment_8_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Assignment cDbFunctionAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cDbFunctionIDENTTerminalRuleCall_8_2_0 = (RuleCall)cDbFunctionAssignment_8_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_8_3 = (RuleCall)cGroup_8.eContents().get(3);
		private final Assignment cResultTypeAssignment_8_4 = (Assignment)cGroup_8.eContents().get(4);
		private final RuleCall cResultTypePojoTypeParserRuleCall_8_4_0 = (RuleCall)cResultTypeAssignment_8_4.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cNameAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cNameDebugLevelKeyword_9_0_0 = (Keyword)cNameAssignment_9_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		private final Assignment cDebugAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDebugDebugLevelAssignementParserRuleCall_9_2_0 = (RuleCall)cDebugAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cNameAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cNameActiveFilterKeyword_10_0_0 = (Keyword)cNameAssignment_10_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final Assignment cActiveFilterAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cActiveFilterPropertyValueParserRuleCall_10_2_0 = (RuleCall)cActiveFilterAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cNameAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final Keyword cNamePackageKeyword_11_0_0 = (Keyword)cNameAssignment_11_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_11_1 = (RuleCall)cGroup_11.eContents().get(1);
		private final Assignment cPckgAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cPckgPropertyValueParserRuleCall_11_2_0 = (RuleCall)cPckgAssignment_11_2.eContents().get(0);
		
		//DaogenProperty:
		//	name="ignore-tables" (WS+ dbTables+=IDENT)+ | name="only-tables" (WS+ dbTables+=IDENT)* |
		//	name="implementation-package" WS+ implPackage=IDENT | name="implements-interfaces" WS+
		//	toImplements=ImplementsAssignement | name="extends-class" WS+ toExtends=ExtendsAssignement |
		//	name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics |
		//	name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics | name="make-it-final" |
		//	name="function-result" WS+ dbFunction=IDENT WS+ resultType=PojoType | name="debug-level" WS+
		//	debug=DebugLevelAssignement | name="active-filter" WS+ activeFilter=PropertyValue | name="package" WS+
		//	pckg=PropertyValue;
		public ParserRule getRule() { return rule; }

		//name="ignore-tables" (WS+ dbTables+=IDENT)+ | name="only-tables" (WS+ dbTables+=IDENT)* | name="implementation-package"
		//WS+ implPackage=IDENT | name="implements-interfaces" WS+ toImplements=ImplementsAssignement | name="extends-class" WS+
		//toExtends=ExtendsAssignement | name="implements-interfaces-generics" WS+
		//toImplementsGenerics=ImplementsAssignementGenerics | name="extends-class-generics" WS+
		//toExtendsGenerics=ExtendsAssignementGenerics | name="make-it-final" | name="function-result" WS+ dbFunction=IDENT WS+
		//resultType=PojoType | name="debug-level" WS+ debug=DebugLevelAssignement | name="active-filter" WS+
		//activeFilter=PropertyValue | name="package" WS+ pckg=PropertyValue
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="ignore-tables" (WS+ dbTables+=IDENT)+
		public Group getGroup_0() { return cGroup_0; }

		//name="ignore-tables"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"ignore-tables"
		public Keyword getNameIgnoreTablesKeyword_0_0_0() { return cNameIgnoreTablesKeyword_0_0_0; }

		//(WS+ dbTables+=IDENT)+
		public Group getGroup_0_1() { return cGroup_0_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_1_0() { return cWSTerminalRuleCall_0_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_0_1_1() { return cDbTablesAssignment_0_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_0_1_1_0() { return cDbTablesIDENTTerminalRuleCall_0_1_1_0; }

		//name="only-tables" (WS+ dbTables+=IDENT)*
		public Group getGroup_1() { return cGroup_1; }

		//name="only-tables"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"only-tables"
		public Keyword getNameOnlyTablesKeyword_1_0_0() { return cNameOnlyTablesKeyword_1_0_0; }

		//(WS+ dbTables+=IDENT)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_1_0() { return cWSTerminalRuleCall_1_1_0; }

		//dbTables+=IDENT
		public Assignment getDbTablesAssignment_1_1_1() { return cDbTablesAssignment_1_1_1; }

		//IDENT
		public RuleCall getDbTablesIDENTTerminalRuleCall_1_1_1_0() { return cDbTablesIDENTTerminalRuleCall_1_1_1_0; }

		//name="implementation-package" WS+ implPackage=IDENT
		public Group getGroup_2() { return cGroup_2; }

		//name="implementation-package"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"implementation-package"
		public Keyword getNameImplementationPackageKeyword_2_0_0() { return cNameImplementationPackageKeyword_2_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_2_1() { return cWSTerminalRuleCall_2_1; }

		//implPackage=IDENT
		public Assignment getImplPackageAssignment_2_2() { return cImplPackageAssignment_2_2; }

		//IDENT
		public RuleCall getImplPackageIDENTTerminalRuleCall_2_2_0() { return cImplPackageIDENTTerminalRuleCall_2_2_0; }

		//name="implements-interfaces" WS+ toImplements=ImplementsAssignement
		public Group getGroup_3() { return cGroup_3; }

		//name="implements-interfaces"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"implements-interfaces"
		public Keyword getNameImplementsInterfacesKeyword_3_0_0() { return cNameImplementsInterfacesKeyword_3_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_3_1() { return cWSTerminalRuleCall_3_1; }

		//toImplements=ImplementsAssignement
		public Assignment getToImplementsAssignment_3_2() { return cToImplementsAssignment_3_2; }

		//ImplementsAssignement
		public RuleCall getToImplementsImplementsAssignementParserRuleCall_3_2_0() { return cToImplementsImplementsAssignementParserRuleCall_3_2_0; }

		//name="extends-class" WS+ toExtends=ExtendsAssignement
		public Group getGroup_4() { return cGroup_4; }

		//name="extends-class"
		public Assignment getNameAssignment_4_0() { return cNameAssignment_4_0; }

		//"extends-class"
		public Keyword getNameExtendsClassKeyword_4_0_0() { return cNameExtendsClassKeyword_4_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//toExtends=ExtendsAssignement
		public Assignment getToExtendsAssignment_4_2() { return cToExtendsAssignment_4_2; }

		//ExtendsAssignement
		public RuleCall getToExtendsExtendsAssignementParserRuleCall_4_2_0() { return cToExtendsExtendsAssignementParserRuleCall_4_2_0; }

		//name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics
		public Group getGroup_5() { return cGroup_5; }

		//name="implements-interfaces-generics"
		public Assignment getNameAssignment_5_0() { return cNameAssignment_5_0; }

		//"implements-interfaces-generics"
		public Keyword getNameImplementsInterfacesGenericsKeyword_5_0_0() { return cNameImplementsInterfacesGenericsKeyword_5_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_5_1() { return cWSTerminalRuleCall_5_1; }

		//toImplementsGenerics=ImplementsAssignementGenerics
		public Assignment getToImplementsGenericsAssignment_5_2() { return cToImplementsGenericsAssignment_5_2; }

		//ImplementsAssignementGenerics
		public RuleCall getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_5_2_0() { return cToImplementsGenericsImplementsAssignementGenericsParserRuleCall_5_2_0; }

		//name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics
		public Group getGroup_6() { return cGroup_6; }

		//name="extends-class-generics"
		public Assignment getNameAssignment_6_0() { return cNameAssignment_6_0; }

		//"extends-class-generics"
		public Keyword getNameExtendsClassGenericsKeyword_6_0_0() { return cNameExtendsClassGenericsKeyword_6_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_6_1() { return cWSTerminalRuleCall_6_1; }

		//toExtendsGenerics=ExtendsAssignementGenerics
		public Assignment getToExtendsGenericsAssignment_6_2() { return cToExtendsGenericsAssignment_6_2; }

		//ExtendsAssignementGenerics
		public RuleCall getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_6_2_0() { return cToExtendsGenericsExtendsAssignementGenericsParserRuleCall_6_2_0; }

		//name="make-it-final"
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }

		//"make-it-final"
		public Keyword getNameMakeItFinalKeyword_7_0() { return cNameMakeItFinalKeyword_7_0; }

		//name="function-result" WS+ dbFunction=IDENT WS+ resultType=PojoType
		public Group getGroup_8() { return cGroup_8; }

		//name="function-result"
		public Assignment getNameAssignment_8_0() { return cNameAssignment_8_0; }

		//"function-result"
		public Keyword getNameFunctionResultKeyword_8_0_0() { return cNameFunctionResultKeyword_8_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_1() { return cWSTerminalRuleCall_8_1; }

		//dbFunction=IDENT
		public Assignment getDbFunctionAssignment_8_2() { return cDbFunctionAssignment_8_2; }

		//IDENT
		public RuleCall getDbFunctionIDENTTerminalRuleCall_8_2_0() { return cDbFunctionIDENTTerminalRuleCall_8_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_3() { return cWSTerminalRuleCall_8_3; }

		//resultType=PojoType
		public Assignment getResultTypeAssignment_8_4() { return cResultTypeAssignment_8_4; }

		//PojoType
		public RuleCall getResultTypePojoTypeParserRuleCall_8_4_0() { return cResultTypePojoTypeParserRuleCall_8_4_0; }

		//name="debug-level" WS+ debug=DebugLevelAssignement
		public Group getGroup_9() { return cGroup_9; }

		//name="debug-level"
		public Assignment getNameAssignment_9_0() { return cNameAssignment_9_0; }

		//"debug-level"
		public Keyword getNameDebugLevelKeyword_9_0_0() { return cNameDebugLevelKeyword_9_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_9_1() { return cWSTerminalRuleCall_9_1; }

		//debug=DebugLevelAssignement
		public Assignment getDebugAssignment_9_2() { return cDebugAssignment_9_2; }

		//DebugLevelAssignement
		public RuleCall getDebugDebugLevelAssignementParserRuleCall_9_2_0() { return cDebugDebugLevelAssignementParserRuleCall_9_2_0; }

		//name="active-filter" WS+ activeFilter=PropertyValue
		public Group getGroup_10() { return cGroup_10; }

		//name="active-filter"
		public Assignment getNameAssignment_10_0() { return cNameAssignment_10_0; }

		//"active-filter"
		public Keyword getNameActiveFilterKeyword_10_0_0() { return cNameActiveFilterKeyword_10_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_10_1() { return cWSTerminalRuleCall_10_1; }

		//activeFilter=PropertyValue
		public Assignment getActiveFilterAssignment_10_2() { return cActiveFilterAssignment_10_2; }

		//PropertyValue
		public RuleCall getActiveFilterPropertyValueParserRuleCall_10_2_0() { return cActiveFilterPropertyValueParserRuleCall_10_2_0; }

		//name="package" WS+ pckg=PropertyValue
		public Group getGroup_11() { return cGroup_11; }

		//name="package"
		public Assignment getNameAssignment_11_0() { return cNameAssignment_11_0; }

		//"package"
		public Keyword getNamePackageKeyword_11_0_0() { return cNamePackageKeyword_11_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_11_1() { return cWSTerminalRuleCall_11_1; }

		//pckg=PropertyValue
		public Assignment getPckgAssignment_11_2() { return cPckgAssignment_11_2; }

		//PropertyValue
		public RuleCall getPckgPropertyValueParserRuleCall_11_2_0() { return cPckgPropertyValueParserRuleCall_11_2_0; }
	}

	public class PropertyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertyValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final RuleCall cRESTTerminalRuleCall_0_0_0 = (RuleCall)cAlternatives_0_0.eContents().get(0);
		private final RuleCall cIDENT_DOTTerminalRuleCall_0_0_1 = (RuleCall)cAlternatives_0_0.eContents().get(1);
		private final RuleCall cIDENTTerminalRuleCall_0_0_2 = (RuleCall)cAlternatives_0_0.eContents().get(2);
		private final RuleCall cNUMBERTerminalRuleCall_0_0_3 = (RuleCall)cAlternatives_0_0.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_0_0_4 = (RuleCall)cAlternatives_0_0.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_0_0_5 = (RuleCall)cAlternatives_0_0.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_0_0_6 = (RuleCall)cAlternatives_0_0.eContents().get(6);
		private final RuleCall cMINUSTerminalRuleCall_0_0_7 = (RuleCall)cAlternatives_0_0.eContents().get(7);
		private final RuleCall cPLUSTerminalRuleCall_0_0_8 = (RuleCall)cAlternatives_0_0.eContents().get(8);
		private final RuleCall cLPARENTerminalRuleCall_0_0_9 = (RuleCall)cAlternatives_0_0.eContents().get(9);
		private final RuleCall cRPARENTerminalRuleCall_0_0_10 = (RuleCall)cAlternatives_0_0.eContents().get(10);
		private final RuleCall cLBRACETerminalRuleCall_0_0_11 = (RuleCall)cAlternatives_0_0.eContents().get(11);
		private final RuleCall cRBRACETerminalRuleCall_0_0_12 = (RuleCall)cAlternatives_0_0.eContents().get(12);
		private final RuleCall cQUESTITerminalRuleCall_0_0_13 = (RuleCall)cAlternatives_0_0.eContents().get(13);
		private final RuleCall cNOTTerminalRuleCall_0_0_14 = (RuleCall)cAlternatives_0_0.eContents().get(14);
		private final RuleCall cBANDTerminalRuleCall_0_0_15 = (RuleCall)cAlternatives_0_0.eContents().get(15);
		private final RuleCall cBORTerminalRuleCall_0_0_16 = (RuleCall)cAlternatives_0_0.eContents().get(16);
		private final RuleCall cHASHTerminalRuleCall_0_0_17 = (RuleCall)cAlternatives_0_0.eContents().get(17);
		private final RuleCall cATTerminalRuleCall_0_0_18 = (RuleCall)cAlternatives_0_0.eContents().get(18);
		private final RuleCall cCARETTerminalRuleCall_0_0_19 = (RuleCall)cAlternatives_0_0.eContents().get(19);
		private final RuleCall cEQUALSTerminalRuleCall_0_0_20 = (RuleCall)cAlternatives_0_0.eContents().get(20);
		private final RuleCall cLESS_THANTerminalRuleCall_0_0_21 = (RuleCall)cAlternatives_0_0.eContents().get(21);
		private final RuleCall cMORE_THANTerminalRuleCall_0_0_22 = (RuleCall)cAlternatives_0_0.eContents().get(22);
		private final RuleCall cPERCENTTerminalRuleCall_0_0_23 = (RuleCall)cAlternatives_0_0.eContents().get(23);
		private final RuleCall cDOTTerminalRuleCall_0_0_24 = (RuleCall)cAlternatives_0_0.eContents().get(24);
		private final RuleCall cANDTerminalRuleCall_0_0_25 = (RuleCall)cAlternatives_0_0.eContents().get(25);
		private final RuleCall cORTerminalRuleCall_0_0_26 = (RuleCall)cAlternatives_0_0.eContents().get(26);
		private final RuleCall cESC_CHARTerminalRuleCall_0_0_27 = (RuleCall)cAlternatives_0_0.eContents().get(27);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_0_1_0 = (Alternatives)cGroup_0_1.eContents().get(0);
		private final RuleCall cRESTTerminalRuleCall_0_1_0_0 = (RuleCall)cAlternatives_0_1_0.eContents().get(0);
		private final RuleCall cIDENT_DOTTerminalRuleCall_0_1_0_1 = (RuleCall)cAlternatives_0_1_0.eContents().get(1);
		private final RuleCall cIDENTTerminalRuleCall_0_1_0_2 = (RuleCall)cAlternatives_0_1_0.eContents().get(2);
		private final RuleCall cNUMBERTerminalRuleCall_0_1_0_3 = (RuleCall)cAlternatives_0_1_0.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_0_1_0_4 = (RuleCall)cAlternatives_0_1_0.eContents().get(4);
		private final RuleCall cCOLONTerminalRuleCall_0_1_0_5 = (RuleCall)cAlternatives_0_1_0.eContents().get(5);
		private final RuleCall cSTRINGTerminalRuleCall_0_1_0_6 = (RuleCall)cAlternatives_0_1_0.eContents().get(6);
		private final RuleCall cCOMMATerminalRuleCall_0_1_0_7 = (RuleCall)cAlternatives_0_1_0.eContents().get(7);
		private final RuleCall cMINUSTerminalRuleCall_0_1_0_8 = (RuleCall)cAlternatives_0_1_0.eContents().get(8);
		private final RuleCall cPLUSTerminalRuleCall_0_1_0_9 = (RuleCall)cAlternatives_0_1_0.eContents().get(9);
		private final RuleCall cLPARENTerminalRuleCall_0_1_0_10 = (RuleCall)cAlternatives_0_1_0.eContents().get(10);
		private final RuleCall cRPARENTerminalRuleCall_0_1_0_11 = (RuleCall)cAlternatives_0_1_0.eContents().get(11);
		private final RuleCall cLBRACETerminalRuleCall_0_1_0_12 = (RuleCall)cAlternatives_0_1_0.eContents().get(12);
		private final RuleCall cRBRACETerminalRuleCall_0_1_0_13 = (RuleCall)cAlternatives_0_1_0.eContents().get(13);
		private final RuleCall cQUESTITerminalRuleCall_0_1_0_14 = (RuleCall)cAlternatives_0_1_0.eContents().get(14);
		private final RuleCall cNOTTerminalRuleCall_0_1_0_15 = (RuleCall)cAlternatives_0_1_0.eContents().get(15);
		private final RuleCall cBANDTerminalRuleCall_0_1_0_16 = (RuleCall)cAlternatives_0_1_0.eContents().get(16);
		private final RuleCall cBORTerminalRuleCall_0_1_0_17 = (RuleCall)cAlternatives_0_1_0.eContents().get(17);
		private final RuleCall cHASHTerminalRuleCall_0_1_0_18 = (RuleCall)cAlternatives_0_1_0.eContents().get(18);
		private final RuleCall cATTerminalRuleCall_0_1_0_19 = (RuleCall)cAlternatives_0_1_0.eContents().get(19);
		private final RuleCall cCARETTerminalRuleCall_0_1_0_20 = (RuleCall)cAlternatives_0_1_0.eContents().get(20);
		private final RuleCall cEQUALSTerminalRuleCall_0_1_0_21 = (RuleCall)cAlternatives_0_1_0.eContents().get(21);
		private final RuleCall cLESS_THANTerminalRuleCall_0_1_0_22 = (RuleCall)cAlternatives_0_1_0.eContents().get(22);
		private final RuleCall cMORE_THANTerminalRuleCall_0_1_0_23 = (RuleCall)cAlternatives_0_1_0.eContents().get(23);
		private final RuleCall cPERCENTTerminalRuleCall_0_1_0_24 = (RuleCall)cAlternatives_0_1_0.eContents().get(24);
		private final RuleCall cDOTTerminalRuleCall_0_1_0_25 = (RuleCall)cAlternatives_0_1_0.eContents().get(25);
		private final RuleCall cANDTerminalRuleCall_0_1_0_26 = (RuleCall)cAlternatives_0_1_0.eContents().get(26);
		private final RuleCall cORTerminalRuleCall_0_1_0_27 = (RuleCall)cAlternatives_0_1_0.eContents().get(27);
		private final RuleCall cESC_CHARTerminalRuleCall_0_1_0_28 = (RuleCall)cAlternatives_0_1_0.eContents().get(28);
		private final RuleCall cSTRING_VALUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PropertyValue:
		//	(REST | IDENT_DOT | IDENT | NUMBER | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
		//	QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR)
		//	=> (REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE
		//	| QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR |
		//	ESC_CHAR)* | STRING_VALUE;
		public ParserRule getRule() { return rule; }

		//(REST | IDENT_DOT | IDENT | NUMBER | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE | QUESTI
		//| NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR) => (REST
		//| IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE | QUESTI
		//| NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR)* |
		//STRING_VALUE
		public Alternatives getAlternatives() { return cAlternatives; }

		//(REST | IDENT_DOT | IDENT | NUMBER | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE | QUESTI
		//| NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR) => (REST
		//| IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE | QUESTI
		//| NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR)*
		public Group getGroup_0() { return cGroup_0; }

		//REST | IDENT_DOT | IDENT | NUMBER | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE | QUESTI |
		//NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//REST
		public RuleCall getRESTTerminalRuleCall_0_0_0() { return cRESTTerminalRuleCall_0_0_0; }

		//IDENT_DOT
		public RuleCall getIDENT_DOTTerminalRuleCall_0_0_1() { return cIDENT_DOTTerminalRuleCall_0_0_1; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_0_0_2() { return cIDENTTerminalRuleCall_0_0_2; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_0_0_3() { return cNUMBERTerminalRuleCall_0_0_3; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_0_0_4() { return cCOLONTerminalRuleCall_0_0_4; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0_0_5() { return cSTRINGTerminalRuleCall_0_0_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_0_0_6() { return cCOMMATerminalRuleCall_0_0_6; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_0_0_7() { return cMINUSTerminalRuleCall_0_0_7; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_0_0_8() { return cPLUSTerminalRuleCall_0_0_8; }

		//LPAREN
		public RuleCall getLPARENTerminalRuleCall_0_0_9() { return cLPARENTerminalRuleCall_0_0_9; }

		//RPAREN
		public RuleCall getRPARENTerminalRuleCall_0_0_10() { return cRPARENTerminalRuleCall_0_0_10; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_0_0_11() { return cLBRACETerminalRuleCall_0_0_11; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_0_0_12() { return cRBRACETerminalRuleCall_0_0_12; }

		//QUESTI
		public RuleCall getQUESTITerminalRuleCall_0_0_13() { return cQUESTITerminalRuleCall_0_0_13; }

		//NOT
		public RuleCall getNOTTerminalRuleCall_0_0_14() { return cNOTTerminalRuleCall_0_0_14; }

		//BAND
		public RuleCall getBANDTerminalRuleCall_0_0_15() { return cBANDTerminalRuleCall_0_0_15; }

		//BOR
		public RuleCall getBORTerminalRuleCall_0_0_16() { return cBORTerminalRuleCall_0_0_16; }

		//HASH
		public RuleCall getHASHTerminalRuleCall_0_0_17() { return cHASHTerminalRuleCall_0_0_17; }

		//AT
		public RuleCall getATTerminalRuleCall_0_0_18() { return cATTerminalRuleCall_0_0_18; }

		//CARET
		public RuleCall getCARETTerminalRuleCall_0_0_19() { return cCARETTerminalRuleCall_0_0_19; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_0_0_20() { return cEQUALSTerminalRuleCall_0_0_20; }

		//LESS_THAN
		public RuleCall getLESS_THANTerminalRuleCall_0_0_21() { return cLESS_THANTerminalRuleCall_0_0_21; }

		//MORE_THAN
		public RuleCall getMORE_THANTerminalRuleCall_0_0_22() { return cMORE_THANTerminalRuleCall_0_0_22; }

		//PERCENT
		public RuleCall getPERCENTTerminalRuleCall_0_0_23() { return cPERCENTTerminalRuleCall_0_0_23; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_0_0_24() { return cDOTTerminalRuleCall_0_0_24; }

		//AND
		public RuleCall getANDTerminalRuleCall_0_0_25() { return cANDTerminalRuleCall_0_0_25; }

		//OR
		public RuleCall getORTerminalRuleCall_0_0_26() { return cORTerminalRuleCall_0_0_26; }

		//ESC_CHAR
		public RuleCall getESC_CHARTerminalRuleCall_0_0_27() { return cESC_CHARTerminalRuleCall_0_0_27; }

		//=> (REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
		//QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR)*
		public Group getGroup_0_1() { return cGroup_0_1; }

		//REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
		//QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR
		public Alternatives getAlternatives_0_1_0() { return cAlternatives_0_1_0; }

		//REST
		public RuleCall getRESTTerminalRuleCall_0_1_0_0() { return cRESTTerminalRuleCall_0_1_0_0; }

		//IDENT_DOT
		public RuleCall getIDENT_DOTTerminalRuleCall_0_1_0_1() { return cIDENT_DOTTerminalRuleCall_0_1_0_1; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_0_1_0_2() { return cIDENTTerminalRuleCall_0_1_0_2; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_0_1_0_3() { return cNUMBERTerminalRuleCall_0_1_0_3; }

		//WS
		public RuleCall getWSTerminalRuleCall_0_1_0_4() { return cWSTerminalRuleCall_0_1_0_4; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_0_1_0_5() { return cCOLONTerminalRuleCall_0_1_0_5; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0_1_0_6() { return cSTRINGTerminalRuleCall_0_1_0_6; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_0_1_0_7() { return cCOMMATerminalRuleCall_0_1_0_7; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_0_1_0_8() { return cMINUSTerminalRuleCall_0_1_0_8; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_0_1_0_9() { return cPLUSTerminalRuleCall_0_1_0_9; }

		//LPAREN
		public RuleCall getLPARENTerminalRuleCall_0_1_0_10() { return cLPARENTerminalRuleCall_0_1_0_10; }

		//RPAREN
		public RuleCall getRPARENTerminalRuleCall_0_1_0_11() { return cRPARENTerminalRuleCall_0_1_0_11; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_0_1_0_12() { return cLBRACETerminalRuleCall_0_1_0_12; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_0_1_0_13() { return cRBRACETerminalRuleCall_0_1_0_13; }

		//QUESTI
		public RuleCall getQUESTITerminalRuleCall_0_1_0_14() { return cQUESTITerminalRuleCall_0_1_0_14; }

		//NOT
		public RuleCall getNOTTerminalRuleCall_0_1_0_15() { return cNOTTerminalRuleCall_0_1_0_15; }

		//BAND
		public RuleCall getBANDTerminalRuleCall_0_1_0_16() { return cBANDTerminalRuleCall_0_1_0_16; }

		//BOR
		public RuleCall getBORTerminalRuleCall_0_1_0_17() { return cBORTerminalRuleCall_0_1_0_17; }

		//HASH
		public RuleCall getHASHTerminalRuleCall_0_1_0_18() { return cHASHTerminalRuleCall_0_1_0_18; }

		//AT
		public RuleCall getATTerminalRuleCall_0_1_0_19() { return cATTerminalRuleCall_0_1_0_19; }

		//CARET
		public RuleCall getCARETTerminalRuleCall_0_1_0_20() { return cCARETTerminalRuleCall_0_1_0_20; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_0_1_0_21() { return cEQUALSTerminalRuleCall_0_1_0_21; }

		//LESS_THAN
		public RuleCall getLESS_THANTerminalRuleCall_0_1_0_22() { return cLESS_THANTerminalRuleCall_0_1_0_22; }

		//MORE_THAN
		public RuleCall getMORE_THANTerminalRuleCall_0_1_0_23() { return cMORE_THANTerminalRuleCall_0_1_0_23; }

		//PERCENT
		public RuleCall getPERCENTTerminalRuleCall_0_1_0_24() { return cPERCENTTerminalRuleCall_0_1_0_24; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_0_1_0_25() { return cDOTTerminalRuleCall_0_1_0_25; }

		//AND
		public RuleCall getANDTerminalRuleCall_0_1_0_26() { return cANDTerminalRuleCall_0_1_0_26; }

		//OR
		public RuleCall getORTerminalRuleCall_0_1_0_27() { return cORTerminalRuleCall_0_1_0_27; }

		//ESC_CHAR
		public RuleCall getESC_CHARTerminalRuleCall_0_1_0_28() { return cESC_CHARTerminalRuleCall_0_1_0_28; }

		//STRING_VALUE
		public RuleCall getSTRING_VALUETerminalRuleCall_1() { return cSTRING_VALUETerminalRuleCall_1; }
	}

	public class PojoDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPojoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cClassAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Alternatives cClassAlternatives_2_0_0 = (Alternatives)cClassAssignment_2_0.eContents().get(0);
		private final RuleCall cClassIDENTTerminalRuleCall_2_0_0_0 = (RuleCall)cClassAlternatives_2_0_0.eContents().get(0);
		private final RuleCall cClassIDENT_DOTTerminalRuleCall_2_0_0_1 = (RuleCall)cClassAlternatives_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final Assignment cClassxAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cClassxJvmTypeCrossReference_2_1_1_0 = (CrossReference)cClassxAssignment_2_1_1.eContents().get(0);
		private final RuleCall cClassxJvmTypeQualifiedNameParserRuleCall_2_1_1_0_1 = (RuleCall)cClassxJvmTypeCrossReference_2_1_1_0.eContents().get(1);
		private final RuleCall cSEMICOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PojoDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"pojo" name=IDENT (class=(IDENT | IDENT_DOT) | COLON classx=[jvmTypes::JvmType|QualifiedName]) SEMICOLON;
		public ParserRule getRule() { return rule; }

		//"pojo" name=IDENT (class=(IDENT | IDENT_DOT) | COLON classx=[jvmTypes::JvmType|QualifiedName]) SEMICOLON
		public Group getGroup() { return cGroup; }

		//"pojo"
		public Keyword getPojoKeyword_0() { return cPojoKeyword_0; }

		//name=IDENT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0() { return cNameIDENTTerminalRuleCall_1_0; }

		//class=(IDENT | IDENT_DOT) | COLON classx=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//class=(IDENT | IDENT_DOT)
		public Assignment getClassAssignment_2_0() { return cClassAssignment_2_0; }

		//IDENT | IDENT_DOT
		public Alternatives getClassAlternatives_2_0_0() { return cClassAlternatives_2_0_0; }

		//IDENT
		public RuleCall getClassIDENTTerminalRuleCall_2_0_0_0() { return cClassIDENTTerminalRuleCall_2_0_0_0; }

		//IDENT_DOT
		public RuleCall getClassIDENT_DOTTerminalRuleCall_2_0_0_1() { return cClassIDENT_DOTTerminalRuleCall_2_0_0_1; }

		//COLON classx=[jvmTypes::JvmType|QualifiedName]
		public Group getGroup_2_1() { return cGroup_2_1; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1_0() { return cCOLONTerminalRuleCall_2_1_0; }

		//classx=[jvmTypes::JvmType|QualifiedName]
		public Assignment getClassxAssignment_2_1_1() { return cClassxAssignment_2_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getClassxJvmTypeCrossReference_2_1_1_0() { return cClassxJvmTypeCrossReference_2_1_1_0; }

		//QualifiedName
		public RuleCall getClassxJvmTypeQualifiedNameParserRuleCall_2_1_1_0_1() { return cClassxJvmTypeQualifiedNameParserRuleCall_2_1_1_0_1; }

		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_3() { return cSEMICOLONTerminalRuleCall_3; }
	}

	public class TableDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableIDENTTerminalRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//TableDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"table" name=IDENT table=IDENT SEMICOLON;
		public ParserRule getRule() { return rule; }

		//"table" name=IDENT table=IDENT SEMICOLON
		public Group getGroup() { return cGroup; }

		//"table"
		public Keyword getTableKeyword_0() { return cTableKeyword_0; }

		//name=IDENT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0() { return cNameIDENTTerminalRuleCall_1_0; }

		//table=IDENT
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }

		//IDENT
		public RuleCall getTableIDENTTerminalRuleCall_2_0() { return cTableIDENTTerminalRuleCall_2_0; }

		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_3() { return cSEMICOLONTerminalRuleCall_3; }
	}

	public class ProcedureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcedureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcedureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableIDENTTerminalRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ProcedureDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"procedure" name=IDENT table=IDENT SEMICOLON;
		public ParserRule getRule() { return rule; }

		//"procedure" name=IDENT table=IDENT SEMICOLON
		public Group getGroup() { return cGroup; }

		//"procedure"
		public Keyword getProcedureKeyword_0() { return cProcedureKeyword_0; }

		//name=IDENT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0() { return cNameIDENTTerminalRuleCall_1_0; }

		//table=IDENT
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }

		//IDENT
		public RuleCall getTableIDENTTerminalRuleCall_2_0() { return cTableIDENTTerminalRuleCall_2_0; }

		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_3() { return cSEMICOLONTerminalRuleCall_3; }
	}

	public class FunctionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunctionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableIDENTTerminalRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final RuleCall cSEMICOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//FunctionDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"function" name=IDENT table=IDENT SEMICOLON;
		public ParserRule getRule() { return rule; }

		//"function" name=IDENT table=IDENT SEMICOLON
		public Group getGroup() { return cGroup; }

		//"function"
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }

		//name=IDENT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0() { return cNameIDENTTerminalRuleCall_1_0; }

		//table=IDENT
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }

		//IDENT
		public RuleCall getTableIDENTTerminalRuleCall_2_0() { return cTableIDENTTerminalRuleCall_2_0; }

		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_3() { return cSEMICOLONTerminalRuleCall_3; }
	}

	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRESTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDENT_DOTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cIDENTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNUMBERTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCOLONTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSTRINGTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cCOMMATerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cMINUSTerminalRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cLPARENTerminalRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cRPARENTerminalRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cLBRACETerminalRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cRBRACETerminalRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cQUESTITerminalRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cNOTTerminalRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cBANDTerminalRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cBORTerminalRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cHASHTerminalRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cATTerminalRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cCARETTerminalRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cEQUALSTerminalRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cLESS_THANTerminalRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cMORE_THANTerminalRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cPERCENTTerminalRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cANDTerminalRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cORTerminalRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cESC_CHARTerminalRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		
		//FeatureValue:
		//	(REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
		//	QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | AND | OR | ESC_CHAR)+;
		public ParserRule getRule() { return rule; }

		//(REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
		//QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | AND | OR | ESC_CHAR)+
		public Alternatives getAlternatives() { return cAlternatives; }

		//REST
		public RuleCall getRESTTerminalRuleCall_0() { return cRESTTerminalRuleCall_0; }

		//IDENT_DOT
		public RuleCall getIDENT_DOTTerminalRuleCall_1() { return cIDENT_DOTTerminalRuleCall_1; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_2() { return cIDENTTerminalRuleCall_2; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_3() { return cNUMBERTerminalRuleCall_3; }

		//WS
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_5() { return cCOLONTerminalRuleCall_5; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_6() { return cSTRINGTerminalRuleCall_6; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_7() { return cCOMMATerminalRuleCall_7; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_8() { return cMINUSTerminalRuleCall_8; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }

		//LPAREN
		public RuleCall getLPARENTerminalRuleCall_10() { return cLPARENTerminalRuleCall_10; }

		//RPAREN
		public RuleCall getRPARENTerminalRuleCall_11() { return cRPARENTerminalRuleCall_11; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_12() { return cLBRACETerminalRuleCall_12; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_13() { return cRBRACETerminalRuleCall_13; }

		//QUESTI
		public RuleCall getQUESTITerminalRuleCall_14() { return cQUESTITerminalRuleCall_14; }

		//NOT
		public RuleCall getNOTTerminalRuleCall_15() { return cNOTTerminalRuleCall_15; }

		//BAND
		public RuleCall getBANDTerminalRuleCall_16() { return cBANDTerminalRuleCall_16; }

		//BOR
		public RuleCall getBORTerminalRuleCall_17() { return cBORTerminalRuleCall_17; }

		//HASH
		public RuleCall getHASHTerminalRuleCall_18() { return cHASHTerminalRuleCall_18; }

		//AT
		public RuleCall getATTerminalRuleCall_19() { return cATTerminalRuleCall_19; }

		//CARET
		public RuleCall getCARETTerminalRuleCall_20() { return cCARETTerminalRuleCall_20; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_21() { return cEQUALSTerminalRuleCall_21; }

		//LESS_THAN
		public RuleCall getLESS_THANTerminalRuleCall_22() { return cLESS_THANTerminalRuleCall_22; }

		//MORE_THAN
		public RuleCall getMORE_THANTerminalRuleCall_23() { return cMORE_THANTerminalRuleCall_23; }

		//PERCENT
		public RuleCall getPERCENTTerminalRuleCall_24() { return cPERCENTTerminalRuleCall_24; }

		//AND
		public RuleCall getANDTerminalRuleCall_25() { return cANDTerminalRuleCall_25; }

		//OR
		public RuleCall getORTerminalRuleCall_26() { return cORTerminalRuleCall_26; }

		//ESC_CHAR
		public RuleCall getESC_CHARTerminalRuleCall_27() { return cESC_CHARTerminalRuleCall_27; }
	}

	public class PojoTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cNativeAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Alternatives cNativeAlternatives_0_0_0 = (Alternatives)cNativeAssignment_0_0.eContents().get(0);
		private final Keyword cNative_voidKeyword_0_0_0_0 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(0);
		private final Keyword cNative_charKeyword_0_0_0_1 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(1);
		private final Keyword cNative_byteKeyword_0_0_0_2 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(2);
		private final Keyword cNative_shortKeyword_0_0_0_3 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(3);
		private final Keyword cNative_intKeyword_0_0_0_4 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(4);
		private final Keyword cNative_longKeyword_0_0_0_5 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(5);
		private final Keyword cNative_floatKeyword_0_0_0_6 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(6);
		private final Keyword cNative_doubleKeyword_0_0_0_7 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(7);
		private final Keyword cNative_booleanKeyword_0_0_0_8 = (Keyword)cNativeAlternatives_0_0_0.eContents().get(8);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cGroup_0_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_0_1_0_0 = (RuleCall)cGroup_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1_0_1 = (Alternatives)cGroup_0_1_0.eContents().get(1);
		private final Group cGroup_0_1_0_1_0 = (Group)cAlternatives_0_1_0_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_0_1_0_1_0_0 = (RuleCall)cGroup_0_1_0_1_0.eContents().get(0);
		private final Assignment cRefAssignment_0_1_0_1_0_1 = (Assignment)cGroup_0_1_0_1_0.eContents().get(1);
		private final CrossReference cRefPojoEntityCrossReference_0_1_0_1_0_1_0 = (CrossReference)cRefAssignment_0_1_0_1_0_1.eContents().get(0);
		private final RuleCall cRefPojoEntityIDENTTerminalRuleCall_0_1_0_1_0_1_0_1 = (RuleCall)cRefPojoEntityCrossReference_0_1_0_1_0_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_0_1_0_1_1 = (Assignment)cAlternatives_0_1_0_1.eContents().get(1);
		private final CrossReference cTypeJvmTypeCrossReference_0_1_0_1_1_0 = (CrossReference)cTypeAssignment_0_1_0_1_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeQualifiedNameParserRuleCall_0_1_0_1_1_0_1 = (RuleCall)cTypeJvmTypeCrossReference_0_1_0_1_1_0.eContents().get(1);
		private final Group cGroup_0_1_1 = (Group)cGroup_0_1.eContents().get(1);
		private final RuleCall cLESS_THANTerminalRuleCall_0_1_1_0 = (RuleCall)cGroup_0_1_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1_1_1 = (Alternatives)cGroup_0_1_1.eContents().get(1);
		private final Group cGroup_0_1_1_1_0 = (Group)cAlternatives_0_1_1_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_0_1_1_1_0_0 = (RuleCall)cGroup_0_1_1_1_0.eContents().get(0);
		private final Assignment cGrefAssignment_0_1_1_1_0_1 = (Assignment)cGroup_0_1_1_1_0.eContents().get(1);
		private final CrossReference cGrefPojoEntityCrossReference_0_1_1_1_0_1_0 = (CrossReference)cGrefAssignment_0_1_1_1_0_1.eContents().get(0);
		private final RuleCall cGrefPojoEntityIDENTTerminalRuleCall_0_1_1_1_0_1_0_1 = (RuleCall)cGrefPojoEntityCrossReference_0_1_1_1_0_1_0.eContents().get(1);
		private final Assignment cGtypeAssignment_0_1_1_1_1 = (Assignment)cAlternatives_0_1_1_1.eContents().get(1);
		private final CrossReference cGtypeJvmTypeCrossReference_0_1_1_1_1_0 = (CrossReference)cGtypeAssignment_0_1_1_1_1.eContents().get(0);
		private final RuleCall cGtypeJvmTypeQualifiedNameParserRuleCall_0_1_1_1_1_0_1 = (RuleCall)cGtypeJvmTypeCrossReference_0_1_1_1_1_0.eContents().get(1);
		private final RuleCall cMORE_THANTerminalRuleCall_0_1_1_2 = (RuleCall)cGroup_0_1_1.eContents().get(2);
		private final Assignment cArrayAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cArrayLeftSquareBracketRightSquareBracketKeyword_1_0 = (Keyword)cArrayAssignment_1.eContents().get(0);
		
		////SimpleType:
		////	(native = ('_void'|'_char'|'_byte'|'_short'|'_int'|'_long'|'_float'|'_double'|'_boolean') |
		////	(COLON (COLON ref=[PojoEntity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName]));
		//PojoType:
		//	(native=("_void" | "_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON
		//	(COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON gref=[PojoEntity|IDENT] |
		//	gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?) array?="[]"?;
		public ParserRule getRule() { return rule; }

		//(native=("_void" | "_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON (COLON
		//ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON gref=[PojoEntity|IDENT] |
		//gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?) array?="[]"?
		public Group getGroup() { return cGroup; }

		//native=("_void" | "_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON (COLON
		//ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON gref=[PojoEntity|IDENT] |
		//gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//native=("_void" | "_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean")
		public Assignment getNativeAssignment_0_0() { return cNativeAssignment_0_0; }

		//"_void" | "_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean"
		public Alternatives getNativeAlternatives_0_0_0() { return cNativeAlternatives_0_0_0; }

		//"_void"
		public Keyword getNative_voidKeyword_0_0_0_0() { return cNative_voidKeyword_0_0_0_0; }

		//"_char"
		public Keyword getNative_charKeyword_0_0_0_1() { return cNative_charKeyword_0_0_0_1; }

		//"_byte"
		public Keyword getNative_byteKeyword_0_0_0_2() { return cNative_byteKeyword_0_0_0_2; }

		//"_short"
		public Keyword getNative_shortKeyword_0_0_0_3() { return cNative_shortKeyword_0_0_0_3; }

		//"_int"
		public Keyword getNative_intKeyword_0_0_0_4() { return cNative_intKeyword_0_0_0_4; }

		//"_long"
		public Keyword getNative_longKeyword_0_0_0_5() { return cNative_longKeyword_0_0_0_5; }

		//"_float"
		public Keyword getNative_floatKeyword_0_0_0_6() { return cNative_floatKeyword_0_0_0_6; }

		//"_double"
		public Keyword getNative_doubleKeyword_0_0_0_7() { return cNative_doubleKeyword_0_0_0_7; }

		//"_boolean"
		public Keyword getNative_booleanKeyword_0_0_0_8() { return cNative_booleanKeyword_0_0_0_8; }

		//(COLON (COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON
		//gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?
		public Group getGroup_0_1() { return cGroup_0_1; }

		//COLON (COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName])
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_0_1_0_0() { return cCOLONTerminalRuleCall_0_1_0_0; }

		//COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_0_1_0_1() { return cAlternatives_0_1_0_1; }

		//COLON ref=[PojoEntity|IDENT]
		public Group getGroup_0_1_0_1_0() { return cGroup_0_1_0_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_0_1_0_1_0_0() { return cCOLONTerminalRuleCall_0_1_0_1_0_0; }

		//ref=[PojoEntity|IDENT]
		public Assignment getRefAssignment_0_1_0_1_0_1() { return cRefAssignment_0_1_0_1_0_1; }

		//[PojoEntity|IDENT]
		public CrossReference getRefPojoEntityCrossReference_0_1_0_1_0_1_0() { return cRefPojoEntityCrossReference_0_1_0_1_0_1_0; }

		//IDENT
		public RuleCall getRefPojoEntityIDENTTerminalRuleCall_0_1_0_1_0_1_0_1() { return cRefPojoEntityIDENTTerminalRuleCall_0_1_0_1_0_1_0_1; }

		//type=[jvmTypes::JvmType|QualifiedName]
		public Assignment getTypeAssignment_0_1_0_1_1() { return cTypeAssignment_0_1_0_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getTypeJvmTypeCrossReference_0_1_0_1_1_0() { return cTypeJvmTypeCrossReference_0_1_0_1_1_0; }

		//QualifiedName
		public RuleCall getTypeJvmTypeQualifiedNameParserRuleCall_0_1_0_1_1_0_1() { return cTypeJvmTypeQualifiedNameParserRuleCall_0_1_0_1_1_0_1; }

		//(LESS_THAN (COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }

		//LESS_THAN
		public RuleCall getLESS_THANTerminalRuleCall_0_1_1_0() { return cLESS_THANTerminalRuleCall_0_1_1_0; }

		//COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_0_1_1_1() { return cAlternatives_0_1_1_1; }

		//COLON gref=[PojoEntity|IDENT]
		public Group getGroup_0_1_1_1_0() { return cGroup_0_1_1_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_0_1_1_1_0_0() { return cCOLONTerminalRuleCall_0_1_1_1_0_0; }

		//gref=[PojoEntity|IDENT]
		public Assignment getGrefAssignment_0_1_1_1_0_1() { return cGrefAssignment_0_1_1_1_0_1; }

		//[PojoEntity|IDENT]
		public CrossReference getGrefPojoEntityCrossReference_0_1_1_1_0_1_0() { return cGrefPojoEntityCrossReference_0_1_1_1_0_1_0; }

		//IDENT
		public RuleCall getGrefPojoEntityIDENTTerminalRuleCall_0_1_1_1_0_1_0_1() { return cGrefPojoEntityIDENTTerminalRuleCall_0_1_1_1_0_1_0_1; }

		//gtype=[jvmTypes::JvmType|QualifiedName]
		public Assignment getGtypeAssignment_0_1_1_1_1() { return cGtypeAssignment_0_1_1_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getGtypeJvmTypeCrossReference_0_1_1_1_1_0() { return cGtypeJvmTypeCrossReference_0_1_1_1_1_0; }

		//QualifiedName
		public RuleCall getGtypeJvmTypeQualifiedNameParserRuleCall_0_1_1_1_1_0_1() { return cGtypeJvmTypeQualifiedNameParserRuleCall_0_1_1_1_1_0_1; }

		//MORE_THAN
		public RuleCall getMORE_THANTerminalRuleCall_0_1_1_2() { return cMORE_THANTerminalRuleCall_0_1_1_2; }

		//array?="[]"?
		public Assignment getArrayAssignment_1() { return cArrayAssignment_1; }

		//"[]"
		public Keyword getArrayLeftSquareBracketRightSquareBracketKeyword_1_0() { return cArrayLeftSquareBracketRightSquareBracketKeyword_1_0; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameIDENT_DOTTerminalRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSuffixKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuffixAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Alternatives cSuffixAlternatives_2_1_0 = (Alternatives)cSuffixAssignment_2_1.eContents().get(0);
		private final RuleCall cSuffixIDENTTerminalRuleCall_2_1_0_0 = (RuleCall)cSuffixAlternatives_2_1_0.eContents().get(0);
		private final RuleCall cSuffixNUMBERTerminalRuleCall_2_1_0_1 = (RuleCall)cSuffixAlternatives_2_1_0.eContents().get(1);
		private final RuleCall cLBRACETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsAbstractPojoEntityParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//PackageDeclaration hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"package" name=(IDENT | IDENT_DOT) ("suffix" suffix=(IDENT | NUMBER))? LBRACE elements+=AbstractPojoEntity* RBRACE;
		public ParserRule getRule() { return rule; }

		//"package" name=(IDENT | IDENT_DOT) ("suffix" suffix=(IDENT | NUMBER))? LBRACE elements+=AbstractPojoEntity* RBRACE
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=(IDENT | IDENT_DOT)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT | IDENT_DOT
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0_0() { return cNameIDENTTerminalRuleCall_1_0_0; }

		//IDENT_DOT
		public RuleCall getNameIDENT_DOTTerminalRuleCall_1_0_1() { return cNameIDENT_DOTTerminalRuleCall_1_0_1; }

		//("suffix" suffix=(IDENT | NUMBER))?
		public Group getGroup_2() { return cGroup_2; }

		//"suffix"
		public Keyword getSuffixKeyword_2_0() { return cSuffixKeyword_2_0; }

		//suffix=(IDENT | NUMBER)
		public Assignment getSuffixAssignment_2_1() { return cSuffixAssignment_2_1; }

		//IDENT | NUMBER
		public Alternatives getSuffixAlternatives_2_1_0() { return cSuffixAlternatives_2_1_0; }

		//IDENT
		public RuleCall getSuffixIDENTTerminalRuleCall_2_1_0_0() { return cSuffixIDENTTerminalRuleCall_2_1_0_0; }

		//NUMBER
		public RuleCall getSuffixNUMBERTerminalRuleCall_2_1_0_1() { return cSuffixNUMBERTerminalRuleCall_2_1_0_1; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_3() { return cLBRACETerminalRuleCall_3; }

		//elements+=AbstractPojoEntity*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//AbstractPojoEntity
		public RuleCall getElementsAbstractPojoEntityParserRuleCall_4_0() { return cElementsAbstractPojoEntityParserRuleCall_4_0; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_5() { return cRBRACETerminalRuleCall_5; }
	}

	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeJvmTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeJvmTypeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cTypeJvmTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Assignment cFeaturesAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cFeaturesAnnotationPropertyParserRuleCall_1_3_0 = (RuleCall)cFeaturesAssignment_1_3.eContents().get(0);
		
		//Annotation:
		//	type=[jvmTypes::JvmType|QualifiedName] (COLON COLON COLON features+=AnnotationProperty+)?;
		public ParserRule getRule() { return rule; }

		//type=[jvmTypes::JvmType|QualifiedName] (COLON COLON COLON features+=AnnotationProperty+)?
		public Group getGroup() { return cGroup; }

		//type=[jvmTypes::JvmType|QualifiedName]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getTypeJvmTypeCrossReference_0_0() { return cTypeJvmTypeCrossReference_0_0; }

		//QualifiedName
		public RuleCall getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1() { return cTypeJvmTypeQualifiedNameParserRuleCall_0_0_1; }

		//(COLON COLON COLON features+=AnnotationProperty+)?
		public Group getGroup_1() { return cGroup_1; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1() { return cCOLONTerminalRuleCall_1_1; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2() { return cCOLONTerminalRuleCall_1_2; }

		//features+=AnnotationProperty+
		public Assignment getFeaturesAssignment_1_3() { return cFeaturesAssignment_1_3; }

		//AnnotationProperty
		public RuleCall getFeaturesAnnotationPropertyParserRuleCall_1_3_0() { return cFeaturesAnnotationPropertyParserRuleCall_1_3_0; }
	}

	public class AnnotationPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cAlternatives_2_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_2_1_0_0 = (RuleCall)cGroup_2_1_0.eContents().get(0);
		private final Assignment cRefAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final CrossReference cRefPojoEntityCrossReference_2_1_0_1_0 = (CrossReference)cRefAssignment_2_1_0_1.eContents().get(0);
		private final RuleCall cRefPojoEntityIDENTTerminalRuleCall_2_1_0_1_0_1 = (RuleCall)cRefPojoEntityCrossReference_2_1_0_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_2_1_1 = (Assignment)cAlternatives_2_1.eContents().get(1);
		private final CrossReference cTypeJvmTypeCrossReference_2_1_1_0 = (CrossReference)cTypeAssignment_2_1_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeQualifiedNameParserRuleCall_2_1_1_0_1 = (RuleCall)cTypeJvmTypeCrossReference_2_1_1_0.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cNumberAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cNumberNUMBERTerminalRuleCall_3_0_0 = (RuleCall)cNumberAssignment_3_0.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Assignment cConstantAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cConstantIDENTTerminalRuleCall_3_2_0 = (RuleCall)cConstantAssignment_3_2.eContents().get(0);
		
		//AnnotationProperty:
		//	COMMA? name=IDENT (COLON (COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName]))? (number=NUMBER |
		//	value=STRING_VALUE | constant=IDENT);
		public ParserRule getRule() { return rule; }

		//COMMA? name=IDENT (COLON (COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName]))? (number=NUMBER |
		//value=STRING_VALUE | constant=IDENT)
		public Group getGroup() { return cGroup; }

		//COMMA?
		public RuleCall getCOMMATerminalRuleCall_0() { return cCOMMATerminalRuleCall_0; }

		//name=IDENT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0() { return cNameIDENTTerminalRuleCall_1_0; }

		//(COLON (COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName]))?
		public Group getGroup_2() { return cGroup_2; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_0() { return cCOLONTerminalRuleCall_2_0; }

		//COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//COLON ref=[PojoEntity|IDENT]
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1_0_0() { return cCOLONTerminalRuleCall_2_1_0_0; }

		//ref=[PojoEntity|IDENT]
		public Assignment getRefAssignment_2_1_0_1() { return cRefAssignment_2_1_0_1; }

		//[PojoEntity|IDENT]
		public CrossReference getRefPojoEntityCrossReference_2_1_0_1_0() { return cRefPojoEntityCrossReference_2_1_0_1_0; }

		//IDENT
		public RuleCall getRefPojoEntityIDENTTerminalRuleCall_2_1_0_1_0_1() { return cRefPojoEntityIDENTTerminalRuleCall_2_1_0_1_0_1; }

		//type=[jvmTypes::JvmType|QualifiedName]
		public Assignment getTypeAssignment_2_1_1() { return cTypeAssignment_2_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getTypeJvmTypeCrossReference_2_1_1_0() { return cTypeJvmTypeCrossReference_2_1_1_0; }

		//QualifiedName
		public RuleCall getTypeJvmTypeQualifiedNameParserRuleCall_2_1_1_0_1() { return cTypeJvmTypeQualifiedNameParserRuleCall_2_1_1_0_1; }

		//number=NUMBER | value=STRING_VALUE | constant=IDENT
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//number=NUMBER
		public Assignment getNumberAssignment_3_0() { return cNumberAssignment_3_0; }

		//NUMBER
		public RuleCall getNumberNUMBERTerminalRuleCall_3_0_0() { return cNumberNUMBERTerminalRuleCall_3_0_0; }

		//value=STRING_VALUE
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }

		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_3_1_0() { return cValueSTRING_VALUETerminalRuleCall_3_1_0; }

		//constant=IDENT
		public Assignment getConstantAssignment_3_2() { return cConstantAssignment_3_2; }

		//IDENT
		public RuleCall getConstantIDENTTerminalRuleCall_3_2_0() { return cConstantIDENTTerminalRuleCall_3_2_0; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPojoEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entity:
		//	PojoEntity | EnumEntity;
		public ParserRule getRule() { return rule; }

		//PojoEntity | EnumEntity
		public Alternatives getAlternatives() { return cAlternatives; }

		//PojoEntity
		public RuleCall getPojoEntityParserRuleCall_0() { return cPojoEntityParserRuleCall_0; }

		//EnumEntity
		public RuleCall getEnumEntityParserRuleCall_1() { return cEnumEntityParserRuleCall_1; }
	}

	public class AnnotatedEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotatedEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_1_0_0 = (RuleCall)cGroup_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1_0_1 = (Alternatives)cGroup_0_1_0.eContents().get(1);
		private final Group cGroup_0_1_0_1_0 = (Group)cAlternatives_0_1_0_1.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_1_0_1_0_0 = (RuleCall)cGroup_0_1_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1_0_1_0_1 = (Alternatives)cGroup_0_1_0_1_0.eContents().get(1);
		private final Group cGroup_0_1_0_1_0_1_0 = (Group)cAlternatives_0_1_0_1_0_1.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_1_0_1_0_1_0_0 = (RuleCall)cGroup_0_1_0_1_0_1_0.eContents().get(0);
		private final Assignment cConflictAnnotationsAssignment_0_1_0_1_0_1_0_1 = (Assignment)cGroup_0_1_0_1_0_1_0.eContents().get(1);
		private final RuleCall cConflictAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0_1_0 = (RuleCall)cConflictAnnotationsAssignment_0_1_0_1_0_1_0_1.eContents().get(0);
		private final Assignment cStaticAnnotationsAssignment_0_1_0_1_0_1_1 = (Assignment)cAlternatives_0_1_0_1_0_1.eContents().get(1);
		private final RuleCall cStaticAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_1_0 = (RuleCall)cStaticAnnotationsAssignment_0_1_0_1_0_1_1.eContents().get(0);
		private final Assignment cConstructorAnnotationsAssignment_0_1_0_1_1 = (Assignment)cAlternatives_0_1_0_1.eContents().get(1);
		private final RuleCall cConstructorAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0 = (RuleCall)cConstructorAnnotationsAssignment_0_1_0_1_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_0_1_1 = (Assignment)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_0_1_1_0 = (RuleCall)cAnnotationsAssignment_0_1_1.eContents().get(0);
		private final Assignment cEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntityEntityParserRuleCall_1_0 = (RuleCall)cEntityAssignment_1.eContents().get(0);
		
		//AnnotatedEntity:
		//	(AT (AT (AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) | constructorAnnotations+=Annotation)
		//	| annotations+=Annotation))* entity=Entity;
		public ParserRule getRule() { return rule; }

		//(=> AT (AT (AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) |
		//constructorAnnotations+=Annotation) | annotations+=Annotation))* entity=Entity
		public Group getGroup() { return cGroup; }

		//(=> AT (AT (AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) |
		//constructorAnnotations+=Annotation) | annotations+=Annotation))*
		public Group getGroup_0() { return cGroup_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_0() { return cATTerminalRuleCall_0_0; }

		//=> AT (AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) | constructorAnnotations+=Annotation) |
		//annotations+=Annotation
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//=> AT (AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) | constructorAnnotations+=Annotation)
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_1_0_0() { return cATTerminalRuleCall_0_1_0_0; }

		//=> AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) | constructorAnnotations+=Annotation
		public Alternatives getAlternatives_0_1_0_1() { return cAlternatives_0_1_0_1; }

		//=> AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation)
		public Group getGroup_0_1_0_1_0() { return cGroup_0_1_0_1_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_1_0_1_0_0() { return cATTerminalRuleCall_0_1_0_1_0_0; }

		//=> AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation
		public Alternatives getAlternatives_0_1_0_1_0_1() { return cAlternatives_0_1_0_1_0_1; }

		//=> AT conflictAnnotations+=Annotation
		public Group getGroup_0_1_0_1_0_1_0() { return cGroup_0_1_0_1_0_1_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_1_0_1_0_1_0_0() { return cATTerminalRuleCall_0_1_0_1_0_1_0_0; }

		//conflictAnnotations+=Annotation
		public Assignment getConflictAnnotationsAssignment_0_1_0_1_0_1_0_1() { return cConflictAnnotationsAssignment_0_1_0_1_0_1_0_1; }

		//Annotation
		public RuleCall getConflictAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0_1_0() { return cConflictAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0_1_0; }

		//staticAnnotations+=Annotation
		public Assignment getStaticAnnotationsAssignment_0_1_0_1_0_1_1() { return cStaticAnnotationsAssignment_0_1_0_1_0_1_1; }

		//Annotation
		public RuleCall getStaticAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_1_0() { return cStaticAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_1_0; }

		//constructorAnnotations+=Annotation
		public Assignment getConstructorAnnotationsAssignment_0_1_0_1_1() { return cConstructorAnnotationsAssignment_0_1_0_1_1; }

		//Annotation
		public RuleCall getConstructorAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0() { return cConstructorAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0; }

		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_0_1_1() { return cAnnotationsAssignment_0_1_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_0_1_1_0() { return cAnnotationsAnnotationParserRuleCall_0_1_1_0; }

		//entity=Entity
		public Assignment getEntityAssignment_1() { return cEntityAssignment_1; }

		//Entity
		public RuleCall getEntityEntityParserRuleCall_1_0() { return cEntityEntityParserRuleCall_1_0; }
	}

	public class AbstractPojoEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractPojoEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnnotatedEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImportParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cImplementsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cExtendsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cImplPackageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPojoDaoParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//AbstractPojoEntity hidden(ML_COMMENT, SL_COMMENT, WS):
		//	PackageDeclaration | AnnotatedEntity | Import | Implements | Extends | ImplPackage | PojoDao;
		public ParserRule getRule() { return rule; }

		//PackageDeclaration | AnnotatedEntity | Import | Implements | Extends | ImplPackage | PojoDao
		public Alternatives getAlternatives() { return cAlternatives; }

		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_0() { return cPackageDeclarationParserRuleCall_0; }

		//AnnotatedEntity
		public RuleCall getAnnotatedEntityParserRuleCall_1() { return cAnnotatedEntityParserRuleCall_1; }

		//Import
		public RuleCall getImportParserRuleCall_2() { return cImportParserRuleCall_2; }

		//Implements
		public RuleCall getImplementsParserRuleCall_3() { return cImplementsParserRuleCall_3; }

		//Extends
		public RuleCall getExtendsParserRuleCall_4() { return cExtendsParserRuleCall_4; }

		//ImplPackage
		public RuleCall getImplPackageParserRuleCall_5() { return cImplPackageParserRuleCall_5; }

		//PojoDao
		public RuleCall getPojoDaoParserRuleCall_6() { return cPojoDaoParserRuleCall_6; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"import" importedNamespace=QualifiedNameWithWildcard;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}

	public class ImplementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Implements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImplementsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImplementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cImplementsJvmTypeCrossReference_1_0 = (CrossReference)cImplementsAssignment_1.eContents().get(0);
		private final RuleCall cImplementsJvmTypeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cImplementsJvmTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cGenericsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0 = (Keyword)cGenericsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOnlyPojosKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOnlyPojosAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cOnlyPojosPojoEntityCrossReference_3_1_0 = (CrossReference)cOnlyPojosAssignment_3_1.eContents().get(0);
		private final RuleCall cOnlyPojosPojoEntityIDENTTerminalRuleCall_3_1_0_1 = (RuleCall)cOnlyPojosPojoEntityCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOnlyDaosKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOnlyDaosAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cOnlyDaosPojoDaoCrossReference_4_1_0 = (CrossReference)cOnlyDaosAssignment_4_1.eContents().get(0);
		private final RuleCall cOnlyDaosPojoDaoIDENTTerminalRuleCall_4_1_0_1 = (RuleCall)cOnlyDaosPojoDaoCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExceptPojosKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExceptPojosAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cExceptPojosPojoEntityCrossReference_5_1_0 = (CrossReference)cExceptPojosAssignment_5_1.eContents().get(0);
		private final RuleCall cExceptPojosPojoEntityIDENTTerminalRuleCall_5_1_0_1 = (RuleCall)cExceptPojosPojoEntityCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cExceptDaosKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cExceptDaosAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cExceptDaosPojoDaoCrossReference_6_1_0 = (CrossReference)cExceptDaosAssignment_6_1.eContents().get(0);
		private final RuleCall cExceptDaosPojoDaoIDENTTerminalRuleCall_6_1_0_1 = (RuleCall)cExceptDaosPojoDaoCrossReference_6_1_0.eContents().get(1);
		
		//Implements hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"implements" implements=[jvmTypes::JvmType|QualifiedName] generics?="<<>>"? ("onlyPojos"
		//	onlyPojos+=[PojoEntity|IDENT]*)? ("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)? ("exceptPojos"
		//	exceptPojos+=[PojoEntity|IDENT]*)? ("exceptDaos" exceptDaos+=[PojoDao|IDENT]*)?;
		public ParserRule getRule() { return rule; }

		//"implements" implements=[jvmTypes::JvmType|QualifiedName] generics?="<<>>"? ("onlyPojos"
		//onlyPojos+=[PojoEntity|IDENT]*)? ("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)? ("exceptPojos"
		//exceptPojos+=[PojoEntity|IDENT]*)? ("exceptDaos" exceptDaos+=[PojoDao|IDENT]*)?
		public Group getGroup() { return cGroup; }

		//"implements"
		public Keyword getImplementsKeyword_0() { return cImplementsKeyword_0; }

		//implements=[jvmTypes::JvmType|QualifiedName]
		public Assignment getImplementsAssignment_1() { return cImplementsAssignment_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getImplementsJvmTypeCrossReference_1_0() { return cImplementsJvmTypeCrossReference_1_0; }

		//QualifiedName
		public RuleCall getImplementsJvmTypeQualifiedNameParserRuleCall_1_0_1() { return cImplementsJvmTypeQualifiedNameParserRuleCall_1_0_1; }

		//generics?="<<>>"?
		public Assignment getGenericsAssignment_2() { return cGenericsAssignment_2; }

		//"<<>>"
		public Keyword getGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0() { return cGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0; }

		//("onlyPojos" onlyPojos+=[PojoEntity|IDENT]*)?
		public Group getGroup_3() { return cGroup_3; }

		//"onlyPojos"
		public Keyword getOnlyPojosKeyword_3_0() { return cOnlyPojosKeyword_3_0; }

		//onlyPojos+=[PojoEntity|IDENT]*
		public Assignment getOnlyPojosAssignment_3_1() { return cOnlyPojosAssignment_3_1; }

		//[PojoEntity|IDENT]
		public CrossReference getOnlyPojosPojoEntityCrossReference_3_1_0() { return cOnlyPojosPojoEntityCrossReference_3_1_0; }

		//IDENT
		public RuleCall getOnlyPojosPojoEntityIDENTTerminalRuleCall_3_1_0_1() { return cOnlyPojosPojoEntityIDENTTerminalRuleCall_3_1_0_1; }

		//("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)?
		public Group getGroup_4() { return cGroup_4; }

		//"onlyDaos"
		public Keyword getOnlyDaosKeyword_4_0() { return cOnlyDaosKeyword_4_0; }

		//onlyDaos+=[PojoDao|IDENT]*
		public Assignment getOnlyDaosAssignment_4_1() { return cOnlyDaosAssignment_4_1; }

		//[PojoDao|IDENT]
		public CrossReference getOnlyDaosPojoDaoCrossReference_4_1_0() { return cOnlyDaosPojoDaoCrossReference_4_1_0; }

		//IDENT
		public RuleCall getOnlyDaosPojoDaoIDENTTerminalRuleCall_4_1_0_1() { return cOnlyDaosPojoDaoIDENTTerminalRuleCall_4_1_0_1; }

		//("exceptPojos" exceptPojos+=[PojoEntity|IDENT]*)?
		public Group getGroup_5() { return cGroup_5; }

		//"exceptPojos"
		public Keyword getExceptPojosKeyword_5_0() { return cExceptPojosKeyword_5_0; }

		//exceptPojos+=[PojoEntity|IDENT]*
		public Assignment getExceptPojosAssignment_5_1() { return cExceptPojosAssignment_5_1; }

		//[PojoEntity|IDENT]
		public CrossReference getExceptPojosPojoEntityCrossReference_5_1_0() { return cExceptPojosPojoEntityCrossReference_5_1_0; }

		//IDENT
		public RuleCall getExceptPojosPojoEntityIDENTTerminalRuleCall_5_1_0_1() { return cExceptPojosPojoEntityIDENTTerminalRuleCall_5_1_0_1; }

		//("exceptDaos" exceptDaos+=[PojoDao|IDENT]*)?
		public Group getGroup_6() { return cGroup_6; }

		//"exceptDaos"
		public Keyword getExceptDaosKeyword_6_0() { return cExceptDaosKeyword_6_0; }

		//exceptDaos+=[PojoDao|IDENT]*
		public Assignment getExceptDaosAssignment_6_1() { return cExceptDaosAssignment_6_1; }

		//[PojoDao|IDENT]
		public CrossReference getExceptDaosPojoDaoCrossReference_6_1_0() { return cExceptDaosPojoDaoCrossReference_6_1_0; }

		//IDENT
		public RuleCall getExceptDaosPojoDaoIDENTTerminalRuleCall_6_1_0_1() { return cExceptDaosPojoDaoIDENTTerminalRuleCall_6_1_0_1; }
	}

	public class ExtendsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Extends");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExtendsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExtendsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cExtendsJvmTypeCrossReference_1_0 = (CrossReference)cExtendsAssignment_1.eContents().get(0);
		private final RuleCall cExtendsJvmTypeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cExtendsJvmTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cGenericsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0 = (Keyword)cGenericsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOnlyPojosKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOnlyPojosAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cOnlyPojosPojoEntityCrossReference_3_1_0 = (CrossReference)cOnlyPojosAssignment_3_1.eContents().get(0);
		private final RuleCall cOnlyPojosPojoEntityIDENTTerminalRuleCall_3_1_0_1 = (RuleCall)cOnlyPojosPojoEntityCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOnlyDaosKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOnlyDaosAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cOnlyDaosPojoDaoCrossReference_4_1_0 = (CrossReference)cOnlyDaosAssignment_4_1.eContents().get(0);
		private final RuleCall cOnlyDaosPojoDaoIDENTTerminalRuleCall_4_1_0_1 = (RuleCall)cOnlyDaosPojoDaoCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExceptPojosKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExceptPojosAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cExceptPojosPojoEntityCrossReference_5_1_0 = (CrossReference)cExceptPojosAssignment_5_1.eContents().get(0);
		private final RuleCall cExceptPojosPojoEntityIDENTTerminalRuleCall_5_1_0_1 = (RuleCall)cExceptPojosPojoEntityCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cExceptDaosKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cExceptDaosAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cExceptDaosPojoDaoCrossReference_6_1_0 = (CrossReference)cExceptDaosAssignment_6_1.eContents().get(0);
		private final RuleCall cExceptDaosPojoDaoIDENTTerminalRuleCall_6_1_0_1 = (RuleCall)cExceptDaosPojoDaoCrossReference_6_1_0.eContents().get(1);
		
		//Extends hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"extends" extends=[jvmTypes::JvmType|QualifiedName] generics?="<<>>"? ("onlyPojos" onlyPojos+=[PojoEntity|IDENT]*)?
		//	("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)? ("exceptPojos" exceptPojos+=[PojoEntity|IDENT]*)? ("exceptDaos"
		//	exceptDaos+=[PojoDao|IDENT]*)?;
		public ParserRule getRule() { return rule; }

		//"extends" extends=[jvmTypes::JvmType|QualifiedName] generics?="<<>>"? ("onlyPojos" onlyPojos+=[PojoEntity|IDENT]*)?
		//("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)? ("exceptPojos" exceptPojos+=[PojoEntity|IDENT]*)? ("exceptDaos"
		//exceptDaos+=[PojoDao|IDENT]*)?
		public Group getGroup() { return cGroup; }

		//"extends"
		public Keyword getExtendsKeyword_0() { return cExtendsKeyword_0; }

		//extends=[jvmTypes::JvmType|QualifiedName]
		public Assignment getExtendsAssignment_1() { return cExtendsAssignment_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getExtendsJvmTypeCrossReference_1_0() { return cExtendsJvmTypeCrossReference_1_0; }

		//QualifiedName
		public RuleCall getExtendsJvmTypeQualifiedNameParserRuleCall_1_0_1() { return cExtendsJvmTypeQualifiedNameParserRuleCall_1_0_1; }

		//generics?="<<>>"?
		public Assignment getGenericsAssignment_2() { return cGenericsAssignment_2; }

		//"<<>>"
		public Keyword getGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0() { return cGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0; }

		//("onlyPojos" onlyPojos+=[PojoEntity|IDENT]*)?
		public Group getGroup_3() { return cGroup_3; }

		//"onlyPojos"
		public Keyword getOnlyPojosKeyword_3_0() { return cOnlyPojosKeyword_3_0; }

		//onlyPojos+=[PojoEntity|IDENT]*
		public Assignment getOnlyPojosAssignment_3_1() { return cOnlyPojosAssignment_3_1; }

		//[PojoEntity|IDENT]
		public CrossReference getOnlyPojosPojoEntityCrossReference_3_1_0() { return cOnlyPojosPojoEntityCrossReference_3_1_0; }

		//IDENT
		public RuleCall getOnlyPojosPojoEntityIDENTTerminalRuleCall_3_1_0_1() { return cOnlyPojosPojoEntityIDENTTerminalRuleCall_3_1_0_1; }

		//("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)?
		public Group getGroup_4() { return cGroup_4; }

		//"onlyDaos"
		public Keyword getOnlyDaosKeyword_4_0() { return cOnlyDaosKeyword_4_0; }

		//onlyDaos+=[PojoDao|IDENT]*
		public Assignment getOnlyDaosAssignment_4_1() { return cOnlyDaosAssignment_4_1; }

		//[PojoDao|IDENT]
		public CrossReference getOnlyDaosPojoDaoCrossReference_4_1_0() { return cOnlyDaosPojoDaoCrossReference_4_1_0; }

		//IDENT
		public RuleCall getOnlyDaosPojoDaoIDENTTerminalRuleCall_4_1_0_1() { return cOnlyDaosPojoDaoIDENTTerminalRuleCall_4_1_0_1; }

		//("exceptPojos" exceptPojos+=[PojoEntity|IDENT]*)?
		public Group getGroup_5() { return cGroup_5; }

		//"exceptPojos"
		public Keyword getExceptPojosKeyword_5_0() { return cExceptPojosKeyword_5_0; }

		//exceptPojos+=[PojoEntity|IDENT]*
		public Assignment getExceptPojosAssignment_5_1() { return cExceptPojosAssignment_5_1; }

		//[PojoEntity|IDENT]
		public CrossReference getExceptPojosPojoEntityCrossReference_5_1_0() { return cExceptPojosPojoEntityCrossReference_5_1_0; }

		//IDENT
		public RuleCall getExceptPojosPojoEntityIDENTTerminalRuleCall_5_1_0_1() { return cExceptPojosPojoEntityIDENTTerminalRuleCall_5_1_0_1; }

		//("exceptDaos" exceptDaos+=[PojoDao|IDENT]*)?
		public Group getGroup_6() { return cGroup_6; }

		//"exceptDaos"
		public Keyword getExceptDaosKeyword_6_0() { return cExceptDaosKeyword_6_0; }

		//exceptDaos+=[PojoDao|IDENT]*
		public Assignment getExceptDaosAssignment_6_1() { return cExceptDaosAssignment_6_1; }

		//[PojoDao|IDENT]
		public CrossReference getExceptDaosPojoDaoCrossReference_6_1_0() { return cExceptDaosPojoDaoCrossReference_6_1_0; }

		//IDENT
		public RuleCall getExceptDaosPojoDaoIDENTTerminalRuleCall_6_1_0_1() { return cExceptDaosPojoDaoIDENTTerminalRuleCall_6_1_0_1; }
	}

	public class ImplPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImplementationPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameIDENT_DOTTerminalRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		
		//ImplPackage hidden(ML_COMMENT, SL_COMMENT, WS):
		//	"implementation-package" name=(IDENT | IDENT_DOT);
		public ParserRule getRule() { return rule; }

		//"implementation-package" name=(IDENT | IDENT_DOT)
		public Group getGroup() { return cGroup; }

		//"implementation-package"
		public Keyword getImplementationPackageKeyword_0() { return cImplementationPackageKeyword_0; }

		//name=(IDENT | IDENT_DOT)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT | IDENT_DOT
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0_0() { return cNameIDENTTerminalRuleCall_1_0_0; }

		//IDENT_DOT
		public RuleCall getNameIDENT_DOTTerminalRuleCall_1_0_1() { return cNameIDENT_DOTTerminalRuleCall_1_0_1; }
	}

	public class PojoEntityModifier1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoEntityModifier1");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cFinalAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cFinalFinalKeyword_0_0 = (Keyword)cFinalAssignment_0.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		
		//PojoEntityModifier1:
		//	final?="final" | abstract?="abstract";
		public ParserRule getRule() { return rule; }

		//final?="final" | abstract?="abstract"
		public Alternatives getAlternatives() { return cAlternatives; }

		//final?="final"
		public Assignment getFinalAssignment_0() { return cFinalAssignment_0; }

		//"final"
		public Keyword getFinalFinalKeyword_0_0() { return cFinalFinalKeyword_0_0; }

		//abstract?="abstract"
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }
	}

	public class PojoEntityModifier2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoEntityModifier2");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cExtendsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cSuperTypePojoEntityCrossReference_0_1_0 = (CrossReference)cSuperTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cSuperTypePojoEntityIDENTTerminalRuleCall_0_1_0_1 = (RuleCall)cSuperTypePojoEntityCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cDiscriminatorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDiscriminatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cDiscriminatorAlternatives_1_1_0 = (Alternatives)cDiscriminatorAssignment_1_1.eContents().get(0);
		private final RuleCall cDiscriminatorIDENTTerminalRuleCall_1_1_0_0 = (RuleCall)cDiscriminatorAlternatives_1_1_0.eContents().get(0);
		private final RuleCall cDiscriminatorNUMBERTerminalRuleCall_1_1_0_1 = (RuleCall)cDiscriminatorAlternatives_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cOperatorsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cOperatorsOperatorsKeyword_2_0_0 = (Keyword)cOperatorsAssignment_2_0.eContents().get(0);
		private final Assignment cOperatorsSuffixAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOperatorsSuffixIDENTTerminalRuleCall_2_1_0 = (RuleCall)cOperatorsSuffixAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cSerializableKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSernumAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSernumNUMBERTerminalRuleCall_3_1_0 = (RuleCall)cSernumAssignment_3_1.eContents().get(0);
		
		//PojoEntityModifier2:
		//	"extends" superType=[PojoEntity|IDENT] | "discriminator" discriminator=(IDENT | NUMBER) | operators="operators"
		//	operatorsSuffix=IDENT? | "serializable" sernum=NUMBER;
		public ParserRule getRule() { return rule; }

		//"extends" superType=[PojoEntity|IDENT] | "discriminator" discriminator=(IDENT | NUMBER) | operators="operators"
		//operatorsSuffix=IDENT? | "serializable" sernum=NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//"extends" superType=[PojoEntity|IDENT]
		public Group getGroup_0() { return cGroup_0; }

		//"extends"
		public Keyword getExtendsKeyword_0_0() { return cExtendsKeyword_0_0; }

		//superType=[PojoEntity|IDENT]
		public Assignment getSuperTypeAssignment_0_1() { return cSuperTypeAssignment_0_1; }

		//[PojoEntity|IDENT]
		public CrossReference getSuperTypePojoEntityCrossReference_0_1_0() { return cSuperTypePojoEntityCrossReference_0_1_0; }

		//IDENT
		public RuleCall getSuperTypePojoEntityIDENTTerminalRuleCall_0_1_0_1() { return cSuperTypePojoEntityIDENTTerminalRuleCall_0_1_0_1; }

		//"discriminator" discriminator=(IDENT | NUMBER)
		public Group getGroup_1() { return cGroup_1; }

		//"discriminator"
		public Keyword getDiscriminatorKeyword_1_0() { return cDiscriminatorKeyword_1_0; }

		//discriminator=(IDENT | NUMBER)
		public Assignment getDiscriminatorAssignment_1_1() { return cDiscriminatorAssignment_1_1; }

		//IDENT | NUMBER
		public Alternatives getDiscriminatorAlternatives_1_1_0() { return cDiscriminatorAlternatives_1_1_0; }

		//IDENT
		public RuleCall getDiscriminatorIDENTTerminalRuleCall_1_1_0_0() { return cDiscriminatorIDENTTerminalRuleCall_1_1_0_0; }

		//NUMBER
		public RuleCall getDiscriminatorNUMBERTerminalRuleCall_1_1_0_1() { return cDiscriminatorNUMBERTerminalRuleCall_1_1_0_1; }

		//operators="operators" operatorsSuffix=IDENT?
		public Group getGroup_2() { return cGroup_2; }

		//operators="operators"
		public Assignment getOperatorsAssignment_2_0() { return cOperatorsAssignment_2_0; }

		//"operators"
		public Keyword getOperatorsOperatorsKeyword_2_0_0() { return cOperatorsOperatorsKeyword_2_0_0; }

		//operatorsSuffix=IDENT?
		public Assignment getOperatorsSuffixAssignment_2_1() { return cOperatorsSuffixAssignment_2_1; }

		//IDENT
		public RuleCall getOperatorsSuffixIDENTTerminalRuleCall_2_1_0() { return cOperatorsSuffixIDENTTerminalRuleCall_2_1_0; }

		//"serializable" sernum=NUMBER
		public Group getGroup_3() { return cGroup_3; }

		//"serializable"
		public Keyword getSerializableKeyword_3_0() { return cSerializableKeyword_3_0; }

		//sernum=NUMBER
		public Assignment getSernumAssignment_3_1() { return cSernumAssignment_3_1; }

		//NUMBER
		public RuleCall getSernumNUMBERTerminalRuleCall_3_1_0() { return cSernumNUMBERTerminalRuleCall_3_1_0; }
	}

	public class PojoEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModifiers1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cModifiers1PojoEntityModifier1ParserRuleCall_0_0 = (RuleCall)cModifiers1Assignment_0.eContents().get(0);
		private final Keyword cPojoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDENTTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cModifiers2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModifiers2PojoEntityModifier2ParserRuleCall_3_0 = (RuleCall)cModifiers2Assignment_3.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesPojoAnnotatedPropertyParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//PojoEntity hidden(ML_COMMENT, SL_COMMENT, WS):
		//	modifiers1+=PojoEntityModifier1* "pojo" name=IDENT modifiers2+=PojoEntityModifier2* LBRACE
		//	features+=PojoAnnotatedProperty* RBRACE;
		public ParserRule getRule() { return rule; }

		//modifiers1+=PojoEntityModifier1* "pojo" name=IDENT modifiers2+=PojoEntityModifier2* LBRACE
		//features+=PojoAnnotatedProperty* RBRACE
		public Group getGroup() { return cGroup; }

		//modifiers1+=PojoEntityModifier1*
		public Assignment getModifiers1Assignment_0() { return cModifiers1Assignment_0; }

		//PojoEntityModifier1
		public RuleCall getModifiers1PojoEntityModifier1ParserRuleCall_0_0() { return cModifiers1PojoEntityModifier1ParserRuleCall_0_0; }

		//"pojo"
		public Keyword getPojoKeyword_1() { return cPojoKeyword_1; }

		//name=IDENT
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_2_0() { return cNameIDENTTerminalRuleCall_2_0; }

		//modifiers2+=PojoEntityModifier2*
		public Assignment getModifiers2Assignment_3() { return cModifiers2Assignment_3; }

		//PojoEntityModifier2
		public RuleCall getModifiers2PojoEntityModifier2ParserRuleCall_3_0() { return cModifiers2PojoEntityModifier2ParserRuleCall_3_0; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_4() { return cLBRACETerminalRuleCall_4; }

		//features+=PojoAnnotatedProperty*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }

		//PojoAnnotatedProperty
		public RuleCall getFeaturesPojoAnnotatedPropertyParserRuleCall_5_0() { return cFeaturesPojoAnnotatedPropertyParserRuleCall_5_0; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_6() { return cRBRACETerminalRuleCall_6; }
	}

	public class PojoAnnotatedPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoAnnotatedProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_1_0_0 = (RuleCall)cGroup_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1_0_1 = (Alternatives)cGroup_0_1_0.eContents().get(1);
		private final Group cGroup_0_1_0_1_0 = (Group)cAlternatives_0_1_0_1.eContents().get(0);
		private final RuleCall cATTerminalRuleCall_0_1_0_1_0_0 = (RuleCall)cGroup_0_1_0_1_0.eContents().get(0);
		private final Assignment cSetterAnnotationsAssignment_0_1_0_1_0_1 = (Assignment)cGroup_0_1_0_1_0.eContents().get(1);
		private final RuleCall cSetterAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0 = (RuleCall)cSetterAnnotationsAssignment_0_1_0_1_0_1.eContents().get(0);
		private final Assignment cGetterAnnotationsAssignment_0_1_0_1_1 = (Assignment)cAlternatives_0_1_0_1.eContents().get(1);
		private final RuleCall cGetterAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0 = (RuleCall)cGetterAnnotationsAssignment_0_1_0_1_1.eContents().get(0);
		private final Assignment cAttributeAnnotationsAssignment_0_1_1 = (Assignment)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cAttributeAnnotationsAnnotationParserRuleCall_0_1_1_0 = (RuleCall)cAttributeAnnotationsAssignment_0_1_1.eContents().get(0);
		private final Assignment cFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFeaturePojoPropertyParserRuleCall_1_0 = (RuleCall)cFeatureAssignment_1.eContents().get(0);
		
		//PojoAnnotatedProperty:
		//	(AT (AT (AT setterAnnotations+=Annotation | getterAnnotations+=Annotation) | attributeAnnotations+=Annotation))*
		//	feature=PojoProperty;
		public ParserRule getRule() { return rule; }

		//(=> AT (AT (AT setterAnnotations+=Annotation | getterAnnotations+=Annotation) | attributeAnnotations+=Annotation))*
		//feature=PojoProperty
		public Group getGroup() { return cGroup; }

		//(=> AT (AT (AT setterAnnotations+=Annotation | getterAnnotations+=Annotation) | attributeAnnotations+=Annotation))*
		public Group getGroup_0() { return cGroup_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_0() { return cATTerminalRuleCall_0_0; }

		//=> AT (AT setterAnnotations+=Annotation | getterAnnotations+=Annotation) | attributeAnnotations+=Annotation
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//=> AT (AT setterAnnotations+=Annotation | getterAnnotations+=Annotation)
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_1_0_0() { return cATTerminalRuleCall_0_1_0_0; }

		//=> AT setterAnnotations+=Annotation | getterAnnotations+=Annotation
		public Alternatives getAlternatives_0_1_0_1() { return cAlternatives_0_1_0_1; }

		//=> AT setterAnnotations+=Annotation
		public Group getGroup_0_1_0_1_0() { return cGroup_0_1_0_1_0; }

		//=> AT
		public RuleCall getATTerminalRuleCall_0_1_0_1_0_0() { return cATTerminalRuleCall_0_1_0_1_0_0; }

		//setterAnnotations+=Annotation
		public Assignment getSetterAnnotationsAssignment_0_1_0_1_0_1() { return cSetterAnnotationsAssignment_0_1_0_1_0_1; }

		//Annotation
		public RuleCall getSetterAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0() { return cSetterAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0; }

		//getterAnnotations+=Annotation
		public Assignment getGetterAnnotationsAssignment_0_1_0_1_1() { return cGetterAnnotationsAssignment_0_1_0_1_1; }

		//Annotation
		public RuleCall getGetterAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0() { return cGetterAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0; }

		//attributeAnnotations+=Annotation
		public Assignment getAttributeAnnotationsAssignment_0_1_1() { return cAttributeAnnotationsAssignment_0_1_1; }

		//Annotation
		public RuleCall getAttributeAnnotationsAnnotationParserRuleCall_0_1_1_0() { return cAttributeAnnotationsAnnotationParserRuleCall_0_1_1_0; }

		//feature=PojoProperty
		public Assignment getFeatureAssignment_1() { return cFeatureAssignment_1; }

		//PojoProperty
		public RuleCall getFeaturePojoPropertyParserRuleCall_1_0() { return cFeaturePojoPropertyParserRuleCall_1_0; }
	}

	public class PojoPropertyModifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoPropertyModifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cRequiredAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cRequiredRequiredKeyword_0_0 = (Keyword)cRequiredAssignment_0.eContents().get(0);
		private final Assignment cDiscriminatorAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cDiscriminatorDiscriminatorKeyword_1_0 = (Keyword)cDiscriminatorAssignment_1.eContents().get(0);
		private final Assignment cPrimaryKeyAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cPrimaryKeyPrimaryKeyKeyword_2_0 = (Keyword)cPrimaryKeyAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cIndexKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIndexAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIndexNUMBERTerminalRuleCall_3_1_0 = (RuleCall)cIndexAssignment_3_1.eContents().get(0);
		private final Assignment cVersionAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cVersionOptLockKeyword_4_0 = (Keyword)cVersionAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cUpdateColKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cUpdateColumn1Assignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cUpdateColumn1IDENTTerminalRuleCall_5_1_0 = (RuleCall)cUpdateColumn1Assignment_5_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cUpdateColumn2Assignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cUpdateColumn2IDENTTerminalRuleCall_5_3_0 = (RuleCall)cUpdateColumn2Assignment_5_3.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cCreateColKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCreateColumn1Assignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCreateColumn1IDENTTerminalRuleCall_6_1_0 = (RuleCall)cCreateColumn1Assignment_6_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cCreateColumn2Assignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cCreateColumn2IDENTTerminalRuleCall_6_3_0 = (RuleCall)cCreateColumn2Assignment_6_3.eContents().get(0);
		
		//PojoPropertyModifier:
		//	required?="required" | discriminator?="discriminator" | primaryKey?="primaryKey" | "index" index=NUMBER |
		//	version?="optLock" | "updateCol" updateColumn1=IDENT "->" updateColumn2=IDENT | "createCol" createColumn1=IDENT "->"
		//	createColumn2=IDENT;
		public ParserRule getRule() { return rule; }

		//required?="required" | discriminator?="discriminator" | primaryKey?="primaryKey" | "index" index=NUMBER |
		//version?="optLock" | "updateCol" updateColumn1=IDENT "->" updateColumn2=IDENT | "createCol" createColumn1=IDENT "->"
		//createColumn2=IDENT
		public Alternatives getAlternatives() { return cAlternatives; }

		//required?="required"
		public Assignment getRequiredAssignment_0() { return cRequiredAssignment_0; }

		//"required"
		public Keyword getRequiredRequiredKeyword_0_0() { return cRequiredRequiredKeyword_0_0; }

		//discriminator?="discriminator"
		public Assignment getDiscriminatorAssignment_1() { return cDiscriminatorAssignment_1; }

		//"discriminator"
		public Keyword getDiscriminatorDiscriminatorKeyword_1_0() { return cDiscriminatorDiscriminatorKeyword_1_0; }

		//primaryKey?="primaryKey"
		public Assignment getPrimaryKeyAssignment_2() { return cPrimaryKeyAssignment_2; }

		//"primaryKey"
		public Keyword getPrimaryKeyPrimaryKeyKeyword_2_0() { return cPrimaryKeyPrimaryKeyKeyword_2_0; }

		//"index" index=NUMBER
		public Group getGroup_3() { return cGroup_3; }

		//"index"
		public Keyword getIndexKeyword_3_0() { return cIndexKeyword_3_0; }

		//index=NUMBER
		public Assignment getIndexAssignment_3_1() { return cIndexAssignment_3_1; }

		//NUMBER
		public RuleCall getIndexNUMBERTerminalRuleCall_3_1_0() { return cIndexNUMBERTerminalRuleCall_3_1_0; }

		//version?="optLock"
		public Assignment getVersionAssignment_4() { return cVersionAssignment_4; }

		//"optLock"
		public Keyword getVersionOptLockKeyword_4_0() { return cVersionOptLockKeyword_4_0; }

		//"updateCol" updateColumn1=IDENT "->" updateColumn2=IDENT
		public Group getGroup_5() { return cGroup_5; }

		//"updateCol"
		public Keyword getUpdateColKeyword_5_0() { return cUpdateColKeyword_5_0; }

		//updateColumn1=IDENT
		public Assignment getUpdateColumn1Assignment_5_1() { return cUpdateColumn1Assignment_5_1; }

		//IDENT
		public RuleCall getUpdateColumn1IDENTTerminalRuleCall_5_1_0() { return cUpdateColumn1IDENTTerminalRuleCall_5_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_5_2() { return cHyphenMinusGreaterThanSignKeyword_5_2; }

		//updateColumn2=IDENT
		public Assignment getUpdateColumn2Assignment_5_3() { return cUpdateColumn2Assignment_5_3; }

		//IDENT
		public RuleCall getUpdateColumn2IDENTTerminalRuleCall_5_3_0() { return cUpdateColumn2IDENTTerminalRuleCall_5_3_0; }

		//"createCol" createColumn1=IDENT "->" createColumn2=IDENT
		public Group getGroup_6() { return cGroup_6; }

		//"createCol"
		public Keyword getCreateColKeyword_6_0() { return cCreateColKeyword_6_0; }

		//createColumn1=IDENT
		public Assignment getCreateColumn1Assignment_6_1() { return cCreateColumn1Assignment_6_1; }

		//IDENT
		public RuleCall getCreateColumn1IDENTTerminalRuleCall_6_1_0() { return cCreateColumn1IDENTTerminalRuleCall_6_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_6_2() { return cHyphenMinusGreaterThanSignKeyword_6_2; }

		//createColumn2=IDENT
		public Assignment getCreateColumn2Assignment_6_3() { return cCreateColumn2Assignment_6_3; }

		//IDENT
		public RuleCall getCreateColumn2IDENTTerminalRuleCall_6_3_0() { return cCreateColumn2IDENTTerminalRuleCall_6_3_0; }
	}

	public class PojoPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cNativeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Alternatives cNativeAlternatives_1_0_0 = (Alternatives)cNativeAssignment_1_0.eContents().get(0);
		private final Keyword cNative_charKeyword_1_0_0_0 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(0);
		private final Keyword cNative_byteKeyword_1_0_0_1 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(1);
		private final Keyword cNative_shortKeyword_1_0_0_2 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(2);
		private final Keyword cNative_intKeyword_1_0_0_3 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(3);
		private final Keyword cNative_longKeyword_1_0_0_4 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(4);
		private final Keyword cNative_floatKeyword_1_0_0_5 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(5);
		private final Keyword cNative_doubleKeyword_1_0_0_6 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(6);
		private final Keyword cNative_booleanKeyword_1_0_0_7 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(7);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cGroup_1_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1_0_0 = (RuleCall)cGroup_1_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1_0_1 = (Alternatives)cGroup_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_0_1_0 = (Group)cAlternatives_1_1_0_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1_0_1_0_0 = (RuleCall)cGroup_1_1_0_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1_0_1_0_1 = (Alternatives)cGroup_1_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1_0_1_0_1_0 = (Group)cAlternatives_1_1_0_1_0_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1_0_1_0_1_0_0 = (RuleCall)cGroup_1_1_0_1_0_1_0.eContents().get(0);
		private final Assignment cAttrsAssignment_1_1_0_1_0_1_0_1 = (Assignment)cGroup_1_1_0_1_0_1_0.eContents().get(1);
		private final CrossReference cAttrsPojoPropertyCrossReference_1_1_0_1_0_1_0_1_0 = (CrossReference)cAttrsAssignment_1_1_0_1_0_1_0_1.eContents().get(0);
		private final RuleCall cAttrsPojoPropertyIDENTTerminalRuleCall_1_1_0_1_0_1_0_1_0_1 = (RuleCall)cAttrsPojoPropertyCrossReference_1_1_0_1_0_1_0_1_0.eContents().get(1);
		private final Assignment cRefAssignment_1_1_0_1_0_1_1 = (Assignment)cAlternatives_1_1_0_1_0_1.eContents().get(1);
		private final CrossReference cRefEntityCrossReference_1_1_0_1_0_1_1_0 = (CrossReference)cRefAssignment_1_1_0_1_0_1_1.eContents().get(0);
		private final RuleCall cRefEntityIDENTTerminalRuleCall_1_1_0_1_0_1_1_0_1 = (RuleCall)cRefEntityCrossReference_1_1_0_1_0_1_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_1_1_0_1_1 = (Assignment)cAlternatives_1_1_0_1.eContents().get(1);
		private final CrossReference cTypeJvmTypeCrossReference_1_1_0_1_1_0 = (CrossReference)cTypeAssignment_1_1_0_1_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeQualifiedNameParserRuleCall_1_1_0_1_1_0_1 = (RuleCall)cTypeJvmTypeCrossReference_1_1_0_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final RuleCall cLESS_THANTerminalRuleCall_1_1_1_0 = (RuleCall)cGroup_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1_1 = (Alternatives)cGroup_1_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_1_0 = (Group)cAlternatives_1_1_1_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1_1_1_0_0 = (RuleCall)cGroup_1_1_1_1_0.eContents().get(0);
		private final Assignment cGrefAssignment_1_1_1_1_0_1 = (Assignment)cGroup_1_1_1_1_0.eContents().get(1);
		private final CrossReference cGrefPojoEntityCrossReference_1_1_1_1_0_1_0 = (CrossReference)cGrefAssignment_1_1_1_1_0_1.eContents().get(0);
		private final RuleCall cGrefPojoEntityIDENTTerminalRuleCall_1_1_1_1_0_1_0_1 = (RuleCall)cGrefPojoEntityCrossReference_1_1_1_1_0_1_0.eContents().get(1);
		private final Assignment cGtypeAssignment_1_1_1_1_1 = (Assignment)cAlternatives_1_1_1_1.eContents().get(1);
		private final CrossReference cGtypeJvmTypeCrossReference_1_1_1_1_1_0 = (CrossReference)cGtypeAssignment_1_1_1_1_1.eContents().get(0);
		private final RuleCall cGtypeJvmTypeQualifiedNameParserRuleCall_1_1_1_1_1_0_1 = (RuleCall)cGtypeJvmTypeCrossReference_1_1_1_1_1_0.eContents().get(1);
		private final RuleCall cMORE_THANTerminalRuleCall_1_1_1_2 = (RuleCall)cGroup_1_1_1.eContents().get(2);
		private final Assignment cArrayAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cArrayLeftSquareBracketRightSquareBracketKeyword_2_0 = (Keyword)cArrayAssignment_2.eContents().get(0);
		private final Assignment cModifiersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModifiersPojoPropertyModifierParserRuleCall_3_0 = (RuleCall)cModifiersAssignment_3.eContents().get(0);
		
		//PojoProperty hidden(ML_COMMENT, SL_COMMENT, WS):
		//	name=IDENT (native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON
		//	(COLON (COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN
		//	(COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?) array?="[]"?
		//	modifiers+=PojoPropertyModifier*;
		public ParserRule getRule() { return rule; }

		//name=IDENT (native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON (COLON
		//(COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON
		//gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?) array?="[]"?
		//modifiers+=PojoPropertyModifier*
		public Group getGroup() { return cGroup; }

		//name=IDENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_0_0() { return cNameIDENTTerminalRuleCall_0_0; }

		//native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON (COLON (COLON
		//attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON
		//gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean")
		public Assignment getNativeAssignment_1_0() { return cNativeAssignment_1_0; }

		//"_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean"
		public Alternatives getNativeAlternatives_1_0_0() { return cNativeAlternatives_1_0_0; }

		//"_char"
		public Keyword getNative_charKeyword_1_0_0_0() { return cNative_charKeyword_1_0_0_0; }

		//"_byte"
		public Keyword getNative_byteKeyword_1_0_0_1() { return cNative_byteKeyword_1_0_0_1; }

		//"_short"
		public Keyword getNative_shortKeyword_1_0_0_2() { return cNative_shortKeyword_1_0_0_2; }

		//"_int"
		public Keyword getNative_intKeyword_1_0_0_3() { return cNative_intKeyword_1_0_0_3; }

		//"_long"
		public Keyword getNative_longKeyword_1_0_0_4() { return cNative_longKeyword_1_0_0_4; }

		//"_float"
		public Keyword getNative_floatKeyword_1_0_0_5() { return cNative_floatKeyword_1_0_0_5; }

		//"_double"
		public Keyword getNative_doubleKeyword_1_0_0_6() { return cNative_doubleKeyword_1_0_0_6; }

		//"_boolean"
		public Keyword getNative_booleanKeyword_1_0_0_7() { return cNative_booleanKeyword_1_0_0_7; }

		//(COLON (COLON (COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName]))
		//(LESS_THAN (COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//COLON (COLON (COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName])
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_0_0() { return cCOLONTerminalRuleCall_1_1_0_0; }

		//COLON (COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_1_1_0_1() { return cAlternatives_1_1_0_1; }

		//COLON (COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT])
		public Group getGroup_1_1_0_1_0() { return cGroup_1_1_0_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_0_1_0_0() { return cCOLONTerminalRuleCall_1_1_0_1_0_0; }

		//COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]
		public Alternatives getAlternatives_1_1_0_1_0_1() { return cAlternatives_1_1_0_1_0_1; }

		//COLON attrs+=[PojoProperty|IDENT]*
		public Group getGroup_1_1_0_1_0_1_0() { return cGroup_1_1_0_1_0_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_0_1_0_1_0_0() { return cCOLONTerminalRuleCall_1_1_0_1_0_1_0_0; }

		//attrs+=[PojoProperty|IDENT]*
		public Assignment getAttrsAssignment_1_1_0_1_0_1_0_1() { return cAttrsAssignment_1_1_0_1_0_1_0_1; }

		//[PojoProperty|IDENT]
		public CrossReference getAttrsPojoPropertyCrossReference_1_1_0_1_0_1_0_1_0() { return cAttrsPojoPropertyCrossReference_1_1_0_1_0_1_0_1_0; }

		//IDENT
		public RuleCall getAttrsPojoPropertyIDENTTerminalRuleCall_1_1_0_1_0_1_0_1_0_1() { return cAttrsPojoPropertyIDENTTerminalRuleCall_1_1_0_1_0_1_0_1_0_1; }

		//ref=[Entity|IDENT]
		public Assignment getRefAssignment_1_1_0_1_0_1_1() { return cRefAssignment_1_1_0_1_0_1_1; }

		//[Entity|IDENT]
		public CrossReference getRefEntityCrossReference_1_1_0_1_0_1_1_0() { return cRefEntityCrossReference_1_1_0_1_0_1_1_0; }

		//IDENT
		public RuleCall getRefEntityIDENTTerminalRuleCall_1_1_0_1_0_1_1_0_1() { return cRefEntityIDENTTerminalRuleCall_1_1_0_1_0_1_1_0_1; }

		//type=[jvmTypes::JvmType|QualifiedName]
		public Assignment getTypeAssignment_1_1_0_1_1() { return cTypeAssignment_1_1_0_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getTypeJvmTypeCrossReference_1_1_0_1_1_0() { return cTypeJvmTypeCrossReference_1_1_0_1_1_0; }

		//QualifiedName
		public RuleCall getTypeJvmTypeQualifiedNameParserRuleCall_1_1_0_1_1_0_1() { return cTypeJvmTypeQualifiedNameParserRuleCall_1_1_0_1_1_0_1; }

		//(LESS_THAN (COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//LESS_THAN
		public RuleCall getLESS_THANTerminalRuleCall_1_1_1_0() { return cLESS_THANTerminalRuleCall_1_1_1_0; }

		//COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_1_1_1_1() { return cAlternatives_1_1_1_1; }

		//COLON gref=[PojoEntity|IDENT]
		public Group getGroup_1_1_1_1_0() { return cGroup_1_1_1_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_1_1_0_0() { return cCOLONTerminalRuleCall_1_1_1_1_0_0; }

		//gref=[PojoEntity|IDENT]
		public Assignment getGrefAssignment_1_1_1_1_0_1() { return cGrefAssignment_1_1_1_1_0_1; }

		//[PojoEntity|IDENT]
		public CrossReference getGrefPojoEntityCrossReference_1_1_1_1_0_1_0() { return cGrefPojoEntityCrossReference_1_1_1_1_0_1_0; }

		//IDENT
		public RuleCall getGrefPojoEntityIDENTTerminalRuleCall_1_1_1_1_0_1_0_1() { return cGrefPojoEntityIDENTTerminalRuleCall_1_1_1_1_0_1_0_1; }

		//gtype=[jvmTypes::JvmType|QualifiedName]
		public Assignment getGtypeAssignment_1_1_1_1_1() { return cGtypeAssignment_1_1_1_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getGtypeJvmTypeCrossReference_1_1_1_1_1_0() { return cGtypeJvmTypeCrossReference_1_1_1_1_1_0; }

		//QualifiedName
		public RuleCall getGtypeJvmTypeQualifiedNameParserRuleCall_1_1_1_1_1_0_1() { return cGtypeJvmTypeQualifiedNameParserRuleCall_1_1_1_1_1_0_1; }

		//MORE_THAN
		public RuleCall getMORE_THANTerminalRuleCall_1_1_1_2() { return cMORE_THANTerminalRuleCall_1_1_1_2; }

		//array?="[]"?
		public Assignment getArrayAssignment_2() { return cArrayAssignment_2; }

		//"[]"
		public Keyword getArrayLeftSquareBracketRightSquareBracketKeyword_2_0() { return cArrayLeftSquareBracketRightSquareBracketKeyword_2_0; }

		//modifiers+=PojoPropertyModifier*
		public Assignment getModifiersAssignment_3() { return cModifiersAssignment_3; }

		//PojoPropertyModifier
		public RuleCall getModifiersPojoPropertyModifierParserRuleCall_3_0() { return cModifiersPojoPropertyModifierParserRuleCall_3_0; }
	}

	public class EnumEntityModifier1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumEntityModifier1");
		private final Assignment cFinalAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cFinalFinalKeyword_0 = (Keyword)cFinalAssignment.eContents().get(0);
		
		//EnumEntityModifier1:
		//	final?="final";
		public ParserRule getRule() { return rule; }

		//final?="final"
		public Assignment getFinalAssignment() { return cFinalAssignment; }

		//"final"
		public Keyword getFinalFinalKeyword_0() { return cFinalFinalKeyword_0; }
	}

	public class EnumEntityModifier2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumEntityModifier2");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cExtendsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cSuperTypePojoEntityCrossReference_0_1_0 = (CrossReference)cSuperTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cSuperTypePojoEntityIDENTTerminalRuleCall_0_1_0_1 = (RuleCall)cSuperTypePojoEntityCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSerializableKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSernumAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSernumNUMBERTerminalRuleCall_1_1_0 = (RuleCall)cSernumAssignment_1_1.eContents().get(0);
		
		//EnumEntityModifier2:
		//	"extends" superType=[PojoEntity|IDENT] | "serializable" sernum=NUMBER;
		public ParserRule getRule() { return rule; }

		//"extends" superType=[PojoEntity|IDENT] | "serializable" sernum=NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//"extends" superType=[PojoEntity|IDENT]
		public Group getGroup_0() { return cGroup_0; }

		//"extends"
		public Keyword getExtendsKeyword_0_0() { return cExtendsKeyword_0_0; }

		//superType=[PojoEntity|IDENT]
		public Assignment getSuperTypeAssignment_0_1() { return cSuperTypeAssignment_0_1; }

		//[PojoEntity|IDENT]
		public CrossReference getSuperTypePojoEntityCrossReference_0_1_0() { return cSuperTypePojoEntityCrossReference_0_1_0; }

		//IDENT
		public RuleCall getSuperTypePojoEntityIDENTTerminalRuleCall_0_1_0_1() { return cSuperTypePojoEntityIDENTTerminalRuleCall_0_1_0_1; }

		//"serializable" sernum=NUMBER
		public Group getGroup_1() { return cGroup_1; }

		//"serializable"
		public Keyword getSerializableKeyword_1_0() { return cSerializableKeyword_1_0; }

		//sernum=NUMBER
		public Assignment getSernumAssignment_1_1() { return cSernumAssignment_1_1; }

		//NUMBER
		public RuleCall getSernumNUMBERTerminalRuleCall_1_1_0() { return cSernumNUMBERTerminalRuleCall_1_1_0; }
	}

	public class EnumEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModifiers1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cModifiers1EnumEntityModifier1ParserRuleCall_0_0 = (RuleCall)cModifiers1Assignment_0.eContents().get(0);
		private final Keyword cEnumKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDENTTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cModifiers2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModifiers2EnumEntityModifier2ParserRuleCall_3_0 = (RuleCall)cModifiers2Assignment_3.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesEnumPropertyParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//EnumEntity hidden(ML_COMMENT, SL_COMMENT, WS):
		//	modifiers1+=EnumEntityModifier1* "enum" name=IDENT modifiers2+=EnumEntityModifier2* LBRACE features+=EnumProperty*
		//	RBRACE;
		public ParserRule getRule() { return rule; }

		//modifiers1+=EnumEntityModifier1* "enum" name=IDENT modifiers2+=EnumEntityModifier2* LBRACE features+=EnumProperty*
		//RBRACE
		public Group getGroup() { return cGroup; }

		//modifiers1+=EnumEntityModifier1*
		public Assignment getModifiers1Assignment_0() { return cModifiers1Assignment_0; }

		//EnumEntityModifier1
		public RuleCall getModifiers1EnumEntityModifier1ParserRuleCall_0_0() { return cModifiers1EnumEntityModifier1ParserRuleCall_0_0; }

		//"enum"
		public Keyword getEnumKeyword_1() { return cEnumKeyword_1; }

		//name=IDENT
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_2_0() { return cNameIDENTTerminalRuleCall_2_0; }

		//modifiers2+=EnumEntityModifier2*
		public Assignment getModifiers2Assignment_3() { return cModifiers2Assignment_3; }

		//EnumEntityModifier2
		public RuleCall getModifiers2EnumEntityModifier2ParserRuleCall_3_0() { return cModifiers2EnumEntityModifier2ParserRuleCall_3_0; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_4() { return cLBRACETerminalRuleCall_4; }

		//features+=EnumProperty*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }

		//EnumProperty
		public RuleCall getFeaturesEnumPropertyParserRuleCall_5_0() { return cFeaturesEnumPropertyParserRuleCall_5_0; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_6() { return cRBRACETerminalRuleCall_6; }
	}

	public class EnumPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cNativeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Alternatives cNativeAlternatives_1_0_0 = (Alternatives)cNativeAssignment_1_0.eContents().get(0);
		private final Keyword cNative_charKeyword_1_0_0_0 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(0);
		private final Keyword cNative_byteKeyword_1_0_0_1 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(1);
		private final Keyword cNative_shortKeyword_1_0_0_2 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(2);
		private final Keyword cNative_intKeyword_1_0_0_3 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(3);
		private final Keyword cNative_longKeyword_1_0_0_4 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(4);
		private final Keyword cNative_floatKeyword_1_0_0_5 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(5);
		private final Keyword cNative_doubleKeyword_1_0_0_6 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(6);
		private final Keyword cNative_booleanKeyword_1_0_0_7 = (Keyword)cNativeAlternatives_1_0_0.eContents().get(7);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_0 = (Group)cAlternatives_1_1_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1_1_0_0 = (RuleCall)cGroup_1_1_1_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1_1_1_0_1 = (RuleCall)cGroup_1_1_1_0.eContents().get(1);
		private final Assignment cValueAssignment_1_1_1_0_2 = (Assignment)cGroup_1_1_1_0.eContents().get(2);
		private final Alternatives cValueAlternatives_1_1_1_0_2_0 = (Alternatives)cValueAssignment_1_1_1_0_2.eContents().get(0);
		private final RuleCall cValueNUMBERTerminalRuleCall_1_1_1_0_2_0_0 = (RuleCall)cValueAlternatives_1_1_1_0_2_0.eContents().get(0);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_1_1_1_0_2_0_1 = (RuleCall)cValueAlternatives_1_1_1_0_2_0.eContents().get(1);
		private final Assignment cTypeAssignment_1_1_1_1 = (Assignment)cAlternatives_1_1_1.eContents().get(1);
		private final CrossReference cTypeJvmTypeCrossReference_1_1_1_1_0 = (CrossReference)cTypeAssignment_1_1_1_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeQualifiedNameParserRuleCall_1_1_1_1_0_1 = (RuleCall)cTypeJvmTypeCrossReference_1_1_1_1_0.eContents().get(1);
		
		//EnumProperty hidden(ML_COMMENT, SL_COMMENT, WS):
		//	name=IDENT (native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | COLON
		//	(COLON COLON value=(NUMBER | STRING_VALUE) | type=[jvmTypes::JvmType|QualifiedName]));
		public ParserRule getRule() { return rule; }

		//name=IDENT (native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | COLON (COLON
		//COLON value=(NUMBER | STRING_VALUE) | type=[jvmTypes::JvmType|QualifiedName]))
		public Group getGroup() { return cGroup; }

		//name=IDENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_0_0() { return cNameIDENTTerminalRuleCall_0_0; }

		//native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | COLON (COLON COLON
		//value=(NUMBER | STRING_VALUE) | type=[jvmTypes::JvmType|QualifiedName])
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean")
		public Assignment getNativeAssignment_1_0() { return cNativeAssignment_1_0; }

		//"_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean"
		public Alternatives getNativeAlternatives_1_0_0() { return cNativeAlternatives_1_0_0; }

		//"_char"
		public Keyword getNative_charKeyword_1_0_0_0() { return cNative_charKeyword_1_0_0_0; }

		//"_byte"
		public Keyword getNative_byteKeyword_1_0_0_1() { return cNative_byteKeyword_1_0_0_1; }

		//"_short"
		public Keyword getNative_shortKeyword_1_0_0_2() { return cNative_shortKeyword_1_0_0_2; }

		//"_int"
		public Keyword getNative_intKeyword_1_0_0_3() { return cNative_intKeyword_1_0_0_3; }

		//"_long"
		public Keyword getNative_longKeyword_1_0_0_4() { return cNative_longKeyword_1_0_0_4; }

		//"_float"
		public Keyword getNative_floatKeyword_1_0_0_5() { return cNative_floatKeyword_1_0_0_5; }

		//"_double"
		public Keyword getNative_doubleKeyword_1_0_0_6() { return cNative_doubleKeyword_1_0_0_6; }

		//"_boolean"
		public Keyword getNative_booleanKeyword_1_0_0_7() { return cNative_booleanKeyword_1_0_0_7; }

		//COLON (COLON COLON value=(NUMBER | STRING_VALUE) | type=[jvmTypes::JvmType|QualifiedName])
		public Group getGroup_1_1() { return cGroup_1_1; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_0() { return cCOLONTerminalRuleCall_1_1_0; }

		//COLON COLON value=(NUMBER | STRING_VALUE) | type=[jvmTypes::JvmType|QualifiedName]
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }

		//COLON COLON value=(NUMBER | STRING_VALUE)
		public Group getGroup_1_1_1_0() { return cGroup_1_1_1_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_1_0_0() { return cCOLONTerminalRuleCall_1_1_1_0_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_1_1_0_1() { return cCOLONTerminalRuleCall_1_1_1_0_1; }

		//value=(NUMBER | STRING_VALUE)
		public Assignment getValueAssignment_1_1_1_0_2() { return cValueAssignment_1_1_1_0_2; }

		//NUMBER | STRING_VALUE
		public Alternatives getValueAlternatives_1_1_1_0_2_0() { return cValueAlternatives_1_1_1_0_2_0; }

		//NUMBER
		public RuleCall getValueNUMBERTerminalRuleCall_1_1_1_0_2_0_0() { return cValueNUMBERTerminalRuleCall_1_1_1_0_2_0_0; }

		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_1_1_1_0_2_0_1() { return cValueSTRING_VALUETerminalRuleCall_1_1_1_0_2_0_1; }

		//type=[jvmTypes::JvmType|QualifiedName]
		public Assignment getTypeAssignment_1_1_1_1() { return cTypeAssignment_1_1_1_1; }

		//[jvmTypes::JvmType|QualifiedName]
		public CrossReference getTypeJvmTypeCrossReference_1_1_1_1_0() { return cTypeJvmTypeCrossReference_1_1_1_1_0; }

		//QualifiedName
		public RuleCall getTypeJvmTypeQualifiedNameParserRuleCall_1_1_1_1_0_1() { return cTypeJvmTypeQualifiedNameParserRuleCall_1_1_1_1_0_1; }
	}

	public class PojoDaoModifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoDaoModifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cExtendsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cSuperTypePojoDaoCrossReference_0_1_0 = (CrossReference)cSuperTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cSuperTypePojoDaoIDENTTerminalRuleCall_0_1_0_1 = (RuleCall)cSuperTypePojoDaoCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSerializableKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSernumAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSernumNUMBERTerminalRuleCall_1_1_0 = (RuleCall)cSernumAssignment_1_1.eContents().get(0);
		
		//PojoDaoModifier:
		//	"extends" superType=[PojoDao|IDENT] | "serializable" sernum=NUMBER;
		public ParserRule getRule() { return rule; }

		//"extends" superType=[PojoDao|IDENT] | "serializable" sernum=NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//"extends" superType=[PojoDao|IDENT]
		public Group getGroup_0() { return cGroup_0; }

		//"extends"
		public Keyword getExtendsKeyword_0_0() { return cExtendsKeyword_0_0; }

		//superType=[PojoDao|IDENT]
		public Assignment getSuperTypeAssignment_0_1() { return cSuperTypeAssignment_0_1; }

		//[PojoDao|IDENT]
		public CrossReference getSuperTypePojoDaoCrossReference_0_1_0() { return cSuperTypePojoDaoCrossReference_0_1_0; }

		//IDENT
		public RuleCall getSuperTypePojoDaoIDENTTerminalRuleCall_0_1_0_1() { return cSuperTypePojoDaoIDENTTerminalRuleCall_0_1_0_1; }

		//"serializable" sernum=NUMBER
		public Group getGroup_1() { return cGroup_1; }

		//"serializable"
		public Keyword getSerializableKeyword_1_0() { return cSerializableKeyword_1_0; }

		//sernum=NUMBER
		public Assignment getSernumAssignment_1_1() { return cSernumAssignment_1_1; }

		//NUMBER
		public RuleCall getSernumNUMBERTerminalRuleCall_1_1_0() { return cSernumNUMBERTerminalRuleCall_1_1_0; }
	}

	public class PojoDaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoDao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModifiers1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cModifiers1PojoEntityModifier1ParserRuleCall_0_0 = (RuleCall)cModifiers1Assignment_0.eContents().get(0);
		private final Keyword cDaoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDENTTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cPojoGenericsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPojoGenericsCOLONTerminalRuleCall_3_2_0 = (RuleCall)cPojoGenericsAssignment_3_2.eContents().get(0);
		private final Assignment cPojoAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cPojoPojoEntityCrossReference_3_3_0 = (CrossReference)cPojoAssignment_3_3.eContents().get(0);
		private final RuleCall cPojoPojoEntityIDENTTerminalRuleCall_3_3_0_1 = (RuleCall)cPojoPojoEntityCrossReference_3_3_0.eContents().get(1);
		private final Assignment cModifiers2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModifiers2PojoDaoModifierParserRuleCall_4_0 = (RuleCall)cModifiers2Assignment_4.eContents().get(0);
		private final RuleCall cLBRACETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cMethodsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMethodsPojoMethodParserRuleCall_6_0 = (RuleCall)cMethodsAssignment_6.eContents().get(0);
		private final Assignment cToInitsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cToInitsToInitMethodParserRuleCall_7_0 = (RuleCall)cToInitsAssignment_7.eContents().get(0);
		private final RuleCall cRBRACETerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//PojoDao hidden(ML_COMMENT, SL_COMMENT, WS):
		//	modifiers1+=PojoEntityModifier1* "dao" name=IDENT (COLON COLON pojoGenerics?=COLON? pojo=[PojoEntity|IDENT])?
		//	modifiers2+=PojoDaoModifier* LBRACE methods+=PojoMethod* toInits+=ToInitMethod* RBRACE;
		public ParserRule getRule() { return rule; }

		//modifiers1+=PojoEntityModifier1* "dao" name=IDENT (COLON COLON pojoGenerics?=COLON? pojo=[PojoEntity|IDENT])?
		//modifiers2+=PojoDaoModifier* LBRACE methods+=PojoMethod* toInits+=ToInitMethod* RBRACE
		public Group getGroup() { return cGroup; }

		//modifiers1+=PojoEntityModifier1*
		public Assignment getModifiers1Assignment_0() { return cModifiers1Assignment_0; }

		//PojoEntityModifier1
		public RuleCall getModifiers1PojoEntityModifier1ParserRuleCall_0_0() { return cModifiers1PojoEntityModifier1ParserRuleCall_0_0; }

		//"dao"
		public Keyword getDaoKeyword_1() { return cDaoKeyword_1; }

		//name=IDENT
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_2_0() { return cNameIDENTTerminalRuleCall_2_0; }

		//(COLON COLON pojoGenerics?=COLON? pojo=[PojoEntity|IDENT])?
		public Group getGroup_3() { return cGroup_3; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_1() { return cCOLONTerminalRuleCall_3_1; }

		//pojoGenerics?=COLON?
		public Assignment getPojoGenericsAssignment_3_2() { return cPojoGenericsAssignment_3_2; }

		//COLON
		public RuleCall getPojoGenericsCOLONTerminalRuleCall_3_2_0() { return cPojoGenericsCOLONTerminalRuleCall_3_2_0; }

		//pojo=[PojoEntity|IDENT]
		public Assignment getPojoAssignment_3_3() { return cPojoAssignment_3_3; }

		//[PojoEntity|IDENT]
		public CrossReference getPojoPojoEntityCrossReference_3_3_0() { return cPojoPojoEntityCrossReference_3_3_0; }

		//IDENT
		public RuleCall getPojoPojoEntityIDENTTerminalRuleCall_3_3_0_1() { return cPojoPojoEntityIDENTTerminalRuleCall_3_3_0_1; }

		//modifiers2+=PojoDaoModifier*
		public Assignment getModifiers2Assignment_4() { return cModifiers2Assignment_4; }

		//PojoDaoModifier
		public RuleCall getModifiers2PojoDaoModifierParserRuleCall_4_0() { return cModifiers2PojoDaoModifierParserRuleCall_4_0; }

		//LBRACE
		public RuleCall getLBRACETerminalRuleCall_5() { return cLBRACETerminalRuleCall_5; }

		//methods+=PojoMethod*
		public Assignment getMethodsAssignment_6() { return cMethodsAssignment_6; }

		//PojoMethod
		public RuleCall getMethodsPojoMethodParserRuleCall_6_0() { return cMethodsPojoMethodParserRuleCall_6_0; }

		//toInits+=ToInitMethod*
		public Assignment getToInitsAssignment_7() { return cToInitsAssignment_7; }

		//ToInitMethod
		public RuleCall getToInitsToInitMethodParserRuleCall_7_0() { return cToInitsToInitMethodParserRuleCall_7_0; }

		//RBRACE
		public RuleCall getRBRACETerminalRuleCall_8() { return cRBRACETerminalRuleCall_8; }
	}

	public class PojoMethodModifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoMethodModifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cCallFunctionAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cCallFunctionCallFunctionKeyword_0_0 = (Keyword)cCallFunctionAssignment_0.eContents().get(0);
		private final Assignment cCallUpdateAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cCallUpdateCallUpdateKeyword_1_0 = (Keyword)cCallUpdateAssignment_1.eContents().get(0);
		private final Assignment cCallQueryAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cCallQueryCallQueryKeyword_2_0 = (Keyword)cCallQueryAssignment_2.eContents().get(0);
		private final Assignment cCallQueryFunctionAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cCallQueryFunctionCallQueryFunctionKeyword_3_0 = (Keyword)cCallQueryFunctionAssignment_3.eContents().get(0);
		private final Assignment cCallSelectFunctionAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cCallSelectFunctionCallSelectFunctionKeyword_4_0 = (Keyword)cCallSelectFunctionAssignment_4.eContents().get(0);
		
		//PojoMethodModifier:
		//	callFunction?="callFunction" | callUpdate?="callUpdate" | callQuery?="callQuery" |
		//	callQueryFunction?="callQueryFunction" | callSelectFunction?="callSelectFunction";
		public ParserRule getRule() { return rule; }

		//callFunction?="callFunction" | callUpdate?="callUpdate" | callQuery?="callQuery" |
		//callQueryFunction?="callQueryFunction" | callSelectFunction?="callSelectFunction"
		public Alternatives getAlternatives() { return cAlternatives; }

		//callFunction?="callFunction"
		public Assignment getCallFunctionAssignment_0() { return cCallFunctionAssignment_0; }

		//"callFunction"
		public Keyword getCallFunctionCallFunctionKeyword_0_0() { return cCallFunctionCallFunctionKeyword_0_0; }

		//callUpdate?="callUpdate"
		public Assignment getCallUpdateAssignment_1() { return cCallUpdateAssignment_1; }

		//"callUpdate"
		public Keyword getCallUpdateCallUpdateKeyword_1_0() { return cCallUpdateCallUpdateKeyword_1_0; }

		//callQuery?="callQuery"
		public Assignment getCallQueryAssignment_2() { return cCallQueryAssignment_2; }

		//"callQuery"
		public Keyword getCallQueryCallQueryKeyword_2_0() { return cCallQueryCallQueryKeyword_2_0; }

		//callQueryFunction?="callQueryFunction"
		public Assignment getCallQueryFunctionAssignment_3() { return cCallQueryFunctionAssignment_3; }

		//"callQueryFunction"
		public Keyword getCallQueryFunctionCallQueryFunctionKeyword_3_0() { return cCallQueryFunctionCallQueryFunctionKeyword_3_0; }

		//callSelectFunction?="callSelectFunction"
		public Assignment getCallSelectFunctionAssignment_4() { return cCallSelectFunctionAssignment_4; }

		//"callSelectFunction"
		public Keyword getCallSelectFunctionCallSelectFunctionKeyword_4_0() { return cCallSelectFunctionCallSelectFunctionKeyword_4_0; }
	}

	public class PojoMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModifiers1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cModifiers1PojoMethodModifierParserRuleCall_0_0 = (RuleCall)cModifiers1Assignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDENTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTypePojoTypeParserRuleCall_2_0_0 = (RuleCall)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Assignment cArgsAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cArgsPojoMethodArgParserRuleCall_2_4_0 = (RuleCall)cArgsAssignment_2_4.eContents().get(0);
		
		//PojoMethod hidden(ML_COMMENT, SL_COMMENT, WS):
		//	modifiers1+=PojoMethodModifier* name=IDENT (type=PojoType COLON COLON COLON args+=PojoMethodArg+)?;
		public ParserRule getRule() { return rule; }

		//modifiers1+=PojoMethodModifier* name=IDENT (type=PojoType COLON COLON COLON args+=PojoMethodArg+)?
		public Group getGroup() { return cGroup; }

		//modifiers1+=PojoMethodModifier*
		public Assignment getModifiers1Assignment_0() { return cModifiers1Assignment_0; }

		//PojoMethodModifier
		public RuleCall getModifiers1PojoMethodModifierParserRuleCall_0_0() { return cModifiers1PojoMethodModifierParserRuleCall_0_0; }

		//name=IDENT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_1_0() { return cNameIDENTTerminalRuleCall_1_0; }

		//(type=PojoType COLON COLON COLON args+=PojoMethodArg+)?
		public Group getGroup_2() { return cGroup_2; }

		//type=PojoType
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }

		//PojoType
		public RuleCall getTypePojoTypeParserRuleCall_2_0_0() { return cTypePojoTypeParserRuleCall_2_0_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1() { return cCOLONTerminalRuleCall_2_1; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_2() { return cCOLONTerminalRuleCall_2_2; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_3() { return cCOLONTerminalRuleCall_2_3; }

		//args+=PojoMethodArg+
		public Assignment getArgsAssignment_2_4() { return cArgsAssignment_2_4; }

		//PojoMethodArg
		public RuleCall getArgsPojoMethodArgParserRuleCall_2_4_0() { return cArgsPojoMethodArgParserRuleCall_2_4_0; }
	}

	public class ToInitMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ToInitMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cArgsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cArgsPojoMethodArgParserRuleCall_4_0 = (RuleCall)cArgsAssignment_4.eContents().get(0);
		
		//ToInitMethod hidden(ML_COMMENT, SL_COMMENT, WS):
		//	name=IDENT COLON COLON COLON args+=PojoMethodArg+;
		public ParserRule getRule() { return rule; }

		//name=IDENT COLON COLON COLON args+=PojoMethodArg+
		public Group getGroup() { return cGroup; }

		//name=IDENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_0_0() { return cNameIDENTTerminalRuleCall_0_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }

		//args+=PojoMethodArg+
		public Assignment getArgsAssignment_4() { return cArgsAssignment_4; }

		//PojoMethodArg
		public RuleCall getArgsPojoMethodArgParserRuleCall_4_0() { return cArgsPojoMethodArgParserRuleCall_4_0; }
	}

	public class PojoMethodArgElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PojoMethodArg");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypePojoTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//PojoMethodArg hidden(ML_COMMENT, SL_COMMENT, WS):
		//	name=IDENT type=PojoType;
		public ParserRule getRule() { return rule; }

		//name=IDENT type=PojoType
		public Group getGroup() { return cGroup; }

		//name=IDENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//IDENT
		public RuleCall getNameIDENTTerminalRuleCall_0_0() { return cNameIDENTTerminalRuleCall_0_0; }

		//type=PojoType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//PojoType
		public RuleCall getTypePojoTypeParserRuleCall_1_0() { return cTypePojoTypeParserRuleCall_1_0; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName ".*"?;
		public ParserRule getRule() { return rule; }

		//QualifiedName ".*"?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//".*"?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDENTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDENT_DOTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////     (REST|IDENT_DOT|IDENT|NUMBER|WS|COLON|SEMICOLON|STRING|COMMA|MINUS|PLUS|LPAREN|RPAREN|LBRACE|RBRACE|QUESTI|NOT|BAND|BOR|HASH|AT|CARET|EQUALS|LESS_THAN|MORE_THAN|PERCENT|AND|OR|ESC_CHAR)
		//QualifiedName:
		//	IDENT | IDENT_DOT;
		public ParserRule getRule() { return rule; }

		//IDENT //     (REST|IDENT_DOT|IDENT|NUMBER|WS|COLON|SEMICOLON|STRING|COMMA|MINUS|PLUS|LPAREN|RPAREN|LBRACE|RBRACE|QUESTI|NOT|BAND|BOR|HASH|AT|CARET|EQUALS|LESS_THAN|MORE_THAN|PERCENT|AND|OR|ESC_CHAR)
		//| IDENT_DOT
		public Alternatives getAlternatives() { return cAlternatives; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_0() { return cIDENTTerminalRuleCall_0; }

		//IDENT_DOT
		public RuleCall getIDENT_DOTTerminalRuleCall_1() { return cIDENT_DOTTerminalRuleCall_1; }
	}
	
	
	private ArtifactsElements pArtifacts;
	private DatabaseCatalogAssignementElements pDatabaseCatalogAssignement;
	private DatabaseSchemaAssignementElements pDatabaseSchemaAssignement;
	private DatabaseTypeAssignementElements pDatabaseTypeAssignement;
	private DatabaseMetaInfoAssignementElements pDatabaseMetaInfoAssignement;
	private DriverMetaInfoAssignementElements pDriverMetaInfoAssignement;
	private DriverMethodOutputAssignementElements pDriverMethodOutputAssignement;
	private SqlTypeAssignementElements pSqlTypeAssignement;
	private ColumnTypeAssignementElements pColumnTypeAssignement;
	private ShowColumnTypeAssignementElements pShowColumnTypeAssignement;
	private TableAssignementElements pTableAssignement;
	private JoinTableAssignementElements pJoinTableAssignement;
	private ColumnAssignementElements pColumnAssignement;
	private ImportAssignementElements pImportAssignement;
	private ExportAssignementElements pExportAssignement;
	private InheritanceAssignementElements pInheritanceAssignement;
	private ManyToManyAssignementElements pManyToManyAssignement;
	private DebugLevelAssignementElements pDebugLevelAssignement;
	private ProcedurePojoAssignementElements pProcedurePojoAssignement;
	private FunctionPojoAssignementElements pFunctionPojoAssignement;
	private ImplementsAssignementElements pImplementsAssignement;
	private ExtendsAssignementElements pExtendsAssignement;
	private ImplementsAssignementGenericsElements pImplementsAssignementGenerics;
	private ExtendsAssignementGenericsElements pExtendsAssignementGenerics;
	private PropertyElements pProperty;
	private DatabasePropertyElements pDatabaseProperty;
	private PojogenPropertyElements pPojogenProperty;
	private MetaTypeAssignementElements pMetaTypeAssignement;
	private MetagenPropertyElements pMetagenProperty;
	private DaogenPropertyElements pDaogenProperty;
	private PropertyValueElements pPropertyValue;
	private PojoDefinitionElements pPojoDefinition;
	private TableDefinitionElements pTableDefinition;
	private ProcedureDefinitionElements pProcedureDefinition;
	private FunctionDefinitionElements pFunctionDefinition;
	private TerminalRule tIDENT_DOT;
	private TerminalRule tIDENT;
	private TerminalRule tNUMBER;
	private TerminalRule tESC_CHAR;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tWS;
	private TerminalRule tAND;
	private TerminalRule tOR;
	private TerminalRule tCOLON;
	private TerminalRule tSEMICOLON;
	private TerminalRule tSTRING;
	private TerminalRule tCOMMA;
	private TerminalRule tMINUS;
	private TerminalRule tPLUS;
	private TerminalRule tLPAREN;
	private TerminalRule tRPAREN;
	private TerminalRule tLBRACE;
	private TerminalRule tRBRACE;
	private TerminalRule tQUESTI;
	private TerminalRule tNOT;
	private TerminalRule tBAND;
	private TerminalRule tBOR;
	private TerminalRule tHASH;
	private TerminalRule tAT;
	private TerminalRule tCARET;
	private TerminalRule tEQUALS;
	private TerminalRule tLESS_THAN;
	private TerminalRule tMORE_THAN;
	private TerminalRule tPERCENT;
	private TerminalRule tDOT;
	private TerminalRule tREST;
	private TerminalRule tSTRING_VALUE;
	private FeatureValueElements pFeatureValue;
	private PojoTypeElements pPojoType;
	private PackageDeclarationElements pPackageDeclaration;
	private AnnotationElements pAnnotation;
	private AnnotationPropertyElements pAnnotationProperty;
	private EntityElements pEntity;
	private AnnotatedEntityElements pAnnotatedEntity;
	private AbstractPojoEntityElements pAbstractPojoEntity;
	private ImportElements pImport;
	private ImplementsElements pImplements;
	private ExtendsElements pExtends;
	private ImplPackageElements pImplPackage;
	private PojoEntityModifier1Elements pPojoEntityModifier1;
	private PojoEntityModifier2Elements pPojoEntityModifier2;
	private PojoEntityElements pPojoEntity;
	private PojoAnnotatedPropertyElements pPojoAnnotatedProperty;
	private PojoPropertyModifierElements pPojoPropertyModifier;
	private PojoPropertyElements pPojoProperty;
	private EnumEntityModifier1Elements pEnumEntityModifier1;
	private EnumEntityModifier2Elements pEnumEntityModifier2;
	private EnumEntityElements pEnumEntity;
	private EnumPropertyElements pEnumProperty;
	private PojoDaoModifierElements pPojoDaoModifier;
	private PojoDaoElements pPojoDao;
	private PojoMethodModifierElements pPojoMethodModifier;
	private PojoMethodElements pPojoMethod;
	private ToInitMethodElements pToInitMethod;
	private PojoMethodArgElements pPojoMethodArg;
	private QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private QualifiedNameElements pQualifiedName;
	
	private final Grammar grammar;

	@Inject
	public ProcessorModelGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.sqlproc.model.ProcessorModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//Artifacts:
	//	{Artifacts} WS* (properties+=Property WS* | pojos+=PojoDefinition WS* | tables+=TableDefinition WS* |
	//	procedures+=ProcedureDefinition WS* | functions+=FunctionDefinition WS* | pojoPackages+=PackageDeclaration WS*)*;
	public ArtifactsElements getArtifactsAccess() {
		return (pArtifacts != null) ? pArtifacts : (pArtifacts = new ArtifactsElements());
	}
	
	public ParserRule getArtifactsRule() {
		return getArtifactsAccess().getRule();
	}

	//DatabaseCatalogAssignement:
	//	dbCatalog=PropertyValue;
	public DatabaseCatalogAssignementElements getDatabaseCatalogAssignementAccess() {
		return (pDatabaseCatalogAssignement != null) ? pDatabaseCatalogAssignement : (pDatabaseCatalogAssignement = new DatabaseCatalogAssignementElements());
	}
	
	public ParserRule getDatabaseCatalogAssignementRule() {
		return getDatabaseCatalogAssignementAccess().getRule();
	}

	//DatabaseSchemaAssignement:
	//	dbSchema=PropertyValue;
	public DatabaseSchemaAssignementElements getDatabaseSchemaAssignementAccess() {
		return (pDatabaseSchemaAssignement != null) ? pDatabaseSchemaAssignement : (pDatabaseSchemaAssignement = new DatabaseSchemaAssignementElements());
	}
	
	public ParserRule getDatabaseSchemaAssignementRule() {
		return getDatabaseSchemaAssignementAccess().getRule();
	}

	//DatabaseTypeAssignement:
	//	dbType=IDENT;
	public DatabaseTypeAssignementElements getDatabaseTypeAssignementAccess() {
		return (pDatabaseTypeAssignement != null) ? pDatabaseTypeAssignement : (pDatabaseTypeAssignement = new DatabaseTypeAssignementElements());
	}
	
	public ParserRule getDatabaseTypeAssignementRule() {
		return getDatabaseTypeAssignementAccess().getRule();
	}

	//DatabaseMetaInfoAssignement:
	//	dbMetaInfo=PropertyValue;
	public DatabaseMetaInfoAssignementElements getDatabaseMetaInfoAssignementAccess() {
		return (pDatabaseMetaInfoAssignement != null) ? pDatabaseMetaInfoAssignement : (pDatabaseMetaInfoAssignement = new DatabaseMetaInfoAssignementElements());
	}
	
	public ParserRule getDatabaseMetaInfoAssignementRule() {
		return getDatabaseMetaInfoAssignementAccess().getRule();
	}

	//DriverMetaInfoAssignement:
	//	dbDriverInfo=PropertyValue;
	public DriverMetaInfoAssignementElements getDriverMetaInfoAssignementAccess() {
		return (pDriverMetaInfoAssignement != null) ? pDriverMetaInfoAssignement : (pDriverMetaInfoAssignement = new DriverMetaInfoAssignementElements());
	}
	
	public ParserRule getDriverMetaInfoAssignementRule() {
		return getDriverMetaInfoAssignementAccess().getRule();
	}

	//DriverMethodOutputAssignement:
	//	driverMethod=IDENT "->" callOutput=PropertyValue;
	public DriverMethodOutputAssignementElements getDriverMethodOutputAssignementAccess() {
		return (pDriverMethodOutputAssignement != null) ? pDriverMethodOutputAssignement : (pDriverMethodOutputAssignement = new DriverMethodOutputAssignementElements());
	}
	
	public ParserRule getDriverMethodOutputAssignementRule() {
		return getDriverMethodOutputAssignementAccess().getRule();
	}

	//SqlTypeAssignement:
	//	typeName=IDENT (LPAREN size=NUMBER RPAREN)? "->" type=PojoType;
	public SqlTypeAssignementElements getSqlTypeAssignementAccess() {
		return (pSqlTypeAssignement != null) ? pSqlTypeAssignement : (pSqlTypeAssignement = new SqlTypeAssignementElements());
	}
	
	public ParserRule getSqlTypeAssignementRule() {
		return getSqlTypeAssignementAccess().getRule();
	}

	//ColumnTypeAssignement:
	//	dbColumn=IDENT "->" type=PojoType;
	public ColumnTypeAssignementElements getColumnTypeAssignementAccess() {
		return (pColumnTypeAssignement != null) ? pColumnTypeAssignement : (pColumnTypeAssignement = new ColumnTypeAssignementElements());
	}
	
	public ParserRule getColumnTypeAssignementRule() {
		return getColumnTypeAssignementAccess().getRule();
	}

	//ShowColumnTypeAssignement:
	//	dbColumn=IDENT "->" type=PropertyValue;
	public ShowColumnTypeAssignementElements getShowColumnTypeAssignementAccess() {
		return (pShowColumnTypeAssignement != null) ? pShowColumnTypeAssignement : (pShowColumnTypeAssignement = new ShowColumnTypeAssignementElements());
	}
	
	public ParserRule getShowColumnTypeAssignementRule() {
		return getShowColumnTypeAssignementAccess().getRule();
	}

	//TableAssignement:
	//	dbTable=IDENT "->" newName=IDENT;
	public TableAssignementElements getTableAssignementAccess() {
		return (pTableAssignement != null) ? pTableAssignement : (pTableAssignement = new TableAssignementElements());
	}
	
	public ParserRule getTableAssignementRule() {
		return getTableAssignementAccess().getRule();
	}

	//JoinTableAssignement:
	//	dbTable=IDENT ("->" dbTables+=IDENT)+;
	public JoinTableAssignementElements getJoinTableAssignementAccess() {
		return (pJoinTableAssignement != null) ? pJoinTableAssignement : (pJoinTableAssignement = new JoinTableAssignementElements());
	}
	
	public ParserRule getJoinTableAssignementRule() {
		return getJoinTableAssignementAccess().getRule();
	}

	//ColumnAssignement:
	//	dbColumn=IDENT "->" newName=IDENT;
	public ColumnAssignementElements getColumnAssignementAccess() {
		return (pColumnAssignement != null) ? pColumnAssignement : (pColumnAssignement = new ColumnAssignementElements());
	}
	
	public ParserRule getColumnAssignementRule() {
		return getColumnAssignementAccess().getRule();
	}

	//ImportAssignement:
	//	dbColumn=IDENT "->" pkTable=IDENT ("->" pkColumn=IDENT)?;
	public ImportAssignementElements getImportAssignementAccess() {
		return (pImportAssignement != null) ? pImportAssignement : (pImportAssignement = new ImportAssignementElements());
	}
	
	public ParserRule getImportAssignementRule() {
		return getImportAssignementAccess().getRule();
	}

	//ExportAssignement:
	//	dbColumn=IDENT "->" fkTable=IDENT ("->" fkColumn=IDENT)?;
	public ExportAssignementElements getExportAssignementAccess() {
		return (pExportAssignement != null) ? pExportAssignement : (pExportAssignement = new ExportAssignementElements());
	}
	
	public ParserRule getExportAssignementRule() {
		return getExportAssignementAccess().getRule();
	}

	//InheritanceAssignement:
	//	discriminator=IDENT "->" dbTable=IDENT ("->" dbColumns+=IDENT)+;
	public InheritanceAssignementElements getInheritanceAssignementAccess() {
		return (pInheritanceAssignement != null) ? pInheritanceAssignement : (pInheritanceAssignement = new InheritanceAssignementElements());
	}
	
	public ParserRule getInheritanceAssignementRule() {
		return getInheritanceAssignementAccess().getRule();
	}

	//ManyToManyAssignement:
	//	pkColumn=IDENT "->" pkTable=IDENT ("->" fkColumn=IDENT)?;
	public ManyToManyAssignementElements getManyToManyAssignementAccess() {
		return (pManyToManyAssignement != null) ? pManyToManyAssignement : (pManyToManyAssignement = new ManyToManyAssignementElements());
	}
	
	public ParserRule getManyToManyAssignementRule() {
		return getManyToManyAssignementAccess().getRule();
	}

	//DebugLevelAssignement:
	//	debug=IDENT (WS+ scope=PropertyValue)?;
	public DebugLevelAssignementElements getDebugLevelAssignementAccess() {
		return (pDebugLevelAssignement != null) ? pDebugLevelAssignement : (pDebugLevelAssignement = new DebugLevelAssignementElements());
	}
	
	public ParserRule getDebugLevelAssignementRule() {
		return getDebugLevelAssignementAccess().getRule();
	}

	//ProcedurePojoAssignement:
	//	dbProcedure=IDENT "->" pojo=PojoType;
	public ProcedurePojoAssignementElements getProcedurePojoAssignementAccess() {
		return (pProcedurePojoAssignement != null) ? pProcedurePojoAssignement : (pProcedurePojoAssignement = new ProcedurePojoAssignementElements());
	}
	
	public ParserRule getProcedurePojoAssignementRule() {
		return getProcedurePojoAssignementAccess().getRule();
	}

	//FunctionPojoAssignement:
	//	dbFunction=IDENT "->" pojo=PojoType;
	public FunctionPojoAssignementElements getFunctionPojoAssignementAccess() {
		return (pFunctionPojoAssignement != null) ? pFunctionPojoAssignement : (pFunctionPojoAssignement = new FunctionPojoAssignementElements());
	}
	
	public ParserRule getFunctionPojoAssignementRule() {
		return getFunctionPojoAssignementAccess().getRule();
	}

	//ImplementsAssignement:
	//	toImplement=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
	//	dbNotTables+=IDENT)+)?;
	public ImplementsAssignementElements getImplementsAssignementAccess() {
		return (pImplementsAssignement != null) ? pImplementsAssignement : (pImplementsAssignement = new ImplementsAssignementElements());
	}
	
	public ParserRule getImplementsAssignementRule() {
		return getImplementsAssignementAccess().getRule();
	}

	//ExtendsAssignement:
	//	toExtends=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?;
	public ExtendsAssignementElements getExtendsAssignementAccess() {
		return (pExtendsAssignement != null) ? pExtendsAssignement : (pExtendsAssignement = new ExtendsAssignementElements());
	}
	
	public ParserRule getExtendsAssignementRule() {
		return getExtendsAssignementAccess().getRule();
	}

	//ImplementsAssignementGenerics:
	//	toImplement=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
	//	dbNotTables+=IDENT)+)?;
	public ImplementsAssignementGenericsElements getImplementsAssignementGenericsAccess() {
		return (pImplementsAssignementGenerics != null) ? pImplementsAssignementGenerics : (pImplementsAssignementGenerics = new ImplementsAssignementGenericsElements());
	}
	
	public ParserRule getImplementsAssignementGenericsRule() {
		return getImplementsAssignementGenericsAccess().getRule();
	}

	//ExtendsAssignementGenerics:
	//	toExtends=[jvmTypes::JvmType|QualifiedName] (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)?;
	public ExtendsAssignementGenericsElements getExtendsAssignementGenericsAccess() {
		return (pExtendsAssignementGenerics != null) ? pExtendsAssignementGenerics : (pExtendsAssignementGenerics = new ExtendsAssignementGenericsElements());
	}
	
	public ParserRule getExtendsAssignementGenericsRule() {
		return getExtendsAssignementGenericsAccess().getRule();
	}

	//Property:
	//	(name="resolve-pojo-on" | name="resolve-pojo-off" | name="database-" database=DatabaseProperty | name="pojogen-"
	//	pojogen=PojogenProperty | name="metagen-" metagen=MetagenProperty | name="daogen-" daogen=DaogenProperty |
	//	name="replace-all-regex" WS+ replaceId=IDENT WS+ regex=PropertyValue | name="replace-all-replacement" WS+
	//	replaceId=IDENT WS+ replacement=PropertyValue) SEMICOLON;
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//DatabaseProperty:
	//	name="is-online" | name="is-offline" | name="has-url" WS+ dbUrl=PropertyValue | name="login-username" WS+
	//	dbUsername=PropertyValue | name="login-password" WS+ dbPassword=PropertyValue | name="in-catalog" WS+
	//	dbCatalog=DatabaseCatalogAssignement | name="active-schema" WS+ dbSchema=DatabaseSchemaAssignement |
	//	name="jdbc-driver" WS+ (COLON dbDriverx=[jvmTypes::JvmType|QualifiedName] | dbDriver=PropertyValue) |
	//	name="ddl-create" WS+ dbExecuteBefore=PropertyValue | name="ddl-drop" WS+ dbExecuteAfter=PropertyValue |
	//	name="index-types" WS+ dbIndexTypes=PropertyValue | name="skip-indexes" | name="skip-functions-procedures" |
	//	name="skip-check-constraints" | name="is-of-type" WS+ dbType=DatabaseTypeAssignement | name="show-database-info" WS+
	//	dbMetaInfo=DatabaseMetaInfoAssignement | name="show-driver-info" WS+ dbDriverInfo=DriverMetaInfoAssignement |
	//	name="show-driver-output" (WS+ dbMethodsCalls+=DriverMethodOutputAssignement)+ | name="debug-level" WS+
	//	debug=DebugLevelAssignement | name="take-comments" | name="lowercase-names" | name="uppercase-names";
	public DatabasePropertyElements getDatabasePropertyAccess() {
		return (pDatabaseProperty != null) ? pDatabaseProperty : (pDatabaseProperty = new DatabasePropertyElements());
	}
	
	public ParserRule getDatabasePropertyRule() {
		return getDatabasePropertyAccess().getRule();
	}

	//PojogenProperty:
	//	name="types-sqltypes" (WS+ sqlTypes+=SqlTypeAssignement)+ | name="types-in-table" WS+ dbTable=IDENT (WS+
	//	sqlTypes+=SqlTypeAssignement)+ | name="types-for-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+
	//	| name="types-for-procedure" WS+ dbProcedure=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ |
	//	name="types-for-function" WS+ dbFunction=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ | name="show-type-for-column"
	//	WS+ dbTable=IDENT WS+ columnType=ShowColumnTypeAssignement | name="show-type-for-procedure" WS+ dbProcedure=IDENT WS+
	//	columnType=ShowColumnTypeAssignement | name="show-type-for-function" WS+ dbFunction=IDENT WS+
	//	columnType=ShowColumnTypeAssignement | name="ignore-tables" (WS+ dbTables+=IDENT)+ | name="only-tables" (WS+
	//	dbTables+=IDENT)+ | name="not-abstract-tables" (WS+ dbTables+=IDENT)+ | name="join-tables" (WS+
	//	joinTables+=JoinTableAssignement)+ | name="ignore-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+ |
	//	name="required-columns" WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+ | name="not-required-columns" WS+ dbTable=IDENT (WS+
	//	dbColumns+=IDENT)+ | name="create-columns" WS+ dbTable=IDENT (WS+ columnTypes+=ColumnTypeAssignement)+ |
	//	name="rename-tables" (WS+ tables+=TableAssignement)+ | name="rename-columns" WS+ dbTable=IDENT (WS+
	//	columns+=ColumnAssignement)+ | name="ignore-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
	//	| name="ignore-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
	//	| name="inherit-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
	//	| name="create-one-to-many" WS+ dbTable=IDENT (WS+ exports+=ExportAssignement)+ // exports
	//	| name="create-many-to-one" WS+ dbTable=IDENT (WS+ imports+=ImportAssignement)+ // imports
	//	| name="table-many-to-many" WS+ dbTable=IDENT (WS+ many2s+=ManyToManyAssignement)+ | name="inherit-discriminator" WS+
	//	dbTable=IDENT WS+ dbColumn=IDENT (WS+ inheritance+=InheritanceAssignement)+ | name="generate-methods" (WS+
	//	methods+=IDENT)+ | name="generate-operators" (WS+ operatorsSuffix=IDENT)? | name="implements-interfaces" WS+
	//	toImplements=ImplementsAssignement | name="extends-class" WS+ toExtends=ExtendsAssignement |
	//	name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics |
	//	name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics | name="generate-wrappers" |
	//	name="generate-validation-annotations" | name="preserve-foreign-keys" (WS+ dbTables+=IDENT)* |
	//	name="implementation-package" WS+ implPackage=IDENT | name="make-it-final" | name="version-column" WS+ version=IDENT
	//	(WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+ dbNotTables+=IDENT)+)? | name="debug-level" WS+
	//	debug=DebugLevelAssignement | name="pojos-for-procedures" (WS+ procPojos+=ProcedurePojoAssignement)+ |
	//	name="pojos-for-functions" (WS+ funPojos+=FunctionPojoAssignement)+ | name="active-filter" WS+
	//	activeFilter=PropertyValue | name="package" WS+ pckg=PropertyValue | name="enum-for-check-constraints" WS+
	//	enumName=IDENT (WS+ dbCheckConstraints+=IDENT)+;
	public PojogenPropertyElements getPojogenPropertyAccess() {
		return (pPojogenProperty != null) ? pPojogenProperty : (pPojogenProperty = new PojogenPropertyElements());
	}
	
	public ParserRule getPojogenPropertyRule() {
		return getPojogenPropertyAccess().getRule();
	}

	//MetaTypeAssignement:
	//	dbColumn=IDENT "->" type=IDENT ("->" extension=IDENT)?;
	public MetaTypeAssignementElements getMetaTypeAssignementAccess() {
		return (pMetaTypeAssignement != null) ? pMetaTypeAssignement : (pMetaTypeAssignement = new MetaTypeAssignementElements());
	}
	
	public ParserRule getMetaTypeAssignementRule() {
		return getMetaTypeAssignementAccess().getRule();
	}

	//MetagenProperty:
	//	name="global-sequence" WS+ sequence=IDENT type=IDENT? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
	//	dbNotTables+=IDENT)+)? | name="table-sequence" WS+ dbTable=IDENT WS+ sequence=IDENT (WS+ type=IDENT)? |
	//	name="global-identity" (WS+ identity=IDENT type=IDENT?)? (WS+ PLUS (WS+ dbTables+=IDENT)+)? (WS+ MINUS (WS+
	//	dbNotTables+=IDENT)+)? | name="table-identity" WS+ dbTable=IDENT WS+ identity=IDENT (WS+ type=IDENT)? |
	//	name="column-meta-type" WS+ dbTable=IDENT (WS+ metaTypes+=MetaTypeAssignement)+ | name="statement-meta-type" WS+
	//	dbStatement=IDENT (WS+ metaTypes+=MetaTypeAssignement)+ | name="make-it-final" | name="like-columns" (WS+
	//	dbTable=IDENT (WS+ dbColumns+=IDENT)+)? | name="not-like-columns" (WS+ dbTable=IDENT (WS+ dbColumns+=IDENT)+)? |
	//	name="generate-sequences" | name="generate-identities" | name="generate-idgenerators" |
	//	name="generate-default-idgenerators" | name="function-result" WS+ dbFunction=IDENT WS+ type=IDENT |
	//	name="function-result-set" WS+ dbFunction=IDENT WS+ dbTable=IDENT | name="procedure-result-set" WS+ dbProcedure=IDENT
	//	WS+ dbTable=IDENT | name="debug-level" WS+ debug=DebugLevelAssignement | name="generate-operators" |
	//	name="optimize-insert" (WS+ dbTables+=IDENT)* | name="optional-features" WS+ dbStatement=IDENT (WS+
	//	optionalFeatures+=IDENT)+ | name="active-filter" WS+ activeFilter=PropertyValue;
	public MetagenPropertyElements getMetagenPropertyAccess() {
		return (pMetagenProperty != null) ? pMetagenProperty : (pMetagenProperty = new MetagenPropertyElements());
	}
	
	public ParserRule getMetagenPropertyRule() {
		return getMetagenPropertyAccess().getRule();
	}

	//DaogenProperty:
	//	name="ignore-tables" (WS+ dbTables+=IDENT)+ | name="only-tables" (WS+ dbTables+=IDENT)* |
	//	name="implementation-package" WS+ implPackage=IDENT | name="implements-interfaces" WS+
	//	toImplements=ImplementsAssignement | name="extends-class" WS+ toExtends=ExtendsAssignement |
	//	name="implements-interfaces-generics" WS+ toImplementsGenerics=ImplementsAssignementGenerics |
	//	name="extends-class-generics" WS+ toExtendsGenerics=ExtendsAssignementGenerics | name="make-it-final" |
	//	name="function-result" WS+ dbFunction=IDENT WS+ resultType=PojoType | name="debug-level" WS+
	//	debug=DebugLevelAssignement | name="active-filter" WS+ activeFilter=PropertyValue | name="package" WS+
	//	pckg=PropertyValue;
	public DaogenPropertyElements getDaogenPropertyAccess() {
		return (pDaogenProperty != null) ? pDaogenProperty : (pDaogenProperty = new DaogenPropertyElements());
	}
	
	public ParserRule getDaogenPropertyRule() {
		return getDaogenPropertyAccess().getRule();
	}

	//PropertyValue:
	//	(REST | IDENT_DOT | IDENT | NUMBER | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
	//	QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR | ESC_CHAR)
	//	=> (REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE
	//	| QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | DOT | AND | OR |
	//	ESC_CHAR)* | STRING_VALUE;
	public PropertyValueElements getPropertyValueAccess() {
		return (pPropertyValue != null) ? pPropertyValue : (pPropertyValue = new PropertyValueElements());
	}
	
	public ParserRule getPropertyValueRule() {
		return getPropertyValueAccess().getRule();
	}

	//PojoDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"pojo" name=IDENT (class=(IDENT | IDENT_DOT) | COLON classx=[jvmTypes::JvmType|QualifiedName]) SEMICOLON;
	public PojoDefinitionElements getPojoDefinitionAccess() {
		return (pPojoDefinition != null) ? pPojoDefinition : (pPojoDefinition = new PojoDefinitionElements());
	}
	
	public ParserRule getPojoDefinitionRule() {
		return getPojoDefinitionAccess().getRule();
	}

	//TableDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"table" name=IDENT table=IDENT SEMICOLON;
	public TableDefinitionElements getTableDefinitionAccess() {
		return (pTableDefinition != null) ? pTableDefinition : (pTableDefinition = new TableDefinitionElements());
	}
	
	public ParserRule getTableDefinitionRule() {
		return getTableDefinitionAccess().getRule();
	}

	//ProcedureDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"procedure" name=IDENT table=IDENT SEMICOLON;
	public ProcedureDefinitionElements getProcedureDefinitionAccess() {
		return (pProcedureDefinition != null) ? pProcedureDefinition : (pProcedureDefinition = new ProcedureDefinitionElements());
	}
	
	public ParserRule getProcedureDefinitionRule() {
		return getProcedureDefinitionAccess().getRule();
	}

	//FunctionDefinition hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"function" name=IDENT table=IDENT SEMICOLON;
	public FunctionDefinitionElements getFunctionDefinitionAccess() {
		return (pFunctionDefinition != null) ? pFunctionDefinition : (pFunctionDefinition = new FunctionDefinitionElements());
	}
	
	public ParserRule getFunctionDefinitionRule() {
		return getFunctionDefinitionAccess().getRule();
	}

	////terminal IDENT_TYPE: IDENT LPAREN NUMBER (COMMA NUMBER)? RPAREN;
	//terminal IDENT_DOT:
	//	IDENT (DOT IDENT)+;
	public TerminalRule getIDENT_DOTRule() {
		return (tIDENT_DOT != null) ? tIDENT_DOT : (tIDENT_DOT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IDENT_DOT"));
	} 

	//terminal IDENT:
	//	("a".."z" | "A".."Z") ("a".."z" | "A".."Z" | "0".."9" | "_" | "=")*;
	public TerminalRule getIDENTRule() {
		return (tIDENT != null) ? tIDENT : (tIDENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IDENT"));
	} 

	//terminal NUMBER:
	//	"0".."9"+;
	public TerminalRule getNUMBERRule() {
		return (tNUMBER != null) ? tNUMBER : (tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER"));
	} 

	////terminal NEGATIVE_NUMBER: '-'('0'..'9')+;
	//terminal ESC_CHAR:
	//	"\\" (COLON | SEMICOLON | STRING | LBRACE | RBRACE | BOR | HASH | AT | PERCENT | DOT | "/");
	public TerminalRule getESC_CHARRule() {
		return (tESC_CHAR != null) ? tESC_CHAR : (tESC_CHAR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ESC_CHAR"));
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal WS:
	//	(" " | "\t" | "\n" | "\r")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal AND:
	//	"&" "&";
	public TerminalRule getANDRule() {
		return (tAND != null) ? tAND : (tAND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "AND"));
	} 

	//terminal OR:
	//	"|" "|";
	public TerminalRule getORRule() {
		return (tOR != null) ? tOR : (tOR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OR"));
	} 

	//terminal COLON:
	//	":";
	public TerminalRule getCOLONRule() {
		return (tCOLON != null) ? tCOLON : (tCOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COLON"));
	} 

	//terminal SEMICOLON:
	//	";";
	public TerminalRule getSEMICOLONRule() {
		return (tSEMICOLON != null) ? tSEMICOLON : (tSEMICOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SEMICOLON"));
	} 

	//terminal STRING:
	//	"$";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal COMMA:
	//	",";
	public TerminalRule getCOMMARule() {
		return (tCOMMA != null) ? tCOMMA : (tCOMMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COMMA"));
	} 

	//terminal MINUS:
	//	"-";
	public TerminalRule getMINUSRule() {
		return (tMINUS != null) ? tMINUS : (tMINUS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MINUS"));
	} 

	//terminal PLUS:
	//	"+";
	public TerminalRule getPLUSRule() {
		return (tPLUS != null) ? tPLUS : (tPLUS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PLUS"));
	} 

	//terminal LPAREN:
	//	"(";
	public TerminalRule getLPARENRule() {
		return (tLPAREN != null) ? tLPAREN : (tLPAREN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LPAREN"));
	} 

	//terminal RPAREN:
	//	")";
	public TerminalRule getRPARENRule() {
		return (tRPAREN != null) ? tRPAREN : (tRPAREN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "RPAREN"));
	} 

	//terminal LBRACE:
	//	"{";
	public TerminalRule getLBRACERule() {
		return (tLBRACE != null) ? tLBRACE : (tLBRACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LBRACE"));
	} 

	//terminal RBRACE:
	//	"}";
	public TerminalRule getRBRACERule() {
		return (tRBRACE != null) ? tRBRACE : (tRBRACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "RBRACE"));
	} 

	//terminal QUESTI:
	//	"?";
	public TerminalRule getQUESTIRule() {
		return (tQUESTI != null) ? tQUESTI : (tQUESTI = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "QUESTI"));
	} 

	//terminal NOT:
	//	"!";
	public TerminalRule getNOTRule() {
		return (tNOT != null) ? tNOT : (tNOT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NOT"));
	} 

	//terminal BAND:
	//	"&";
	public TerminalRule getBANDRule() {
		return (tBAND != null) ? tBAND : (tBAND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BAND"));
	} 

	//terminal BOR:
	//	"|";
	public TerminalRule getBORRule() {
		return (tBOR != null) ? tBOR : (tBOR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOR"));
	} 

	//terminal HASH:
	//	"#";
	public TerminalRule getHASHRule() {
		return (tHASH != null) ? tHASH : (tHASH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HASH"));
	} 

	//terminal AT:
	//	"@";
	public TerminalRule getATRule() {
		return (tAT != null) ? tAT : (tAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "AT"));
	} 

	//terminal CARET:
	//	"^";
	public TerminalRule getCARETRule() {
		return (tCARET != null) ? tCARET : (tCARET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "CARET"));
	} 

	//terminal EQUALS:
	//	"=";
	public TerminalRule getEQUALSRule() {
		return (tEQUALS != null) ? tEQUALS : (tEQUALS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EQUALS"));
	} 

	//terminal LESS_THAN:
	//	"<";
	public TerminalRule getLESS_THANRule() {
		return (tLESS_THAN != null) ? tLESS_THAN : (tLESS_THAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LESS_THAN"));
	} 

	//terminal MORE_THAN:
	//	">";
	public TerminalRule getMORE_THANRule() {
		return (tMORE_THAN != null) ? tMORE_THAN : (tMORE_THAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MORE_THAN"));
	} 

	//terminal PERCENT:
	//	"%";
	public TerminalRule getPERCENTRule() {
		return (tPERCENT != null) ? tPERCENT : (tPERCENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PERCENT"));
	} 

	//terminal DOT:
	//	".";
	public TerminalRule getDOTRule() {
		return (tDOT != null) ? tDOT : (tDOT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOT"));
	} 

	//terminal REST:
	//	!SEMICOLON;
	public TerminalRule getRESTRule() {
		return (tREST != null) ? tREST : (tREST = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "REST"));
	} 

	//terminal STRING_VALUE:
	//	"\""->"\"";
	public TerminalRule getSTRING_VALUERule() {
		return (tSTRING_VALUE != null) ? tSTRING_VALUE : (tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING_VALUE"));
	} 

	//FeatureValue:
	//	(REST | IDENT_DOT | IDENT | NUMBER | WS | COLON | STRING | COMMA | MINUS | PLUS | LPAREN | RPAREN | LBRACE | RBRACE |
	//	QUESTI | NOT | BAND | BOR | HASH | AT | CARET | EQUALS | LESS_THAN | MORE_THAN | PERCENT | AND | OR | ESC_CHAR)+;
	public FeatureValueElements getFeatureValueAccess() {
		return (pFeatureValue != null) ? pFeatureValue : (pFeatureValue = new FeatureValueElements());
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}

	////SimpleType:
	////	(native = ('_void'|'_char'|'_byte'|'_short'|'_int'|'_long'|'_float'|'_double'|'_boolean') |
	////	(COLON (COLON ref=[PojoEntity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName]));
	//PojoType:
	//	(native=("_void" | "_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON
	//	(COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN (COLON gref=[PojoEntity|IDENT] |
	//	gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?) array?="[]"?;
	public PojoTypeElements getPojoTypeAccess() {
		return (pPojoType != null) ? pPojoType : (pPojoType = new PojoTypeElements());
	}
	
	public ParserRule getPojoTypeRule() {
		return getPojoTypeAccess().getRule();
	}

	//PackageDeclaration hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"package" name=(IDENT | IDENT_DOT) ("suffix" suffix=(IDENT | NUMBER))? LBRACE elements+=AbstractPojoEntity* RBRACE;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return (pPackageDeclaration != null) ? pPackageDeclaration : (pPackageDeclaration = new PackageDeclarationElements());
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//Annotation:
	//	type=[jvmTypes::JvmType|QualifiedName] (COLON COLON COLON features+=AnnotationProperty+)?;
	public AnnotationElements getAnnotationAccess() {
		return (pAnnotation != null) ? pAnnotation : (pAnnotation = new AnnotationElements());
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//AnnotationProperty:
	//	COMMA? name=IDENT (COLON (COLON ref=[PojoEntity|IDENT] | type=[jvmTypes::JvmType|QualifiedName]))? (number=NUMBER |
	//	value=STRING_VALUE | constant=IDENT);
	public AnnotationPropertyElements getAnnotationPropertyAccess() {
		return (pAnnotationProperty != null) ? pAnnotationProperty : (pAnnotationProperty = new AnnotationPropertyElements());
	}
	
	public ParserRule getAnnotationPropertyRule() {
		return getAnnotationPropertyAccess().getRule();
	}

	//Entity:
	//	PojoEntity | EnumEntity;
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//AnnotatedEntity:
	//	(AT (AT (AT (AT conflictAnnotations+=Annotation | staticAnnotations+=Annotation) | constructorAnnotations+=Annotation)
	//	| annotations+=Annotation))* entity=Entity;
	public AnnotatedEntityElements getAnnotatedEntityAccess() {
		return (pAnnotatedEntity != null) ? pAnnotatedEntity : (pAnnotatedEntity = new AnnotatedEntityElements());
	}
	
	public ParserRule getAnnotatedEntityRule() {
		return getAnnotatedEntityAccess().getRule();
	}

	//AbstractPojoEntity hidden(ML_COMMENT, SL_COMMENT, WS):
	//	PackageDeclaration | AnnotatedEntity | Import | Implements | Extends | ImplPackage | PojoDao;
	public AbstractPojoEntityElements getAbstractPojoEntityAccess() {
		return (pAbstractPojoEntity != null) ? pAbstractPojoEntity : (pAbstractPojoEntity = new AbstractPojoEntityElements());
	}
	
	public ParserRule getAbstractPojoEntityRule() {
		return getAbstractPojoEntityAccess().getRule();
	}

	//Import hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"import" importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//Implements hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"implements" implements=[jvmTypes::JvmType|QualifiedName] generics?="<<>>"? ("onlyPojos"
	//	onlyPojos+=[PojoEntity|IDENT]*)? ("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)? ("exceptPojos"
	//	exceptPojos+=[PojoEntity|IDENT]*)? ("exceptDaos" exceptDaos+=[PojoDao|IDENT]*)?;
	public ImplementsElements getImplementsAccess() {
		return (pImplements != null) ? pImplements : (pImplements = new ImplementsElements());
	}
	
	public ParserRule getImplementsRule() {
		return getImplementsAccess().getRule();
	}

	//Extends hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"extends" extends=[jvmTypes::JvmType|QualifiedName] generics?="<<>>"? ("onlyPojos" onlyPojos+=[PojoEntity|IDENT]*)?
	//	("onlyDaos" onlyDaos+=[PojoDao|IDENT]*)? ("exceptPojos" exceptPojos+=[PojoEntity|IDENT]*)? ("exceptDaos"
	//	exceptDaos+=[PojoDao|IDENT]*)?;
	public ExtendsElements getExtendsAccess() {
		return (pExtends != null) ? pExtends : (pExtends = new ExtendsElements());
	}
	
	public ParserRule getExtendsRule() {
		return getExtendsAccess().getRule();
	}

	//ImplPackage hidden(ML_COMMENT, SL_COMMENT, WS):
	//	"implementation-package" name=(IDENT | IDENT_DOT);
	public ImplPackageElements getImplPackageAccess() {
		return (pImplPackage != null) ? pImplPackage : (pImplPackage = new ImplPackageElements());
	}
	
	public ParserRule getImplPackageRule() {
		return getImplPackageAccess().getRule();
	}

	//PojoEntityModifier1:
	//	final?="final" | abstract?="abstract";
	public PojoEntityModifier1Elements getPojoEntityModifier1Access() {
		return (pPojoEntityModifier1 != null) ? pPojoEntityModifier1 : (pPojoEntityModifier1 = new PojoEntityModifier1Elements());
	}
	
	public ParserRule getPojoEntityModifier1Rule() {
		return getPojoEntityModifier1Access().getRule();
	}

	//PojoEntityModifier2:
	//	"extends" superType=[PojoEntity|IDENT] | "discriminator" discriminator=(IDENT | NUMBER) | operators="operators"
	//	operatorsSuffix=IDENT? | "serializable" sernum=NUMBER;
	public PojoEntityModifier2Elements getPojoEntityModifier2Access() {
		return (pPojoEntityModifier2 != null) ? pPojoEntityModifier2 : (pPojoEntityModifier2 = new PojoEntityModifier2Elements());
	}
	
	public ParserRule getPojoEntityModifier2Rule() {
		return getPojoEntityModifier2Access().getRule();
	}

	//PojoEntity hidden(ML_COMMENT, SL_COMMENT, WS):
	//	modifiers1+=PojoEntityModifier1* "pojo" name=IDENT modifiers2+=PojoEntityModifier2* LBRACE
	//	features+=PojoAnnotatedProperty* RBRACE;
	public PojoEntityElements getPojoEntityAccess() {
		return (pPojoEntity != null) ? pPojoEntity : (pPojoEntity = new PojoEntityElements());
	}
	
	public ParserRule getPojoEntityRule() {
		return getPojoEntityAccess().getRule();
	}

	//PojoAnnotatedProperty:
	//	(AT (AT (AT setterAnnotations+=Annotation | getterAnnotations+=Annotation) | attributeAnnotations+=Annotation))*
	//	feature=PojoProperty;
	public PojoAnnotatedPropertyElements getPojoAnnotatedPropertyAccess() {
		return (pPojoAnnotatedProperty != null) ? pPojoAnnotatedProperty : (pPojoAnnotatedProperty = new PojoAnnotatedPropertyElements());
	}
	
	public ParserRule getPojoAnnotatedPropertyRule() {
		return getPojoAnnotatedPropertyAccess().getRule();
	}

	//PojoPropertyModifier:
	//	required?="required" | discriminator?="discriminator" | primaryKey?="primaryKey" | "index" index=NUMBER |
	//	version?="optLock" | "updateCol" updateColumn1=IDENT "->" updateColumn2=IDENT | "createCol" createColumn1=IDENT "->"
	//	createColumn2=IDENT;
	public PojoPropertyModifierElements getPojoPropertyModifierAccess() {
		return (pPojoPropertyModifier != null) ? pPojoPropertyModifier : (pPojoPropertyModifier = new PojoPropertyModifierElements());
	}
	
	public ParserRule getPojoPropertyModifierRule() {
		return getPojoPropertyModifierAccess().getRule();
	}

	//PojoProperty hidden(ML_COMMENT, SL_COMMENT, WS):
	//	name=IDENT (native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | (COLON
	//	(COLON (COLON attrs+=[PojoProperty|IDENT]* | ref=[Entity|IDENT]) | type=[jvmTypes::JvmType|QualifiedName])) (LESS_THAN
	//	(COLON gref=[PojoEntity|IDENT] | gtype=[jvmTypes::JvmType|QualifiedName]) MORE_THAN)?) array?="[]"?
	//	modifiers+=PojoPropertyModifier*;
	public PojoPropertyElements getPojoPropertyAccess() {
		return (pPojoProperty != null) ? pPojoProperty : (pPojoProperty = new PojoPropertyElements());
	}
	
	public ParserRule getPojoPropertyRule() {
		return getPojoPropertyAccess().getRule();
	}

	//EnumEntityModifier1:
	//	final?="final";
	public EnumEntityModifier1Elements getEnumEntityModifier1Access() {
		return (pEnumEntityModifier1 != null) ? pEnumEntityModifier1 : (pEnumEntityModifier1 = new EnumEntityModifier1Elements());
	}
	
	public ParserRule getEnumEntityModifier1Rule() {
		return getEnumEntityModifier1Access().getRule();
	}

	//EnumEntityModifier2:
	//	"extends" superType=[PojoEntity|IDENT] | "serializable" sernum=NUMBER;
	public EnumEntityModifier2Elements getEnumEntityModifier2Access() {
		return (pEnumEntityModifier2 != null) ? pEnumEntityModifier2 : (pEnumEntityModifier2 = new EnumEntityModifier2Elements());
	}
	
	public ParserRule getEnumEntityModifier2Rule() {
		return getEnumEntityModifier2Access().getRule();
	}

	//EnumEntity hidden(ML_COMMENT, SL_COMMENT, WS):
	//	modifiers1+=EnumEntityModifier1* "enum" name=IDENT modifiers2+=EnumEntityModifier2* LBRACE features+=EnumProperty*
	//	RBRACE;
	public EnumEntityElements getEnumEntityAccess() {
		return (pEnumEntity != null) ? pEnumEntity : (pEnumEntity = new EnumEntityElements());
	}
	
	public ParserRule getEnumEntityRule() {
		return getEnumEntityAccess().getRule();
	}

	//EnumProperty hidden(ML_COMMENT, SL_COMMENT, WS):
	//	name=IDENT (native=("_char" | "_byte" | "_short" | "_int" | "_long" | "_float" | "_double" | "_boolean") | COLON
	//	(COLON COLON value=(NUMBER | STRING_VALUE) | type=[jvmTypes::JvmType|QualifiedName]));
	public EnumPropertyElements getEnumPropertyAccess() {
		return (pEnumProperty != null) ? pEnumProperty : (pEnumProperty = new EnumPropertyElements());
	}
	
	public ParserRule getEnumPropertyRule() {
		return getEnumPropertyAccess().getRule();
	}

	//PojoDaoModifier:
	//	"extends" superType=[PojoDao|IDENT] | "serializable" sernum=NUMBER;
	public PojoDaoModifierElements getPojoDaoModifierAccess() {
		return (pPojoDaoModifier != null) ? pPojoDaoModifier : (pPojoDaoModifier = new PojoDaoModifierElements());
	}
	
	public ParserRule getPojoDaoModifierRule() {
		return getPojoDaoModifierAccess().getRule();
	}

	//PojoDao hidden(ML_COMMENT, SL_COMMENT, WS):
	//	modifiers1+=PojoEntityModifier1* "dao" name=IDENT (COLON COLON pojoGenerics?=COLON? pojo=[PojoEntity|IDENT])?
	//	modifiers2+=PojoDaoModifier* LBRACE methods+=PojoMethod* toInits+=ToInitMethod* RBRACE;
	public PojoDaoElements getPojoDaoAccess() {
		return (pPojoDao != null) ? pPojoDao : (pPojoDao = new PojoDaoElements());
	}
	
	public ParserRule getPojoDaoRule() {
		return getPojoDaoAccess().getRule();
	}

	//PojoMethodModifier:
	//	callFunction?="callFunction" | callUpdate?="callUpdate" | callQuery?="callQuery" |
	//	callQueryFunction?="callQueryFunction" | callSelectFunction?="callSelectFunction";
	public PojoMethodModifierElements getPojoMethodModifierAccess() {
		return (pPojoMethodModifier != null) ? pPojoMethodModifier : (pPojoMethodModifier = new PojoMethodModifierElements());
	}
	
	public ParserRule getPojoMethodModifierRule() {
		return getPojoMethodModifierAccess().getRule();
	}

	//PojoMethod hidden(ML_COMMENT, SL_COMMENT, WS):
	//	modifiers1+=PojoMethodModifier* name=IDENT (type=PojoType COLON COLON COLON args+=PojoMethodArg+)?;
	public PojoMethodElements getPojoMethodAccess() {
		return (pPojoMethod != null) ? pPojoMethod : (pPojoMethod = new PojoMethodElements());
	}
	
	public ParserRule getPojoMethodRule() {
		return getPojoMethodAccess().getRule();
	}

	//ToInitMethod hidden(ML_COMMENT, SL_COMMENT, WS):
	//	name=IDENT COLON COLON COLON args+=PojoMethodArg+;
	public ToInitMethodElements getToInitMethodAccess() {
		return (pToInitMethod != null) ? pToInitMethod : (pToInitMethod = new ToInitMethodElements());
	}
	
	public ParserRule getToInitMethodRule() {
		return getToInitMethodAccess().getRule();
	}

	//PojoMethodArg hidden(ML_COMMENT, SL_COMMENT, WS):
	//	name=IDENT type=PojoType;
	public PojoMethodArgElements getPojoMethodArgAccess() {
		return (pPojoMethodArg != null) ? pPojoMethodArg : (pPojoMethodArg = new PojoMethodArgElements());
	}
	
	public ParserRule getPojoMethodArgRule() {
		return getPojoMethodArgAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName ".*"?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return (pQualifiedNameWithWildcard != null) ? pQualifiedNameWithWildcard : (pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements());
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	////     (REST|IDENT_DOT|IDENT|NUMBER|WS|COLON|SEMICOLON|STRING|COMMA|MINUS|PLUS|LPAREN|RPAREN|LBRACE|RBRACE|QUESTI|NOT|BAND|BOR|HASH|AT|CARET|EQUALS|LESS_THAN|MORE_THAN|PERCENT|AND|OR|ESC_CHAR)
	//QualifiedName:
	//	IDENT | IDENT_DOT;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
}
